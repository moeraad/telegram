{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","sender_id","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","getOutputDeviceId","filter","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","currentCall","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","inputVideoStream","getVideoTracks","handleEnd","call","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","closeCallPanel","setTimeout","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","exitFullscreen","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","p2pAudioEnabled","handleVideo","videoState","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","p2pGetMediaState","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOff","CallEnd","p2pIsCallReady","Mic","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","getListRef","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","handleGetText","parent","postMessage","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleExport","disableOnUpload","this_o","uploaded_url","uploadMedia","response","json","obj","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.ebb02600.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Animator {\r\n    constructor(duration, options = []) {\r\n        this.options = options;\r\n        this.duration = duration;\r\n    }\r\n\r\n    static outSine(n) {\r\n        return Math.sin((n * Math.PI) / 2);\r\n    }\r\n\r\n    start = () => {\r\n        this.stopped = false;\r\n        this.id = requestAnimationFrame(this.startInternal);\r\n    };\r\n\r\n    startInternal = timeStamp => {\r\n        const { startTime, duration } = this;\r\n\r\n        this.startTime = timeStamp;\r\n        this.endTime = startTime + duration;\r\n        this.draw(timeStamp);\r\n    };\r\n\r\n    draw = now => {\r\n        const { stopped, duration, startTime, options } = this;\r\n\r\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\r\n            this.stopped = true;\r\n        }\r\n\r\n        if (stopped) return;\r\n\r\n        const time = Math.min(now - startTime, duration);\r\n        const p = duration === 0 ? 1.0 : time / duration;\r\n        const val = Animator.outSine(p);\r\n\r\n        options.forEach(x => {\r\n            const { from, to, func } = x;\r\n            x.last = from + (to - from) * val;\r\n            func(x.last);\r\n        });\r\n\r\n        this.id = requestAnimationFrame(this.draw);\r\n    };\r\n\r\n    stop = () => {\r\n        this.stopped = true;\r\n        cancelAnimationFrame(this.id);\r\n    };\r\n}\r\n\r\nexport default Animator;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerPreview.css';\r\n\r\nclass StickerPreview extends React.Component {\r\n    state = {\r\n        emoji: null,\r\n        prevPropsSticker: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { sticker } = props;\r\n        const { prevPropsSticker } = state;\r\n\r\n        if (sticker && prevPropsSticker) {\r\n            return {\r\n                prevPropsSticker: sticker,\r\n                emoji: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker && sticker !== prevProps.sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    loadStickerEmojis = sticker => {\r\n        const { sticker: file } = sticker;\r\n        const { id } = file;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getStickerEmojis',\r\n            sticker: { '@type': 'inputFileId', id }\r\n        }).then(result => {\r\n            if (this.props.sticker === sticker) {\r\n                this.setState({\r\n                    emoji: result.emojis.join(' ')\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sticker } = this.props;\r\n        const { emoji } = this.state;\r\n\r\n        if (!sticker) return null;\r\n\r\n        return (\r\n            <div className='sticker-preview'>\r\n                <div className='sticker-preview-emoji'>{emoji}</div>\r\n                <Sticker\r\n                    sticker={sticker}\r\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\r\n                    source={StickerSourceEnum.PREVIEW}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerPreview.propTypes = {\r\n    sticker: PropTypes.object\r\n};\r\n\r\nexport default StickerPreview;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\r\n    'Smile'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getDisplayName } from './Utils/HOC';\r\nimport { MAX_SNACK } from './Constants';\r\n\r\nfunction withSnackbarNotifications(WrappedComponent) {\r\n    class NotificationsWrapper extends React.Component {\r\n        render() {\r\n            return (\r\n                <SnackbarProvider maxSnack={MAX_SNACK}>\r\n                    <WrappedComponent {...this.props} />\r\n                </SnackbarProvider>\r\n            );\r\n        }\r\n    }\r\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\r\n\r\n    return NotificationsWrapper;\r\n}\r\n\r\nexport default withSnackbarNotifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getFormattedText } from '../../Utils/Message';\r\nimport './AlertDialog.css';\r\n\r\nclass AlertDialog extends React.Component {\r\n\r\n    handleClose = result => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(result);\r\n    };\r\n\r\n    render() {\r\n        const { params, t } = this.props;\r\n        if (!params) return null;\r\n\r\n        let { title, message, ok, cancel } = params;\r\n\r\n        if (message['@type'] === 'formattedText') {\r\n            message = getFormattedText(message, t, {});\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    { cancel && (\r\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\r\n                            {cancel}\r\n                        </Button>\r\n                    )}\r\n                    { ok && (\r\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\r\n                            {ok}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nAlertDialog.propTypes = {\r\n    params: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(AlertDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './BlockSenderDialog.css';\r\n\r\nclass BlockSenderDialog extends React.Component {\r\n    state = {\r\n        reportSpam: true,\r\n        deleteChat: true\r\n    };\r\n\r\n    handleReportSpamChange = () => {\r\n        const { reportSpam } = this.state;\r\n\r\n        this.setState({\r\n            reportSpam: !reportSpam\r\n        });\r\n    };\r\n\r\n    handleDeleteChatChange = () => {\r\n        const { deleteChat } = this.state;\r\n\r\n        this.setState({\r\n            deleteChat: !deleteChat\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sender, onClose, t } = this.props;\r\n        if (!sender) return null;\r\n\r\n        const { reportSpam, deleteChat } = this.state;\r\n\r\n        let title = null;\r\n        let text = null;\r\n        const entities = [];\r\n        let reportText = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                const { user_id } = sender;\r\n\r\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\r\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\r\n                text = getSimpleMarkupEntities(text, entities);\r\n                reportText = LStore.getString('BlockContact');\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                const { chat_id } = sender;\r\n\r\n                const location = getChatLocation(chat_id);\r\n                if (location) {\r\n                    title = LStore.getString('ReportUnrelatedGroup');\r\n                    if (location.address) {\r\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\r\n                        text = getSimpleMarkupEntities(text, entities);\r\n                    } else {\r\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\r\n                    }\r\n                } else {\r\n                    title = LStore.getString('ReportSpamTitle');\r\n                    if (isChannelChat(chat_id)) {\r\n                        text = LStore.getString('ReportSpamAlertChannel');\r\n                    } else {\r\n                        text = LStore.getString('ReportSpamAlertGroup');\r\n                    }\r\n                }\r\n                reportText = LStore.getString('ReportChat');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\r\n                    </DialogContentText>\r\n                    { sender['@type'] === 'messageSenderUser' && (\r\n                        <div className='block-sender-params'>\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\r\n                                label={t('DeleteReportSpam')}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\r\n                                label={t('DeleteThisChat')}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\r\n                        {reportText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nBlockSenderDialog.propTypes = {\r\n    sender: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(BlockSenderDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\n\r\nclass ClearHistoryDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\r\n\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <div>\r\n                            <DialogContentText id='delete-dialog-description'>\r\n                                Are you sure you want clear history?\r\n                            </DialogContentText>\r\n                            {\r\n                                canBeDeletedForAllUsers && (\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                        }\r\n                                        label={\r\n                                            isPrivateChat(chatId)\r\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\r\n                                                : 'Delete for all members'\r\n                                        }\r\n                                        style={{ marginLeft: 0 }}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nClearHistoryDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ClearHistoryDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport OptionStore from '../Stores/OptionStore';\r\n\r\nexport function sprintf(t, key, ...args) {\r\n    return t(key, { postProcess: 'sprintf', sprintf: args });\r\n}\r\n\r\nlet cyrillicInput = null;\r\n\r\nfunction getCyrillicInputMap() {\r\n    return new Map([\r\n        ['q', 'й'],\r\n        ['w', 'ц'],\r\n        ['e', 'у'],\r\n        ['r', 'к'],\r\n        ['t', 'е'],\r\n        ['y', 'н'],\r\n        ['u', 'г'],\r\n        ['i', 'ш'],\r\n        ['o', 'щ'],\r\n        ['p', 'з'],\r\n        ['[', 'х'],\r\n        [']', 'ъ'],\r\n        ['a', 'ф'],\r\n        ['s', 'ы'],\r\n        ['d', 'в'],\r\n        ['f', 'а'],\r\n        ['g', 'п'],\r\n        ['h', 'р'],\r\n        ['j', 'о'],\r\n        ['k', 'л'],\r\n        ['l', 'д'],\r\n        [';', 'ж'],\r\n        [\"'\", 'э'],\r\n        ['\\\\', 'ё'],\r\n        ['z', 'я'],\r\n        ['x', 'ч'],\r\n        ['c', 'с'],\r\n        ['v', 'м'],\r\n        ['b', 'и'],\r\n        ['n', 'т'],\r\n        ['m', 'ь'],\r\n        [',', 'б'],\r\n        ['.', 'ю']\r\n    ]);\r\n}\r\n\r\nfunction isCyrillicPackId(packId) {\r\n    if (!packId) return false;\r\n\r\n    const { value } = packId;\r\n    if (!value) return false;\r\n\r\n    return value.value === 'ru';\r\n}\r\n\r\nfunction getCyrillicInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    const currentPackId = OptionStore.get('language_pack_id');\r\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\r\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\r\n    if (!hasCyrillicPackId) return null;\r\n\r\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (cyrillicInput.has(input[i])) {\r\n            output += cyrillicInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nlet latinInput = null;\r\n\r\nfunction getLatinInputMap() {\r\n    return new Map([\r\n        ['й', 'q'],\r\n        ['ц', 'w'],\r\n        ['у', 'e'],\r\n        ['к', 'r'],\r\n        ['е', 't'],\r\n        ['н', 'y'],\r\n        ['г', 'u'],\r\n        ['ш', 'i'],\r\n        ['щ', 'o'],\r\n        ['з', 'p'],\r\n        ['х', '['],\r\n        ['ъ', ']'],\r\n        ['ф', 'a'],\r\n        ['ы', 's'],\r\n        ['в', 'd'],\r\n        ['а', 'f'],\r\n        ['п', 'g'],\r\n        ['р', 'h'],\r\n        ['о', 'j'],\r\n        ['л', 'k'],\r\n        ['д', 'l'],\r\n        ['ж', ';'],\r\n        ['э', \"'\"],\r\n        ['ё', '\\\\'],\r\n        ['я', 'z'],\r\n        ['ч', 'x'],\r\n        ['с', 'c'],\r\n        ['м', 'v'],\r\n        ['и', 'b'],\r\n        ['т', 'n'],\r\n        ['ь', 'm'],\r\n        ['б', ','],\r\n        ['ю', '.']\r\n    ]);\r\n}\r\n\r\nfunction getLatinInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    latinInput = latinInput || getLatinInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (latinInput.has(input[i])) {\r\n            output += latinInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nexport { getCyrillicInput, getLatinInput };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { sprintf } from '../../Utils/Language';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass DeleteMessagesDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageIds } = props;\r\n        const { prevChatId, prevMessageIds } = state;\r\n\r\n        let canBeDeletedForAllUsers = true;\r\n        for (let messageId of messageIds) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_for_all_users) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageIds,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageIds, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        const count = messageIds ? messageIds.length : 0;\r\n\r\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\r\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\r\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {confirm}\r\n                    </DialogContentText>\r\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\r\n                            label={\r\n                                isPrivateChat(chatId)\r\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\r\n                                    : t('DeleteForAll')\r\n                            }\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDeleteMessagesDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(DeleteMessagesDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './InputPasswordDialog.css';\r\n\r\nclass InputPasswordDialog extends React.Component {\r\n\r\n    state = { };\r\n\r\n    handleChange = e => {\r\n        this.password = e.target.value;\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        const { showPassword } = this.state;\r\n\r\n        this.setState({ showPassword: !showPassword });\r\n    };\r\n\r\n    getErrorMessage = error => {\r\n        const { t } = this.props;\r\n\r\n        if (!error) return null;\r\n\r\n        if (error.message === 'PASSWORD_HASH_INVALID') {\r\n            return t('InvalidPassword');\r\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\r\n            const str = error.message.replace('Too Many Requests: retry after ', '');\r\n            try {\r\n                const time = parseInt(str);\r\n                const timeString = time < 60\r\n                    ? LStore.formatPluralString('Seconds', time)\r\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\r\n\r\n                return LStore.formatString('FloodWaitTime', timeString);\r\n            } catch (e) {\r\n                return error.message;\r\n            }\r\n        }\r\n\r\n        return error.message;\r\n    }\r\n\r\n    render() {\r\n        const { state, error, onClose, t } = this.props;\r\n        if (!state) return null;\r\n\r\n        const { showPassword, loading } = this.state;\r\n        const { password_hint: passwordHint } = state;\r\n\r\n        const errorMessage = this.getErrorMessage(error);\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {t('PleaseEnterCurrentPasswordTransfer')}\r\n                    </DialogContentText>\r\n                    <FormControl className='auth-input' fullWidth>\r\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\r\n                        <Input\r\n                            fullWidth\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            id='adornment-password'\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            disabled={loading}\r\n                            error={Boolean(error)}\r\n                            onChange={this.handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position='end'>\r\n                                    <IconButton\r\n                                        aria-label='Toggle password visibility'\r\n                                        onClick={this.handleClickShowPassword}\r\n                                        edge='end'>\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\r\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nInputPasswordDialog.propTypes = {\r\n    state: PropTypes.object,\r\n    error: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputPasswordDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\n\r\nclass LeaveChatDialog extends React.Component {\r\n    getDeleteDialogText = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return `Are you sure you want to leave group ${chat.title}?`;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel\r\n                        ? `Are you sure you want to leave channel ${chat.title}?`\r\n                        : `Are you sure you want to leave group ${chat.title}?`;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            {this.getDeleteDialogText(chatId, t)}\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nLeaveChatDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './LeaveVoiceChatDialog.css';\r\n\r\nclass LeaveVoiceChatDialog extends React.Component {\r\n    state = {\r\n        discard: false\r\n    };\r\n\r\n    handleDiscardChange = () => {\r\n        const { discard } = this.state;\r\n\r\n        this.setState({\r\n            discard: !discard\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n        const { discard } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.getString('VoipGroupLeaveAlertText')}\r\n                    </DialogContentText>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\r\n                        label={t('VoipGroupEndChat')}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\r\n                        {t('VoipGroupLeave')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nLeaveVoiceChatDialog.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './NotificationTimer.css';\r\n\r\nclass NotificationTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: this.props.timeout / 1000,\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime = new Date();\r\n        this.expire = this.startTime;\r\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\r\n        this.timerId = setInterval(this.handleTimer, 100);\r\n    }\r\n\r\n    handleTimer = () => {\r\n        const now = new Date();\r\n        const seconds = this.expire - now;\r\n        const value = 100 - (seconds / this.props.timeout) * 100;\r\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\r\n        this.setState({\r\n            seconds: seconds > 0 ? seconds : 0,\r\n            value: value > 100 ? 100 : value\r\n        });\r\n\r\n        if (now >= this.expire) {\r\n            if (this.timerId) {\r\n                clearInterval(this.timerId);\r\n                this.timerId = null;\r\n\r\n                const { onTimeout } = this.props;\r\n                if (onTimeout) {\r\n                    onTimeout();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, seconds } = this.state;\r\n\r\n        return (\r\n            <div className='notification-timer'>\r\n                <div className='notification-timer-text'>\r\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\r\n                </div>\r\n                <div className='notification-timer-progress'>\r\n                    <CircularProgress size={32} value={100 - value} variant='static' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationTimer.propTypes = {\r\n    timeout: PropTypes.number.isRequired,\r\n    onTimeout: PropTypes.func\r\n};\r\n\r\nexport default NotificationTimer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenGameDialog.css';\r\n\r\nclass OpenGameDialog extends React.Component {\r\n    render() {\r\n        const { game, params, onClose, t } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { userId } = params;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('AppName')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenGameDialog.propTypes = {\r\n    game: PropTypes.object,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenGameDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenUrlDialog.css';\r\n\r\nclass OpenUrlDialog extends React.Component {\r\n    render() {\r\n        const { url, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './PinMessageDialog.css';\r\n\r\nclass PinMessageDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n        const { prevChatId, prevMessageId } = state;\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageId,\r\n                revoke: !isPrivateChat(chatId)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { revoke } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        let text = '';\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                text = t('PinMessageAlertChat');\r\n                break;\r\n            }\r\n            case 'chatTypeBasicGroup': {\r\n                text = t('PinMessageAlert');\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isChannelChat(chatId)) {\r\n                    text = t('PinMessageAlertChannel');\r\n                } else {\r\n                    text = t('PinMessageAlert');\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                    <>\r\n                        {\r\n                            isPrivateChat(chatId) && (\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                    }\r\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\r\n                                />\r\n                            )\r\n                        }\r\n                    </>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(PinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './ReportChatDialog.css';\r\n\r\nclass ReportChatDialog extends React.Component {\r\n\r\n    handleReport = type => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(true, { '@type': type });\r\n    }\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\r\n                <div className='report-chat-dialog-content'>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\r\n                        <ListItemText primary={t('ReportChatSpam')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\r\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\r\n                        <ListItemText primary={t('ReportChatViolence')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\r\n                        <ListItemText primary={t('ReportChatPornography')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\r\n                        <ListItemText primary={t('ReportChatChild')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\r\n                        <ListItemText primary={t('ReportChatOther')}/>\r\n                    </ListItem>\r\n                </div>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('ReportChat')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nReportChatDialog.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ReportChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './RequestUrlDialog.css';\r\n\r\nclass RequestUrlDialog extends React.Component {\r\n    state = {\r\n        value1: true,\r\n        value2: true\r\n    };\r\n\r\n    handleValue1Change = () => {\r\n        const { value1 } = this.state;\r\n\r\n        this.setState({ value1: !value1 });\r\n    };\r\n\r\n    handleValue2Change = () => {\r\n        const { value2 } = this.state;\r\n\r\n        this.setState({ value2: !value2 });\r\n    };\r\n\r\n    render() {\r\n        const { url, params, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        const { value1, value2 } = this.state;\r\n\r\n        const { result } = params;\r\n        if (!result) return null;\r\n\r\n        const { domain, bot_user_id, request_write_access } = result;\r\n\r\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\r\n        const entities1 = [];\r\n        text1 = getSimpleMarkupEntities(text1, entities1);\r\n        const option1 = (\r\n            <FormControlLabel\r\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\r\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\r\n            />\r\n        );\r\n\r\n        let option2 = null;\r\n        if (request_write_access) {\r\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\r\n            const entities2 = [];\r\n            text2 = getSimpleMarkupEntities(text2, entities2);\r\n            option2 = (\r\n                <FormControlLabel\r\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\r\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                    {option1}\r\n                    {option2}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nRequestUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RequestUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './UnpinMessageDialog.css';\r\n\r\nclass UnpinMessageDialog extends React.Component {\r\n\r\n    render() {\r\n        const { messageId, onClose, t } = this.props;\r\n\r\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nUnpinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(UnpinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from '../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AlertDialog from './Popup/AlertDialog';\r\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\r\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\r\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\r\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\r\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\r\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\r\nimport NotificationTimer from './Additional/NotificationTimer';\r\nimport OpenGameDialog from './Popup/OpenGameDialog';\r\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\r\nimport PinMessageDialog from './Popup/PinMessageDialog';\r\nimport ReportChatDialog from './Popup/ReportChatDialog';\r\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\r\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\r\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\r\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\r\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\r\nimport { openGameInBrowser } from '../Utils/Game';\r\nimport { reportChat } from '../Actions/Chat';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport CloseIcon from '../Assets/Icons/Close';\r\n\r\nclass Actions extends React.PureComponent {\r\n    state = {\r\n        leaveChat: null,\r\n        clearHistory: null,\r\n        deleteMessages: null,\r\n        pinMessage: null,\r\n        unpinMessage: null,\r\n        alert: null,\r\n        openUrlAlert: null,\r\n        openGameAlert: null,\r\n        requestUrlAlert: null,\r\n        inputPasswordAlert: null,\r\n        requestBlockSenderAlert: null,\r\n        leaveVoiceChatAlert: null,\r\n        reportChatAlert: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\r\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\r\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\r\n    }\r\n\r\n    onClientUpdateReportChat = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({ reportChatAlert: { chatId, messageIds }});\r\n    };\r\n\r\n    onClientUpdateBlockSender = update => {\r\n        const { sender_id } = update;\r\n\r\n        this.setState({ requestBlockSenderAlert: { sender: sender_id }});\r\n    }\r\n\r\n    onClientUpdateInputPasswordAlert = update => {\r\n        const { state, onPassword } = update;\r\n\r\n        this.setState({ inputPasswordAlert: { state, onPassword } });\r\n    }\r\n\r\n    onClientUpdateLeaveVoiceChatAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ leaveVoiceChatAlert: { params }});\r\n    }\r\n\r\n    onClientUpdateOpenGameAlert = update => {\r\n        const { game, params } = update;\r\n\r\n        if (params && params.isVerified) {\r\n            this.openGameAlert = { game, params };\r\n            this.handleOpenGameContinue(null, true);\r\n        } else {\r\n            this.setState({ openGameAlert: { game, params } });\r\n        }\r\n    }\r\n\r\n    onClientUpdateOpenUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        if (params && !params.ask) {\r\n            this.openUrlAlert = { url, params };\r\n            this.handleOpenUrlContinue(null, true);\r\n        } else {\r\n            this.setState({ openUrlAlert: { url, params } });\r\n        }\r\n    };\r\n\r\n    onClientUpdateRequestUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        this.setState({ requestUrlAlert: { url, params } });\r\n    }\r\n\r\n    onClientUpdateSnackbar = update => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n        const { message, action } = update;\r\n\r\n        enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: action(closeSnackbar)\r\n        });\r\n    };\r\n\r\n    onClientUpdateAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ alert: { params } });\r\n    };\r\n\r\n    onClientUpdateUnpinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.unpinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handleUnpinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                unpinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdatePinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.pinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handlePinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                pinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateDeleteMessages = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({\r\n            deleteMessages: {\r\n                chatId,\r\n                messageIds\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ leaveChat : { chatId } });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ clearHistory : { chatId } });\r\n    };\r\n\r\n    handleClearHistoryContinue = (result, revoke) => {\r\n        const { t } = this.props;\r\n\r\n        const { clearHistory } = this.state;\r\n        if (!clearHistory) return;\r\n\r\n        this.setState({ clearHistory: null });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const message = t('HistoryClearedUndo');\r\n        const request = {\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: false,\r\n            revoke\r\n        };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\r\n    };\r\n\r\n    handleLeaveContinue = async (result, undo = true) => {\r\n        const { leaveChat } = this.state || this;\r\n        if (!leaveChat) return;\r\n\r\n        const { chatId } = leaveChat;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        this.leaveChat = null;\r\n        this.setState({ leaveChat: null });\r\n\r\n        if (!result) return;\r\n\r\n        const message = this.getLeaveChatNotification(chatId);\r\n        const requests = [];\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isCreator(chatId)) {\r\n                    requests.push({\r\n                        '@type': 'setChatMemberStatus',\r\n                        chat_id: chatId,\r\n                        user_id: UserStore.getMyId(),\r\n                        status: {\r\n                            '@type': 'chatMemberStatusCreator',\r\n                            is_member: false\r\n                        }\r\n                    });\r\n                } else if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n        }\r\n\r\n        if (undo) {\r\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\r\n        } else {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDeleteMessagesContinue = (result, revoke) => {\r\n        const { deleteMessages } = this.state;\r\n        if (!deleteMessages) return;\r\n\r\n        const { chatId, messageIds } = deleteMessages;\r\n\r\n        clearSelection();\r\n        this.setState({ deleteMessages: null });\r\n\r\n        if (!result) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: messageIds,\r\n            revoke\r\n        });\r\n    };\r\n\r\n    getLeaveChatNotification = chatId => {\r\n        const { t } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return t('ChatDeletedUndo');\r\n        if (!chat.type) return t('ChatDeletedUndo');\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\r\n                }\r\n\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n        }\r\n\r\n        return t('ChatDeletedUndo');\r\n    };\r\n\r\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\r\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\r\n        if (!clientUpdateType) return;\r\n\r\n        const key = `${clientUpdateType} chatId=${chatId}`;\r\n        const action = async () => {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n                closeSnackbar(snackKey);\r\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n            }\r\n        };\r\n        const cancel = () => {\r\n            closeSnackbar(snackKey);\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n        };\r\n\r\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\r\n\r\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\r\n        const snackKey = enqueueSnackbar(message, {\r\n            persist: true,\r\n            key,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='progress'\r\n                    color='inherit'\r\n                    className='progress-button'>\r\n                    <NotificationTimer\r\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\r\n                        onTimeout={() => {\r\n                            action();\r\n                            AppStore.removeScheduledAction(key);\r\n                        }}/>\r\n                </IconButton>,\r\n                <Button\r\n                    key='undo'\r\n                    color='primary'\r\n                    size='small'\r\n                    onClick={() => {\r\n                        cancel();\r\n                        AppStore.removeScheduledAction(key);\r\n                    }}>\r\n                    {t('Undo')}\r\n                </Button>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePinMessageContinue = (result, revoke) => {\r\n        let { pinMessage } = this.state;\r\n        pinMessage = pinMessage || this.pinMessage;\r\n        if (!pinMessage) return;\r\n\r\n        const { chatId, messageId } = pinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ pinMessage: null });\r\n        this.pinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        pinMessageAction(chatId, messageId, false, !revoke);\r\n    };\r\n\r\n    handleUnpinMessageContinue = async result => {\r\n        let { unpinMessage } = this.state;\r\n        unpinMessage = unpinMessage || this.unpinMessage;\r\n        if (!unpinMessage) return;\r\n\r\n        const { chatId, messageId } = unpinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ unpinMessage: null });\r\n        this.unpinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        if (canPinMessages(chatId)) {\r\n            if (messageId) {\r\n                await unpinMessageAction(chatId, messageId);\r\n            } else {\r\n                closePinned();\r\n\r\n                await unpinAllMessages(chatId);\r\n            }\r\n        } else {\r\n            closePinned();\r\n\r\n            const data = ChatStore.getClientData(chatId);\r\n            await TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateSetChatClientData',\r\n                chatId,\r\n                clientData: { ...data, ...{ unpinned: true } }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAlertContinue = result => {\r\n        const { alert } = this.state;\r\n        if (!alert) return;\r\n\r\n        const { params } = alert;\r\n        this.setState({ alert: null });\r\n\r\n        const { onResult } = params;\r\n        onResult && onResult(result);\r\n    };\r\n\r\n    handleOpenUrlContinue = (event, result) => {\r\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\r\n\r\n        this.setState({ openUrlAlert: null });\r\n        this.openUrlAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { url, onClick } = openUrlAlert;\r\n        if (!url) return;\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        } else {\r\n            event && event.preventDefault();\r\n\r\n            const newWindow = window.open();\r\n            newWindow.opener = null;\r\n            newWindow.location = url;\r\n        }\r\n    };\r\n\r\n    handleOpenGameContinue = (event, result) => {\r\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\r\n\r\n        this.setState({ openGameAlert: null });\r\n        this.openGameAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { game, params } = openGameAlert;\r\n        if (!game) return;\r\n        if (!params) return;\r\n\r\n        const { url, message } = params;\r\n        if (!url) return;\r\n        if (!message) return;\r\n\r\n        openGameInBrowser(url, message);\r\n    };\r\n\r\n    handleRequestUrlContinue = async (event, open, values) => {\r\n        const { requestUrlAlert } = this.state;\r\n        this.setState({ requestUrlAlert: null });\r\n\r\n        if (!open) return;\r\n\r\n        const { params } = requestUrlAlert;\r\n        if (!params) return;\r\n\r\n        const { result, chatId, messageId, buttonId } = params;\r\n        if (!result) return;\r\n\r\n        if (!values.value1) {\r\n            this.openUrlAlert = { url: result.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        } else {\r\n            const httpUrl = await TdLibController.send({\r\n                '@type': 'getLoginUrl',\r\n                chat_id: chatId,\r\n                message_id: messageId,\r\n                button_id: buttonId,\r\n                allow_write_access: result.request_write_access && values.value2\r\n            });\r\n\r\n            this.openUrlAlert = { url: httpUrl.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        }\r\n    };\r\n\r\n    handleInputPasswordContinue = (result, password) => {\r\n        const { inputPasswordAlert } = this.state;\r\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\r\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\r\n\r\n        if (!result) {\r\n            onCloseDialog();\r\n            return;\r\n        }\r\n\r\n        const { onPassword } = inputPasswordAlert;\r\n        onPassword && onPassword(password, onCloseDialog, onError);\r\n    };\r\n\r\n    handleBlockSenderContinue = async (result, params) => {\r\n        const { requestBlockSenderAlert } = this.state;\r\n\r\n        this.setState({ requestBlockSenderAlert: null });\r\n\r\n        if (!result) {\r\n            return;\r\n        }\r\n\r\n        const { sender } = requestBlockSenderAlert;\r\n        if (!sender) return;\r\n\r\n        let chatId = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                blockSender(sender);\r\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                chatId = sender.chat_id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!params || params.reportSpam) {\r\n            const reason = getChatLocation(chatId)\r\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\r\n                : { '@type': 'chatReportReasonSpam' };\r\n\r\n            reportChat(chatId, reason);\r\n        }\r\n\r\n        if (!params || params.deleteChat) {\r\n            const deleteChat = canDeleteChat(chatId);\r\n            if (!deleteChat) return;\r\n\r\n            this.leaveChat = { chatId };\r\n            this.handleLeaveContinue(true, false);\r\n        }\r\n    };\r\n\r\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\r\n        const { leaveVoiceChatAlert } = this.state;\r\n\r\n        this.setState({ leaveVoiceChatAlert: null });\r\n\r\n        const { params } = leaveVoiceChatAlert;\r\n        if (!params) return;\r\n\r\n        const { onResult } = params;\r\n\r\n        onResult && onResult(resultParams);\r\n    };\r\n\r\n    handleReportChatContinue = (result, params) => {\r\n        const { t } = this.props;\r\n        const { reportChatAlert } = this.state;\r\n\r\n        this.setState({ reportChatAlert: null });\r\n        if (!result) return;\r\n\r\n        const { chatId, messageIds } = reportChatAlert;\r\n\r\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\r\n            return (\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => { closeSnackbar(snackKey); }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            )\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            leaveChat,\r\n            clearHistory,\r\n            deleteMessages,\r\n            pinMessage,\r\n            unpinMessage,\r\n            alert,\r\n            openUrlAlert,\r\n            openGameAlert,\r\n            requestUrlAlert,\r\n            inputPasswordAlert,\r\n            requestBlockSenderAlert,\r\n            leaveVoiceChatAlert,\r\n            reportChatAlert\r\n        } = this.state;\r\n        if (leaveChat) {\r\n            const { chatId } = leaveChat;\r\n\r\n            return (\r\n                <LeaveChatDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleLeaveContinue} />\r\n                );\r\n        } else if (clearHistory) {\r\n            const { chatId } = clearHistory;\r\n\r\n            return (\r\n                <ClearHistoryDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleClearHistoryContinue} />\r\n                );\r\n        } else if (deleteMessages) {\r\n            const { chatId, messageIds } = deleteMessages;\r\n\r\n            return (\r\n                <DeleteMessagesDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleDeleteMessagesContinue} />\r\n                );\r\n        } else if (pinMessage) {\r\n            const { chatId, messageId } = pinMessage;\r\n\r\n            return (\r\n                <PinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handlePinMessageContinue} />\r\n            );\r\n        } else if (unpinMessage) {\r\n            const { chatId, messageId } = unpinMessage;\r\n\r\n            return (\r\n                <UnpinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handleUnpinMessageContinue} />\r\n            );\r\n        } else if (alert) {\r\n            const { params } = alert;\r\n\r\n            return (\r\n                <AlertDialog\r\n                    params={params}\r\n                    onClose={this.handleAlertContinue} />\r\n            );\r\n        } else if (openUrlAlert) {\r\n            const { url, params } = openUrlAlert;\r\n\r\n            return (\r\n                <OpenUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleOpenUrlContinue}/>\r\n            );\r\n        } else if (openGameAlert) {\r\n            const { game, params } = openGameAlert;\r\n\r\n            return (\r\n                <OpenGameDialog\r\n                    game={game}\r\n                    params={params}\r\n                    onClose={this.handleOpenGameContinue}/>\r\n            );\r\n        } else if (requestUrlAlert) {\r\n            const { url, params } = requestUrlAlert;\r\n\r\n            return (\r\n                <RequestUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleRequestUrlContinue}/>\r\n            );\r\n        } else if (inputPasswordAlert) {\r\n            const { state, error } = inputPasswordAlert;\r\n\r\n            return (\r\n                <InputPasswordDialog\r\n                    state={state}\r\n                    error={error}\r\n                    onClose={this.handleInputPasswordContinue}/>\r\n            );\r\n        } else if (requestBlockSenderAlert) {\r\n            const { sender } = requestBlockSenderAlert;\r\n\r\n            return (\r\n                <BlockSenderDialog\r\n                    sender={sender}\r\n                    onClose={this.handleBlockSenderContinue}/>\r\n            );\r\n        } else if (leaveVoiceChatAlert) {\r\n            const { params } = leaveVoiceChatAlert;\r\n\r\n            return (\r\n                <LeaveVoiceChatDialog\r\n                    params={params}\r\n                    onClose={this.handleLeaveVoiceChatContinue}/>\r\n            );\r\n        } else if (reportChatAlert) {\r\n            const { chatId, messageIds } = reportChatAlert;\r\n\r\n            return (\r\n                <ReportChatDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleReportChatContinue}/>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSnackbar,\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Actions);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function openGameInBrowser(url, message) {\r\n    let sharedPreferences = {};\r\n    try {\r\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\r\n    } catch (e) { }\r\n\r\n    const existing = sharedPreferences['' + message.id];\r\n    let hash = existing ? existing : ''\r\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\r\n    if (!existing) {\r\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        const array = new Uint8Array(1);\r\n        for (let i = 0; i < 20; i++) {\r\n            window.crypto.getRandomValues(array)\r\n            hash += chars[array[0] % chars.length];\r\n        }\r\n\r\n        sharedPreferences['' + message.id] = hash;\r\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\r\n    }\r\n    addHash += hash;\r\n    const index = url.indexOf('#');\r\n    if (index < 0) {\r\n        url += '#' + addHash;\r\n    } else {\r\n        const curHash = url.substring(0, index + 1);\r\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\r\n            url += '&' + addHash;\r\n        } else {\r\n            if (curHash.length > 0) {\r\n                url += '?' + addHash;\r\n            } else {\r\n                url += addHash;\r\n            }\r\n        }\r\n    }\r\n\r\n    const newWindow = window.open();\r\n    newWindow.opener = null;\r\n    newWindow.location = url;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\r\n    'CallEnd'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CallSettingsVideoPreview.css';\r\n\r\nclass CallSettingsVideoPreview extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            const video = document.getElementById('call-settings-video');\r\n            if (video) {\r\n                video.srcObject = stream;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { stream } = this.props;\r\n        if (prevProps.stream !== stream) {\r\n            const video = document.getElementById('call-settings-video');\r\n            if (video) {\r\n                video.srcObject = stream;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCallSettingsVideoPreview.propTypes = {\r\n    stream: PropTypes.object\r\n};\r\n\r\nexport default CallSettingsVideoPreview;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getAmplitude } from '../../Calls/Utils';\r\nimport './GroupCallMicAmplitude.css';\r\n\r\nclass GroupCallMicAmplitude extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            this.addAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            this.removeAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { stream } = this.props;\r\n        if (prevProps.stream !== stream) {\r\n            this.removeAnalyser(prevProps.stream);\r\n            this.addAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    addAnalyser(stream) {\r\n        if (!stream) return;\r\n\r\n        const { audioContext } = this;\r\n        if (!audioContext) return;\r\n\r\n        this.streamSource = audioContext.createMediaStreamSource(stream);\r\n        if (!this.analyser) {\r\n            const analyser = audioContext.createAnalyser();\r\n            analyser.minDecibels = -100;\r\n            analyser.maxDecibels = -30;\r\n            analyser.smoothingTimeConstant = 0.05;\r\n            analyser.fftSize = 1024;\r\n\r\n            this.analyser = analyser;\r\n        }\r\n        this.streamSource.connect(this.analyser);\r\n\r\n        this.timer = setInterval(() => this.analyse(), 100);\r\n    }\r\n\r\n    removeAnalyser(stream) {\r\n        if (!stream) return;\r\n\r\n        if (this.analyser && this.streamSource) {\r\n            this.streamSource.disconnect(this.analyser);\r\n        }\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    analyse() {\r\n        const { analyser } = this;\r\n        if (!analyser) return;\r\n\r\n        const array = new Uint8Array(analyser.frequencyBinCount);\r\n        analyser.getByteFrequencyData(array);\r\n        const value = getAmplitude(array, 1.5);\r\n\r\n        this.setState({\r\n            value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n\r\n        let d = '';\r\n        for (let i = 0; i < 35; i++) {\r\n            const x = i * 8 + 1.5;\r\n            d += `M${x},0v15Z`;\r\n        }\r\n\r\n        const bars = (\r\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\r\n                <path d={d} fill='currentColor' strokeWidth={3}/>\r\n            </svg>\r\n        );\r\n\r\n        return (\r\n            <div className='group-call-mic-amplitude'>\r\n                {bars}\r\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\r\n                    {bars}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallMicAmplitude.propTypes = {\r\n    stream: PropTypes.object\r\n};\r\n\r\nexport default GroupCallMicAmplitude;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport async function copy(text) {\r\n    try {\r\n        if (navigator.clipboard) {\r\n            await navigator.clipboard.writeText(text);\r\n            return true;\r\n        }\r\n    } catch (e) {\r\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\r\n    }\r\n\r\n    return copyOld(text);\r\n}\r\n\r\nfunction copyOld(text) {\r\n    let element;\r\n    let successful;\r\n    try {\r\n        element = document.createElement('textarea');\r\n        element.contentEditable = true;\r\n        element.readOnly = true;\r\n        element.value = text;\r\n        element.style.all = 'unset';\r\n        element.style.position = 'fixed';\r\n        element.style.top = 0;\r\n        element.style.clip = 'rect(0, 0, 0, 0)';\r\n        element.style.whiteSpace = 'pre';\r\n        element.style.webkitUserSelect = 'text';\r\n        element.style.MozUserSelect = 'text';\r\n        element.style.msUserSelect = 'text';\r\n        element.style.userSelect = 'text';\r\n\r\n        document.body.appendChild(element);\r\n\r\n        element.focus();\r\n        element.select();\r\n\r\n        successful = document.execCommand('copy');\r\n        if (!successful) {\r\n            throw new Error();\r\n        }\r\n        return true;\r\n    } catch {\r\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\r\n    } finally {\r\n        if (element) {\r\n            document.body.removeChild(element);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\r\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\r\nimport { getStream } from '../../Calls/Utils';\r\nimport { showSnackbar } from '../../Actions/Client';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport './GroupCallSettings.css';\r\n\r\nclass GroupCallSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                const { openDeviceSelect } = this.state;\r\n                if (openDeviceSelect) {\r\n                    this.handleCloseDeviceSelect();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n\r\n                this.handleCancel();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId, callId } = props;\r\n        const { prevGroupCallId, prevCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            const { devices } = CallStore;\r\n\r\n            const outputDeviceId = CallStore.getOutputDeviceId();\r\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n            let muteSettings = { };\r\n            const groupCall = CallStore.get(groupCallId);\r\n            if (groupCall) {\r\n                const {\r\n                    mute_new_participants: muteNewParticipants,\r\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\r\n                } = groupCall;\r\n\r\n                muteSettings = {\r\n                    muteNewParticipants,\r\n                    allowedChangeMuteNewParticipants\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                devices,\r\n                outputDeviceId,\r\n                output,\r\n                inputAudioDeviceId,\r\n                inputAudio,\r\n                inputVideoDeviceId,\r\n                inputVideo,\r\n                ...muteSettings\r\n            };\r\n        } else if (prevCallId !== callId) {\r\n            const { devices } = CallStore;\r\n\r\n            const outputDeviceId = CallStore.getOutputDeviceId();\r\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n            return {\r\n                prevCallId: callId,\r\n                devices,\r\n                outputDeviceId,\r\n                output,\r\n                inputAudioDeviceId,\r\n                inputAudio,\r\n                inputVideoDeviceId,\r\n                inputVideo\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\r\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\r\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\r\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\r\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n\r\n        this.closeStreams();\r\n    }\r\n\r\n    closeStreams() {\r\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\r\n        if (inputAudioStream) {\r\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\r\n                inputAudioStream.getAudioTracks().forEach(x => {\r\n                    x.stop();\r\n                });\r\n            }\r\n        }\r\n\r\n        if (inputVideoStream) {\r\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\r\n                inputVideoStream.getVideoTracks().forEach(x => {\r\n                    x.stop();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call } = update;\r\n        if (!group_call) return;\r\n\r\n        const {\r\n            id,\r\n            mute_new_participants: muteNewParticipants,\r\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\r\n        } = group_call;\r\n        if (id !== groupCallId) return;\r\n\r\n        this.setState({\r\n            muteNewParticipants,\r\n            allowedChangeMuteNewParticipants\r\n        });\r\n    };\r\n\r\n    onDeviceChange = async () => {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        CallStore.devices = devices;\r\n\r\n        const outputDeviceId = CallStore.getOutputDeviceId();\r\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n        this.setState({\r\n            devices,\r\n            outputDeviceId,\r\n            output,\r\n            inputAudioDeviceId,\r\n            inputAudio,\r\n            inputVideoDeviceId,\r\n            inputVideo\r\n        });\r\n    };\r\n\r\n    handleOutputChange = event => {\r\n        const outputDeviceId = event.target.value;\r\n\r\n        this.setState({ outputDeviceId });\r\n    }\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { currentGroupCall } = CallStore;\r\n\r\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\r\n            return (\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => { closeSnackbar(snackKey); }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            )\r\n        });\r\n    };\r\n\r\n    handleOpenDeviceSelect = async type => {\r\n        switch (type) {\r\n            case 'inputAudio': {\r\n                const { inputAudio } = this.state;\r\n                if (!inputAudio.length) {\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'output': {\r\n                const { output } = this.state;\r\n                if (!output.length) {\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            openDeviceSelect: { type }\r\n        });\r\n    };\r\n\r\n    handleCloseDeviceSelect = () => {\r\n        this.setState({\r\n            openDeviceSelect: null\r\n        });\r\n    };\r\n\r\n    handleSelectDevice = async (type, deviceId) => {\r\n        this.handleCloseDeviceSelect();\r\n\r\n        switch (type) {\r\n            case 'output': {\r\n                CallStore.setOutputDeviceId(deviceId);\r\n                this.setState({\r\n                    outputDeviceId: deviceId\r\n                });\r\n                break;\r\n            }\r\n            case 'inputAudio': {\r\n                const { currentGroupCall, currentCall } = CallStore;\r\n                if (currentGroupCall) {\r\n                    const { streamManager } = currentGroupCall;\r\n                    if (!streamManager) return;\r\n\r\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\r\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\r\n\r\n                    if (inputAudioStream) {\r\n                        inputAudioStream.getAudioTracks().forEach(t => {\r\n                            t.stop()\r\n                        });\r\n                    }\r\n\r\n                    const stream = await getStream({\r\n                        audio: { deviceId: { exact: deviceId } },\r\n                        video: false\r\n                    });\r\n\r\n                    this.setState({\r\n                        inputAudioDeviceId: deviceId,\r\n                        inputAudioStream: stream\r\n                    });\r\n                } else if (currentCall) {\r\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\r\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\r\n\r\n                    if (inputAudioStream) {\r\n                        inputAudioStream.getAudioTracks().forEach(t => {\r\n                            t.stop()\r\n                        });\r\n                    }\r\n\r\n                    const stream = await getStream({\r\n                        audio: { deviceId: { exact: deviceId } },\r\n                        video: false\r\n                    });\r\n\r\n                    this.setState({\r\n                        inputAudioDeviceId: deviceId,\r\n                        inputAudioStream: stream\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'inputVideo': {\r\n                const { currentCall } = CallStore;\r\n                if (!currentCall) return;\r\n\r\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\r\n\r\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\r\n\r\n                if (inputVideoStream) {\r\n                    inputVideoStream.getVideoTracks().forEach(t => {\r\n                        t.stop()\r\n                    });\r\n                }\r\n\r\n                const stream = await getStream({\r\n                    audio: false,\r\n                    video: { deviceId: { exact: deviceId } }\r\n                });\r\n\r\n                this.setState({\r\n                    inputVideoDeviceId: deviceId,\r\n                    inputVideoStream: stream\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleEnd = () => {\r\n        const { currentGroupCall: call } = CallStore;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\r\n    };\r\n\r\n    handleMuteNewParticipants = () => {\r\n        const { groupCallId } = this.props;\r\n        const { muteNewParticipants } = this.state;\r\n\r\n        this.setState({\r\n            muteNewParticipants: !muteNewParticipants\r\n        });\r\n\r\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { onClose } = this.props;\r\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\r\n\r\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\r\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\r\n        }\r\n\r\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\r\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\r\n        }\r\n\r\n        onClose && onClose();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose();\r\n    };\r\n\r\n    render() {\r\n        const { callId, t } = this.props;\r\n        const {\r\n            inputAudioDeviceId,\r\n            inputAudioStream,\r\n            inputAudio,\r\n            inputVideoDeviceId,\r\n            inputVideoStream,\r\n            inputVideo,\r\n            outputDeviceId,\r\n            output,\r\n            openDeviceSelect,\r\n            muteNewParticipants,\r\n            allowedChangeMuteNewParticipants\r\n        } = this.state;\r\n\r\n\r\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\r\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\r\n\r\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\r\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\r\n\r\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\r\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        if (openDeviceSelect) {\r\n            const { type } = openDeviceSelect;\r\n            let items = [];\r\n            let deviceId = null;\r\n            switch (type) {\r\n                case 'output': {\r\n                    items = output;\r\n                    deviceId = outputDeviceId;\r\n                    break;\r\n                }\r\n                case 'inputAudio': {\r\n                    items = inputAudio;\r\n                    deviceId = inputAudioDeviceId;\r\n                    break;\r\n                }\r\n                case 'inputVideo': {\r\n                    items = inputVideo;\r\n                    deviceId = inputVideoDeviceId;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className='group-call-settings-device-select'>\r\n                    <div className='group-call-settings-panel'>\r\n                        <div className='group-call-settings-panel-header'>\r\n                            <div className='group-call-panel-caption'>\r\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='group-call-settings-panel-content'>\r\n                            {items.map(x => (\r\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\r\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className='group-call-settings-panel-buttons'>\r\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\r\n                                {t('OK')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n        const canManage = canManageVoiceChats(chatId);\r\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\r\n\r\n        return (\r\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\r\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\r\n                    <div className='group-call-settings-panel-header'>\r\n                        <div className='group-call-panel-caption'>\r\n                            <div className='group-call-title'>{t('Settings')}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-settings-panel-content'>\r\n                        { canManage && allowedChangeMuteNewParticipants && (\r\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\r\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\r\n                                <Switch\r\n                                    disableRipple\r\n                                    classes={{\r\n                                        root: 'group-call-settings-panel-switch-root',\r\n                                        switchBase: 'group-call-settings-panel-switch-base',\r\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\r\n                                        checked: 'group-call-settings-panel-switch-checked',\r\n                                        track: 'group-call-settings-panel-switch-track'\r\n                                    }}\r\n                                    checked={muteNewParticipants}\r\n                                    onChange={this.handleMuteNewParticipants}/>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\r\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\r\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\r\n                        </div>\r\n\r\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\r\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\r\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\r\n                        </div>\r\n\r\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\r\n\r\n                        { callId && (\r\n                            <>\r\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\r\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\r\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\r\n                                </div>\r\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\r\n                                {/*<div>*/}\r\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\r\n                                {/*</div>*/}\r\n                            </>\r\n                        )}\r\n                        { username && (\r\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\r\n                                {t('VoipGroupCopyInviteLink')}\r\n                            </div>\r\n                        )}\r\n                        { canManage && (\r\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\r\n                                {t('VoipGroupEndChat')}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className='group-call-settings-panel-buttons'>\r\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\r\n                            {t('Done')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallSettings.propTypes = {\r\n    callId: PropTypes.number,\r\n    groupCallId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(GroupCallSettings);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\r\n    'More'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\r\n    'Mic'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\r\n    'MicOff'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport GroupCallSettings from './GroupCallSettings';\r\nimport MenuIcon from '../../Assets/Icons/More';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport { closeCallPanel } from '../../Actions/Call';\r\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\r\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './CallPanel.css';\r\n\r\nconst SUPPORTS_ROTATION = true;\r\n\r\nclass CallPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.callPanelRef = React.createRef();\r\n\r\n        const { callId } = props;\r\n\r\n        this.state = {\r\n            openSettings: false,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0,\r\n            fullScreen: false,\r\n\r\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\r\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (callPanel) {\r\n            const prefixes = ['', 'moz', 'webkit', 'ms']\r\n            prefixes.forEach(x => {\r\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\r\n            });\r\n        }\r\n\r\n        CallStore.on('updateCall', this.handleUpdateCall);\r\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (callPanel) {\r\n            const prefixes = ['', 'moz', 'webkit', 'ms']\r\n            prefixes.forEach(x => {\r\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\r\n            });\r\n        }\r\n\r\n        CallStore.off('updateCall', this.handleUpdateCall);\r\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\r\n    }\r\n\r\n    onClientUpdateCallMediaState = update => {\r\n        const { callId: currentCallId } = this.props;\r\n        const { callId, mediaState, type } = update;\r\n        if (callId !== currentCallId) return;\r\n\r\n        if (type === 'input') {\r\n            this.setState({ inputMediaState: mediaState });\r\n        } else {\r\n            this.setState({ outputMediaState: mediaState });\r\n        }\r\n    };\r\n\r\n    handleUpdateCall = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleFullScreenChange = () => {\r\n        this.setState({\r\n            fullScreen: this.isFullScreen()\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.handleClose();\r\n    }\r\n\r\n    handleAccept = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { callId } = this.props;\r\n        if (!callId) return;\r\n\r\n        await CallStore.p2pAcceptCall(callId);\r\n    };\r\n\r\n    handleDiscard = async event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { callId } = this.props;\r\n        if (!callId) return;\r\n\r\n        closeCallPanel();\r\n        setTimeout(() => {\r\n            CallStore.p2pHangUp(callId, true);\r\n        }, 100);\r\n    };\r\n\r\n    handleOpenSettings = async event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n        this.setState({\r\n            openSettings: true\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({\r\n            openSettings: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        if (this.isFullScreen()) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.handleDiscard(null);\r\n    };\r\n\r\n    handleShareScreen = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { currentCall } = CallStore;\r\n        if (!currentCall) return;\r\n\r\n        const { screenStream } = currentCall;\r\n        if (screenStream) {\r\n            CallStore.p2pStopScreenSharing();\r\n        } else {\r\n            CallStore.p2pStartScreenSharing();\r\n        }\r\n    };\r\n\r\n    handleFullScreen = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        setTimeout(() => {\r\n            if (this.isFullScreen()) {\r\n                this.exitFullscreen();\r\n                return;\r\n            }\r\n\r\n            this.requestFullscreen();\r\n        }, 250);\r\n    }\r\n\r\n    isFullScreen() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (!callPanel) return false;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        return fullscreenElement === callPanel;\r\n    }\r\n\r\n    requestFullscreen() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (!callPanel) return false;\r\n\r\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\r\n\r\n        method && method.call(callPanel);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { currentTarget } = event;\r\n\r\n        const { userId } = this.props;\r\n        if (userId === UserStore.getMyId()) return;\r\n\r\n        const { anchorEl } = this.state;\r\n\r\n        if (anchorEl) {\r\n            this.setState({ anchorEl: null });\r\n        } else {\r\n            this.setState({\r\n                anchorEl: currentTarget\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAudio = () => {\r\n        const { inputMediaState } = this.state;\r\n        if (!inputMediaState) return;\r\n\r\n        const { muted } = inputMediaState;\r\n\r\n        CallStore.p2pAudioEnabled(muted);\r\n    };\r\n\r\n    handleVideo = () => {\r\n        const { inputMediaState } = this.state;\r\n        if (!inputMediaState) return;\r\n\r\n        const muted = inputMediaState.videoState === 'inactive';\r\n\r\n        CallStore.p2pVideoEnabled(muted)\r\n    };\r\n\r\n    render() {\r\n        const { callId, t } = this.props;\r\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\r\n        const { currentCall } = CallStore;\r\n\r\n        const call = CallStore.p2pGet(callId);\r\n        if (!call) return null;\r\n\r\n        const { user_id: userId, is_outgoing, state } = call;\r\n\r\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\r\n\r\n        let outputVideoStyle = null;\r\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox() && !is_outgoing) {\r\n            outputVideoStyle = {\r\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\r\n            };\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\r\n                <div className='group-call-panel-header'>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </div>\r\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\r\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\r\n                        <div className='group-call-join-panel-subtitle'>\r\n                            {p2pGetCallStatus(callId)}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\r\n                        <MenuIcon />\r\n                    </div>\r\n                    <Popover\r\n                        container={this.callPanelRef.current}\r\n                        classes={{\r\n                            paper: 'group-call-participant-menu-root'\r\n                        }}\r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        getContentAnchorEl={null}\r\n                        disableRestoreFocus={true}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleOpenSettings}>\r\n                                <ListItemText primary={t('Settings')} />\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleFullScreen}>\r\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleShareScreen}>\r\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\r\n                            </MenuItem>\r\n                        </MenuList>\r\n                    </Popover>\r\n                </div>\r\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\r\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\r\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\r\n                </div>\r\n                { outputMediaState && outputMediaState.muted && (\r\n                    <div className='call-panel-microphone-hint'>\r\n                        <div className='call-panel-microphone-hint-wrapper'>\r\n                            <MicOffIcon/>\r\n                            <div className='call-panel-microphone-hint-text'>\r\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className='group-call-panel-buttons'>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\r\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\r\n                            <CallEndIcon />\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\r\n                        </div>\r\n                    </div>\r\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\r\n                        <div className='group-call-panel-button'>\r\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\r\n                                <CallIcon />\r\n                            </div>\r\n                            <div className='group-call-panel-button-text'>\r\n                                {t('VoipAnswerCall')}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\r\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCallPanel.propTypes = {\r\n    callId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(CallPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CallPanel from './CallPanel';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCall.css';\r\n\r\nclass Call extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = {\r\n            fullScreen: false\r\n        };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setPosition();\r\n\r\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    onClientUpdateGroupCallFullScreen = update => {\r\n        const { fullscreen } = update;\r\n\r\n        this.setState({ fullscreen });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        const element = document.getElementById('call');\r\n        if (element) element.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        this.left = parseInt(element.style.left, 10);\r\n        this.top = parseInt(element.style.top, 10);\r\n        this.pageX = event.nativeEvent.pageX;\r\n        this.pageY = event.nativeEvent.pageY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.windowDragging = true;\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('call');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\r\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\r\n\r\n        const element = document.getElementById('call');\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.windowDragging = false;\r\n    };\r\n\r\n    setPosition() {\r\n        const element = document.getElementById('call');\r\n        let { pipParams } = CallStore;\r\n        if (!pipParams) {\r\n            pipParams = {\r\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\r\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\r\n            }\r\n        }\r\n\r\n        const { left: prevLeft, top: prevTop } = pipParams;\r\n\r\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\r\n\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    }\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('call');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        CallStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    render() {\r\n        const { callId } = this.props;\r\n        const { fullscreen } = this.state;\r\n\r\n        return (\r\n            <div\r\n                id='call'\r\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\r\n                onMouseDown={this.handleMouseDown}\r\n            >\r\n                <CallPanel callId={callId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCall.propTypes = {\r\n    callId: PropTypes.number\r\n};\r\n\r\nexport default Call;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\r\n    'Document2'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\r\n    'SharedMedia'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\r\n    'Verified'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\r\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogTitle.css';\r\n\r\nclass DialogTitle extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, showSavedMessages } = this.props;\r\n\r\n        const isVerified = isChatVerified(chatId);\r\n        const title = getChatTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <div className='dialog-title'>\r\n                <span className='dialog-title-span'>{title}</span>\r\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogTitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogTitle.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(DialogTitle);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './DialogStatus.css';\r\n\r\nclass DialogStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                subtitle: getChatSubtitleWithoutTyping(chatId),\r\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.subtitle !== subtitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        let updateSubtitle = false;\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        updateSubtitle = true;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (updateSubtitle) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    updateSubtitle = chatId => {\r\n        this.setState({\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        });\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (\r\n            type &&\r\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\r\n            type.user_id === update.user_id\r\n        ) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { subtitle: externalSubtitle } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\r\n                {externalSubtitle ? externalSubtitle + ', ' : null}\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogStatus from './DialogStatus';\r\nimport { isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './Chat.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            chat: ChatStore.get(chatId)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.chatId !== this.props.chatId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\r\n\r\n        const isSavedMessages = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\r\n                <div className='chat-wrapper'>\r\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\r\n                    {showTitle && (\r\n                        <div className='chat-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\r\n                            </div>\r\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\r\n                                <div className='tile-second-row'>\r\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    subtitle: PropTypes.string,\r\n    showSavedMessages: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onTileSelect: PropTypes.func\r\n};\r\n\r\nChat.defaultProps = {\r\n    showSavedMessages: true,\r\n    showStatus: true,\r\n    showTitle: true\r\n};\r\n\r\nexport default Chat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\r\n    'Back'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport './ChatDetailsHeader.css';\r\n\r\nclass ChatDetailsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t, backButton, onClick, onClose } = this.props;\r\n\r\n        let info = t('ChatInfo');\r\n        if (isPrivateChat(chatId)) {\r\n            info = t('Info');\r\n        } else if (isChannelChat(chatId)) {\r\n            info = t('ChannelInfo');\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {backButton && (\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                )}\r\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                    <span className='header-status-content'>{info}</span>\r\n                </div>\r\n                {!backButton && (\r\n                    <IconButton className='header-right-button' onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ChatDetailsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { isChatMuted } from '../../Utils/Chat';\r\nimport { debounce } from '../../Utils/Common';\r\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\r\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            isMuted: isChatMuted(chatId)\r\n        };\r\n\r\n        this.debouncedSetChatNotificationSettings = debounce(\r\n            this.setChatNotificationSettings,\r\n            NOTIFICATION_DEBOUNCE_DELAY_MS\r\n        );\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                isMuted: isChatMuted(chatId)\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onUpdateChatNotificationSettings = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (!chat_id) return;\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({ isMuted: isChatMuted(chatId) });\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSetChatNotifications = () => {\r\n        this.setState({ isMuted: !this.state.isMuted });\r\n        this.debouncedSetChatNotificationSettings();\r\n    };\r\n\r\n    setChatNotificationSettings = () => {\r\n        const { chatId } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        toggleChatNotificationSettings(chatId, isMuted);\r\n    };\r\n}\r\n\r\nexport default Notifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from '../ColumnMiddle/Notifications';\r\nimport './NotificationsListItem.css';\r\n\r\nclass NotificationsListItem extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        return (\r\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\r\n                <ListItemIcon>\r\n                    <Checkbox\r\n                        className='notifications-checkbox'\r\n                        edge='start'\r\n                        checked={!isMuted}\r\n                        color='primary'\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        onChange={this.handleSetChatNotifications}\r\n                    />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography variant='inherit' noWrap>\r\n                            {t('Notifications')}\r\n                        </Typography>\r\n                    }\r\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\r\n                />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Animator from '../../../Utils/Animatior';\r\nimport { clamp, throttle } from '../../../Utils/Common';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaTabs.css';\r\n\r\nclass SharedMediaTabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        this.state = { }\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        this.setSelection();\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { chatId } = this.props;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaTab',\r\n                chatId,\r\n                index: selectedIndex\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chatId, media } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId, index } = update;\r\n        if (chatId !== this.props.chatId) return;\r\n\r\n        this.setState({\r\n            selectedIndex: index\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { selectedIndex, isSmallWidth } = this.state;\r\n        if (selectedIndex === -1) return;\r\n\r\n        const padding = 3;\r\n\r\n        const scroll = this.filtersRef.current;\r\n\r\n        let item = null;\r\n        let left = 0;\r\n        const membersFilter = this.filterRef.get('members');\r\n        if (selectedIndex === 0 && membersFilter) {\r\n            item = membersFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\r\n        if (selectedIndex === 1 && photoAndVideoFilter) {\r\n            item = photoAndVideoFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const documentFilter = this.filterRef.get('document');\r\n        if (selectedIndex === 2 && documentFilter) {\r\n            item = documentFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const audioFilter = this.filterRef.get('audio');\r\n        if (selectedIndex === 3 && audioFilter) {\r\n            item = audioFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const urlFilter = this.filterRef.get('url');\r\n        if (selectedIndex === 4 && urlFilter) {\r\n            item = urlFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\r\n        if (selectedIndex === 5 && voiceNoteFilter) {\r\n            item = voiceNoteFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\r\n        if (selectedIndex === 6 && groupsInCommonFilter) {\r\n            item = groupsInCommonFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n        const { chatId, onClick } = this.props;\r\n\r\n        onClick && onClick(event);\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTab',\r\n            chatId,\r\n            index: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\r\n\r\n        const tabsCount =\r\n            (members.length > 0 ? 1 : 0) +\r\n            (photoAndVideo.length > 0 ? 1 : 0) +\r\n            (document.length > 0 ? 1 : 0) +\r\n            (audio.length > 0 ? 1 : 0) +\r\n            (url.length > 0 ? 1 : 0) +\r\n            (voiceNote.length > 0 ? 1 : 0) +\r\n            (groupsInCommon.length > 0 ? 1 : 0);\r\n\r\n        const hasSharedMedia =\r\n            members.length > 0\r\n            || photoAndVideo.length > 0\r\n            || document.length > 0\r\n            || audio.length > 0\r\n            || url.length > 0\r\n            || voiceNote.length > 0\r\n            || groupsInCommon.length > 0;\r\n\r\n        if (!hasSharedMedia) {\r\n            return null;\r\n        }\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className={classNames('tabs', 'shared-media-tabs')}>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\r\n                    {members.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('members', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\r\n                            <span>{t('GroupMembers')}</span>\r\n                        </div>\r\n                    )}\r\n                    {photoAndVideo.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\r\n                            <span>{t('SharedMediaTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {document.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('document', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\r\n                            <span>{t('SharedFilesTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {audio.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('audio', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\r\n                            <span>{t('SharedMusicTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {url.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('url', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\r\n                            <span>{t('SharedLinksTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {voiceNote.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('voiceNote', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\r\n                            <span>{t('SharedVoiceTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {groupsInCommon.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\r\n                            <span>{t('SharedGroupsTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSharedMediaTabs.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaTabs);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\r\n    'Delete'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\r\n    'Share'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport DeleteIcon from '../../../Assets/Icons/Delete';\r\nimport ShareIcon from '../../../Assets/Icons/Share';\r\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './ContextMenu.css';\r\n\r\nclass ContextMenu extends React.Component {\r\n    handleOpenMessage = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n\r\n        return (\r\n            <Popover\r\n                open={open}\r\n                onClose={onClose}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={anchorPosition}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}\r\n                onClick={e => e.stopPropagation()}>\r\n                <MenuList>\r\n                    {showOpenMessage && (\r\n                        <MenuItem onClick={this.handleOpenMessage}>\r\n                            <ListItemIcon>\r\n                                <ChatBubbleOutlineOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('GoToMessage')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {can_be_forwarded && (\r\n                        <MenuItem onClick={this.handleForward}>\r\n                            <ListItemIcon>\r\n                                <ShareIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Forward')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\r\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </MenuList>\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(ContextMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedPhoto.css';\r\n\r\nclass SharedPhoto extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { photo, size, thumbnailSize } = props;\r\n        const { prevPhoto } = state;\r\n        if (photo !== prevPhoto) {\r\n            return {\r\n                prevPhoto: photo,\r\n\r\n                contextMenu: false,\r\n                left: 0,\r\n                top: 0,\r\n\r\n                photoSize: getSize(photo.sizes, size),\r\n                thumbSize: getSize(photo.sizes, thumbnailSize),\r\n                minithumbnail: photo.minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (photo !== nextProps.photo) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize, thumbSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\r\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\r\n        const src = getSrc(photoSize.photo);\r\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\r\n                        {src !== thumbSrc && (\r\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhoto.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedPhoto;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ContextMenu from './ContextMenu';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { getMedia } from '../../../Utils/Media';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedDocument.css';\r\n\r\nclass SharedDocument extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date } = message;\r\n\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\r\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedDocument.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(SharedDocument);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { hasVideoNote } from '../../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedLinkTile.css';\r\n\r\nclass SharedLinkTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.file || thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        if (update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\r\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n        const hasSrc = Boolean(src || miniSrc);\r\n\r\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\r\n\r\n        return (\r\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\r\n                {hasSrc? (\r\n                    <img\r\n                        className={classNames(\r\n                            'shared-link-tile-photo',\r\n                            { 'shared-link-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred },\r\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src || miniSrc}\r\n                        alt=''\r\n                    />\r\n                ) : (\r\n                    <span>{title}</span>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinkTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default SharedLinkTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport SharedLinkTile from './SharedLinkTile';\r\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\r\nimport { getFormattedText, substring } from '../../../Utils/Message';\r\nimport punycode from '../../../Utils/Punycode';\r\nimport { PHOTO_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedLink.css';\r\n\r\nclass SharedLink extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (webPage !== nextProps.webPage) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextProps.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    static isValidEntity(entity) {\r\n        if (!entity) return false;\r\n\r\n        const { type } = entity;\r\n        if (!type) return false;\r\n\r\n        return (\r\n            type['@type'] === 'textEntityTypeUrl' ||\r\n            type['@type'] === 'textEntityTypeTextUrl' ||\r\n            type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getTitleFromUrl(url) {\r\n        try {\r\n            url = url.startsWith('http') ? url : 'http://' + url;\r\n            const decodedUrl = decodeURI(url);\r\n\r\n            const hostname = new URL(decodedUrl).hostname.split('.');\r\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\r\n\r\n            return punycode.ToUnicode(domain);\r\n        } catch (error) {\r\n            console.error('url: ' + url + '\\n' + error);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let thumbnail = null;\r\n        let minithumbnail = null;\r\n        let content = null;\r\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\r\n            title: '',\r\n            description: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: []\r\n            },\r\n            photo: null,\r\n            animation: null,\r\n            audio: null,\r\n            document: null,\r\n            sticker: null,\r\n            video: null,\r\n            video_note: null,\r\n            url: ''\r\n        };\r\n\r\n        if (animation) {\r\n            minithumbnail = animation.minithumbnail;\r\n            thumbnail = animation.thumbnail;\r\n        } else if (audio) {\r\n            minithumbnail = audio.album_cover_minithumbnail;\r\n            thumbnail = audio.album_cover_thumbnail;\r\n        } else if (document) {\r\n            minithumbnail = document.minithumbnail;\r\n            thumbnail = document.thumbnail;\r\n        } else if (sticker) {\r\n            minithumbnail = sticker.minithumbnail;\r\n            thumbnail = sticker.thumbnail;\r\n        } else if (video) {\r\n            minithumbnail = video.minithumbnail;\r\n            thumbnail = video.thumbnail;\r\n        } else if (videoNote) {\r\n            minithumbnail = videoNote.minithumbnail;\r\n            thumbnail = videoNote.thumbnail;\r\n        }\r\n\r\n        if (!thumbnail && !minithumbnail && photo) {\r\n            minithumbnail = photo.minithumbnail;\r\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\r\n        }\r\n\r\n        let { text, caption } = message.content;\r\n        text = text || caption;\r\n        if (text) {\r\n            const { entities } = text;\r\n            if (entities && entities.length > 0) {\r\n                const longTextMaxLength = 40;\r\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\r\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\r\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\r\n\r\n                const nonEmptyUrlEntities = urlEntities\r\n                    .filter(x => {\r\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\r\n                        entityText = entityText.replace(/\\u200B/g,'');\r\n\r\n                        return entityText.length > 0;\r\n                    });\r\n\r\n                const links = nonEmptyUrlEntities.map((x, i) => {\r\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\r\n                        url = entityText;\r\n                        let mail = false;\r\n\r\n                        switch (x.type['@type']) {\r\n                            case 'textEntityTypeTextUrl': {\r\n                                const { url: typeUrl } = x.type;\r\n                                if (typeUrl) {\r\n                                    url = typeUrl;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeUrl': {\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeEmailAddress':\r\n                                mail = true;\r\n                                break;\r\n                        }\r\n\r\n                        title = title || this.getTitleFromUrl(url) || ' ';\r\n\r\n                        return (\r\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\r\n                                {entityText}\r\n                            </SafeLink>\r\n                        );\r\n                    });\r\n\r\n                if (showLinks) {\r\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\r\n                            <div>{links}</div>\r\n                        </>);\r\n                } else {\r\n                    let d = description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && <div className='web-page-description'>{d}</div>}\r\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\r\n                        </>);\r\n                }\r\n\r\n                if (webPage) {\r\n                    title = title || this.getTitleFromUrl(url);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\r\n                    <SharedLinkTile\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        minithumbnail={minithumbnail}\r\n                        thumbnail={thumbnail}\r\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\r\n                    />\r\n                    <div className='shared-link-content'>\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLink.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    webPage: PropTypes.object,\r\n    caption: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n};\r\n\r\nexport default SharedLink;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AudioAction from '../../Message/Media/AudioAction';\r\nimport ContextMenu from './ContextMenu';\r\nimport MediaStatus from '../../Message/Media/MediaStatus';\r\nimport MessageAuthor from '../../Message/MessageAuthor';\r\nimport VoiceNoteTile from '../VoiceNoteTile';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedVoiceNote.css';\r\n\r\nclass SharedVoiceNote extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (voiceNote !== nextProps.voiceNote) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        if (!voiceNote) return null;\r\n\r\n        const { date, sender_id } = message;\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\r\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\r\n                    <div className='voice-note-content'>\r\n                        <div className='document-title'><MessageAuthor sender={sender_id} messageId={messageId} /></div>\r\n                        <div className='voice-note-meta'>\r\n                            <AudioAction\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                duration={duration}\r\n                                file={file}\r\n                                date={dateString}\r\n                            />\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNote);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedVideo.css';\r\n\r\nclass SharedVideo extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, video, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (video !== nextProps.video) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (file && file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\r\n        const { minithumbnail, thumbnail, duration } = this.props.video;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-video-wrapper'>\r\n                        <div\r\n                            className={classNames('shared-video-content', {\r\n                                'media-blurred': isBlurred,\r\n                                'media-mini-blurred': !thumbSrc && isBlurred\r\n                            })}\r\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\r\n                        />\r\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    video: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedVideo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport User from '../../Tile/User';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { openChat, openUser } from '../../../Actions/Client';\r\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaContent.css';\r\nimport Chat from '../../Tile/Chat';\r\n\r\nconst overScanCount = 5;\r\n\r\nclass SharedMediaContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0\r\n        }\r\n\r\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getItemHeight(item) {\r\n        if (!item) return undefined;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { content } = item;\r\n                switch (content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageVideo': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageDocument': {\r\n                        return 78;\r\n                    }\r\n                    case 'messageAudio': {\r\n                        return 94;\r\n                    }\r\n                    case 'messageVoiceNote': {\r\n                        return 74;\r\n                    }\r\n                    default: {\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n            case 'chat': {\r\n                return 74;\r\n            }\r\n            case 'user': {\r\n                return 74;\r\n            }\r\n            default: {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRowHeight(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return 74;\r\n            }\r\n            case 1: {\r\n                return undefined;\r\n            }\r\n            case 2: {\r\n                return 78;\r\n            }\r\n            case 3: {\r\n                return 94;\r\n            }\r\n            case 4: {\r\n                return undefined;\r\n            }\r\n            case 5: {\r\n                return 74;\r\n            }\r\n            case 6: {\r\n                return 74;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\r\n        const migratedChatId = -1;\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                const { user_id: id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`user_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <User userId={id} onSelect={onOpen}/>\r\n                    </ListItem>\r\n                );\r\n            }\r\n            case 1: {\r\n                const { chat_id, id, content } = item;\r\n                if (content['@type'] === 'messageVideo') {\r\n                    return (\r\n                        <SharedVideo\r\n                            key={`chat_id=${chat_id}_message_id=${id}`}\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            video={content.video}\r\n                            openMedia={onOpen}\r\n                            showOpenMessage={chat_id !== migratedChatId}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <SharedPhoto\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 2: {\r\n                const { chat_id, id } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 3: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 4: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedLink\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        webPage={content.web_page}\r\n                        caption={content.caption}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 5: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedVoiceNote\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        voiceNote={content.voice_note}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 6: {\r\n                const { id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`chat_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <Chat chatId={id} onSelect={onOpen} />\r\n                    </ListItem>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    static isValidMessage(selectedIndex, message) {\r\n        if (!message) return false;\r\n\r\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\r\n    };\r\n\r\n    static isValidContent(selectedIndex, content) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\r\n            }\r\n            case 2: {\r\n                return SharedMediaContent.isValidDocumentContent(content);\r\n            }\r\n            case 3: {\r\n                return SharedMediaContent.isValidAudioContent(content);\r\n            }\r\n            case 4: {\r\n                return SharedMediaContent.isValidUrlContent(content);\r\n            }\r\n            case 5: {\r\n                return SharedMediaContent.isValidVoiceNoteContent(content);\r\n            }\r\n            case 6: {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static isValidPhotoAndVideoContent(content) {\r\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\r\n    }\r\n\r\n    static isValidAudioContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    static isValidDocumentContent(content) {\r\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\r\n    }\r\n\r\n    static isValidUrlContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text, caption } = content;\r\n        if (web_page) return true;\r\n        if (!text && !caption) return false;\r\n\r\n        const { entities } = text || caption;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    static isValidVoiceNoteContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    static getFilter(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return null;\r\n            }\r\n            case 1: {\r\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\r\n            }\r\n            case 2: {\r\n                return { '@type': 'searchMessagesFilterDocument' };\r\n            }\r\n            case 3: {\r\n                return { '@type': 'searchMessagesFilterAudio' };\r\n            }\r\n            case 4: {\r\n                return { '@type': 'searchMessagesFilterUrl' };\r\n            }\r\n            case 5: {\r\n                return { '@type': 'searchMessagesFilterVoiceNote' };\r\n            }\r\n            case 6: {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static getSource(selectedIndex, media) {\r\n        if (!media) {\r\n            return [];\r\n        }\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\r\n            }\r\n            case 1: {\r\n                return media.photoAndVideo || [];\r\n            }\r\n            case 2: {\r\n                return media.document || [];\r\n            }\r\n            case 3: {\r\n                return media.audio || [];\r\n            }\r\n            case 4: {\r\n                return media.url || [];\r\n            }\r\n            case 5: {\r\n                return media.voiceNote || [];\r\n            }\r\n            case 6: {\r\n                return media.groupsInCommon || [];\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                renderIds: new Map(),\r\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false,\r\n                    migrateCompleted: false,\r\n                    filter: SharedMediaContent.getFilter(selectedIndex)\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const { items, selectedIndex } = this.state;\r\n        if (!items.some(x => x.id === message_id)) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onWindowResize = event => {\r\n        const { items, scrollTop } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n        this.setState({ ...renderIds });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { scrollTop } = this.state;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n        }\r\n\r\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            },\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\r\n            const { items } = this.state;\r\n\r\n            const store = FileStore.getStore();\r\n            switch (this.state.selectedIndex) {\r\n                case 0: {\r\n                    loadUsersContent(store, items.map(x => x.user_id));\r\n                    break;\r\n                }\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5: {\r\n                    loadMessageContents(store, items);\r\n                    break;\r\n                }\r\n                case 6: {\r\n                    loadChatsContent(store, items);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // this.unobserveResize();\r\n        // this.observeResize();\r\n    }\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId, index: selectedIndex } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(currentChatId);\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        let source = [];\r\n        if (selectedIndex === 0) {\r\n            source = members;\r\n        } else if (selectedIndex === 1) {\r\n            source = photoAndVideo;\r\n        } else if (selectedIndex === 2) {\r\n            source = document;\r\n        } else if (selectedIndex === 3) {\r\n            source = audio;\r\n        } else if (selectedIndex === 4) {\r\n            source = url;\r\n        } else if (selectedIndex === 5) {\r\n            source = voiceNote;\r\n        } else if (selectedIndex === 6) {\r\n            source = groupsInCommon;\r\n        }\r\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: new Map(),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    handleScroll = (event, container) => {\r\n        const { params } = this.state;\r\n\r\n        if (params && !params.completed) {\r\n            this.onLoadNext(params);\r\n        } else {\r\n            // this.onLoadMigratedNext(params);\r\n        }\r\n    };\r\n\r\n    handleVirtScroll = (event, container) => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        this.setScrollPosition(container.scrollTop);\r\n    };\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { rowHeight } = this.state;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    setScrollPosition = scrollTop => {\r\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n            this.setState({\r\n                scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { items, selectedIndex } = this.state;\r\n        const { completed, filter, loading, messages: lastMessages } = params;\r\n\r\n        if (selectedIndex === 0) return;\r\n        if (selectedIndex === 6) return;\r\n        if (!filter) return;\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        if (lastMessages) {\r\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\r\n        }\r\n        params.loading = true;\r\n        params.requestId = new Date();\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { params: currentParams } = this.state;\r\n        if (!currentParams || currentParams.requestId !== params.requestId) {\r\n            return;\r\n        }\r\n\r\n        const { messages } = result;\r\n        params.messages = messages;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext(params, loadIncomplete) {\r\n\r\n    }\r\n\r\n    handleOpen = item => {\r\n        const { popup } = this.props;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { chat_id, id } = item;\r\n\r\n                openMedia(chat_id, id, false);\r\n                break;\r\n            }\r\n            case 'chat': {\r\n                const { id } = item;\r\n                openChat(id);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'chatMember': {\r\n                const { user_id } = item;\r\n                openUser(user_id, true);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            selectedIndex,\r\n            items = [],\r\n            renderIds,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        } = this.state;\r\n\r\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\r\n\r\n        const hasItems = members && members.length > 0\r\n            || photoAndVideo && photoAndVideo.length > 0\r\n            || document && document.length > 0\r\n            || audio && audio.length > 0\r\n            || url && url.length > 0\r\n            || voiceNote && voiceNote.length > 0\r\n            || groupsInCommon && groupsInCommon.length > 0;\r\n        if (!hasItems) {\r\n            return (<div ref={this.listRef}/>);\r\n        }\r\n\r\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\r\n            let contentHeight = 0;\r\n            const controls = items.map((x, index) => {\r\n                const { chat_id, id } = x;\r\n                const itemHeight = SharedMediaContent.getItemHeight(x);\r\n                if (!itemHeight) {\r\n                    return null;\r\n                }\r\n                contentHeight += itemHeight;\r\n\r\n                return ((!renderIds.size || renderIds.has(index)) && (\r\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\r\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\r\n                    </div>\r\n                ));\r\n            });\r\n\r\n            return (\r\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\r\n                    {controls}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\r\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaContent.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default SharedMediaContent;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport User from '../Tile/User';\r\nimport Chat from '../Tile/Chat';\r\nimport ChatDetailsHeader from './ChatDetailsHeader';\r\nimport NotificationsListItem from './NotificationsListItem';\r\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\r\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\r\nimport { copy } from '../../Utils/Text';\r\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\r\nimport {\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isGroupChat,\r\n    getGroupChatMembers,\r\n    getChatFullInfo,\r\n    isPrivateChat,\r\n    isMeChat, isChannelChat\r\n} from '../../Utils/Chat';\r\nimport { getUserStatusOrder } from '../../Utils/User';\r\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\r\nimport { formatPhoneNumber } from '../../Utils/Phone';\r\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MoreListItem.css';\r\nimport './ChatDetails.css';\r\n\r\nclass ChatDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.dividerRef = React.createRef();\r\n        this.mediaRef = React.createRef();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.members = new Map();\r\n        this.state = {\r\n            prevChatId: chatId\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { chatId } = this.props;\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        // console.log(\r\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\r\n        // );\r\n\r\n        return snapshot;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme, counters, migratedCounters } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.counters !== counters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.migratedCounters !== migratedCounters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        if (prevProps.chatId !== chatId) {\r\n            this.loadContent();\r\n        }\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        if (prevProps.chatId === chatId) {\r\n            list.scrollTop = scrollTop;\r\n        } else {\r\n            list.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        if (this.members.has(update.user_id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.loadChatContents();\r\n    };\r\n\r\n    loadChatContents = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatsContent(store, [chatId]);\r\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\r\n        loadUsersContent(store, members);\r\n\r\n        if (popup) {\r\n            getChatFullInfo(chatId);\r\n        }\r\n    };\r\n\r\n    handleUsernameHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const username = getChatUsername(chatId);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePhoneHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        if (!phoneNumber) return;\r\n\r\n        copy(formatPhoneNumber(phoneNumber));\r\n\r\n        this.handleScheduledAction(t('PhoneCopied'));\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        this.listRef.current.scrollTop = 0;\r\n    };\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId, popup } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenChat = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        openChat(chatId, null, false);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    getContentHeight = () => {\r\n        if (!this.listRef) return 0;\r\n\r\n        return this.listRef.current.clientHeight;\r\n    };\r\n\r\n    handleTabClick = event => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: divider } = this.dividerRef;\r\n        if (!divider) return;\r\n        if (divider.offsetTop === list.scrollTop) return;\r\n\r\n        if (list.scrollTop < divider.offsetTop) {\r\n            list.scrollTo({\r\n                top: divider.offsetTop,\r\n                behavior: 'smooth'\r\n            });\r\n        } else {\r\n            list.scrollTop = divider.offsetTop + 70;\r\n            setTimeout(() => {\r\n                list.scrollTo({\r\n                    top: divider.offsetTop,\r\n                    behavior: 'smooth'\r\n                });\r\n            }, 0);\r\n        }\r\n        // requestAnimationFrame(() => {\r\n        //     list.scrollTo({\r\n        //         top: divider.offsetTop,\r\n        //         behavior: 'smooth'\r\n        //     });\r\n        // });\r\n    };\r\n\r\n    handleScroll = event => {\r\n        if (!this.listRef) return;\r\n        if (!this.mediaRef) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: media } = this.mediaRef;\r\n        if (!media) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            media.handleScroll(event);\r\n        }\r\n\r\n        media.handleVirtScroll(event, list);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            backButton,\r\n            className,\r\n            chatId,\r\n            onClose,\r\n            popup,\r\n            t\r\n        } = this.props;\r\n\r\n        let { counters, migratedCounters } = this.props;\r\n        counters = counters || [0, 0, 0, 0, 0, 0];\r\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\r\n\r\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\r\n            (el, i) => el + migratedCounters[i]\r\n        );\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) {\r\n            return (\r\n                <div className='chat-details'>\r\n                    <ChatDetailsHeader onClose={onClose} />\r\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let groupInCommonCount = 0;\r\n        if (isPrivateChat(chatId)) {\r\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\r\n        }\r\n\r\n        const username = getChatUsername(chatId);\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        let bio = getChatBio(chatId);\r\n        const isGroup = isGroupChat(chatId);\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const members = getGroupChatMembers(chatId);\r\n        const users = [];\r\n        this.members = new Map();\r\n        members.forEach(member => {\r\n            const user = UserStore.get(member.user_id);\r\n            if (user) {\r\n                this.members.set(user.id, user.id);\r\n                users.push(user);\r\n            }\r\n        });\r\n\r\n        const sortedUsers = users.sort((x, y) => {\r\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\r\n        });\r\n        const items = sortedUsers.map(user => (\r\n            <ListItem button className='list-item' key={user.id}>\r\n                <User userId={user.id} onSelect={this.handleOpenUser} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const { photo } = chat;\r\n\r\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\r\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\r\n            if (bioEntities.length > 0) {\r\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\r\n            }\r\n        }\r\n\r\n        let openChatTitle = t('SendMessage');\r\n        if (isChannelChat(chatId)) {\r\n            openChatTitle = t('OpenChannel');\r\n        } else if (isGroupChat(chatId)) {\r\n            openChatTitle = t('OpenGroup');\r\n        }\r\n\r\n        let chatUrl = ''\r\n        if (username) {\r\n            if (isPrivateChat(chatId)) {\r\n                chatUrl = username;\r\n            } else {\r\n                const tMeUrl = OptionStore.get('t_me_url')\r\n                    .value\r\n                    .toLowerCase()\r\n                    .replace('https://', '')\r\n                    .replace('http://', '');\r\n\r\n                chatUrl = tMeUrl + username;\r\n            }\r\n        }\r\n\r\n        const content = (\r\n            <>\r\n                <ChatDetailsHeader\r\n                    chatId={chatId}\r\n                    backButton={backButton}\r\n                    onClose={onClose}\r\n                    onClick={this.handleHeaderClick}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={!popup}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                        {!isMe && (\r\n                            <List className='chat-details-items'>\r\n                                {bio && (\r\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\r\n                                        <ListItemIcon>\r\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={bio}\r\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\r\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {username && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\r\n                                        <ListItemIcon>\r\n                                            <AlternateEmailIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {chatUrl}\r\n                                                </Typography>\r\n                                            }\r\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {isPrivateChat(chatId) && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\r\n                                        <ListItemIcon>\r\n                                            <CallIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\r\n                                                </Typography>\r\n                                            }\r\n                                            secondary={t('Phone')}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                <NotificationsListItem chatId={chatId} />\r\n                                {popup && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography color='primary' variant='inherit' noWrap>\r\n                                                    {openChatTitle.toUpperCase()}\r\n                                                </Typography>\r\n                                            }\r\n                                            style={{ paddingLeft: 40 }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div ref={this.dividerRef}/>\r\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\r\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\r\n    }\r\n}\r\n\r\nChatDetails.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onOpenGroupInCommon: PropTypes.func,\r\n    onOpenSharedDocuments: PropTypes.func,\r\n    onOpenSharedMedia: PropTypes.func,\r\n    onOpenSharedLinks: PropTypes.func,\r\n    onOpenSharedPhotos: PropTypes.func,\r\n    onOpenSharedVideos: PropTypes.func,\r\n    onOpenSharedVoiceNotes: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ChatDetails);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './GroupsInCommonHeader.css';\r\n\r\nclass GroupsInCommonHeader extends React.Component {\r\n    render() {\r\n        const { onClose } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={onClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Groups in common</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupsInCommonHeader.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupsInCommonHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from '../Tile/Chat';\r\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './GroupsInCommon.css';\r\n\r\nclass GroupsInCommon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: userId,\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        }).then(result => {\r\n            const store = FileStore.getStore();\r\n            loadChatsContent(store, result.chat_ids);\r\n\r\n            this.setState({ chatIds: result.chat_ids });\r\n        });\r\n    }\r\n\r\n    handleSelect = chatId => {\r\n        const { popup } = this.props;\r\n\r\n        openChat(chatId);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { chatIds } = this.state;\r\n\r\n        const chats = chatIds.map(x => (\r\n            <ListItem button key={x}>\r\n                <Chat chatId={x} onSelect={this.handleSelect} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const content = (\r\n            <>\r\n                <GroupsInCommonHeader onClose={onClose} />\r\n                <div className='groups-in-common-list' style={{ minHeight }}>\r\n                    {chats}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\r\n    }\r\n}\r\n\r\nGroupsInCommon.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nGroupsInCommon.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default GroupsInCommon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\r\n    'Search'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.state;\r\n\r\n        if (openSearch && openSearch !== prevProps.openSearch) {\r\n            setTimeout(() => {\r\n                if (this.searchInputRef.current) {\r\n                    this.searchInputRef.current.focus();\r\n                }\r\n            }, ANIMATION_DURATION_200MS);\r\n        }\r\n    }\r\n\r\n    handleSearch = () => {\r\n        if (this.searchInputRef.current) {\r\n            const innerText = this.searchInputRef.current.innerText;\r\n            if (innerText) {\r\n                this.searchInputRef.current.innerText = '';\r\n\r\n                const { onSearch } = this.props;\r\n                if (!onSearch) return;\r\n\r\n                onSearch('');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const { onCloseSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        this.setState({ openSearch: !openSearch });\r\n\r\n        if (onCloseSearch) {\r\n            onCloseSearch();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleKeyUp = () => {\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        const { onSearch } = this.props;\r\n        if (!onSearch) return;\r\n\r\n        onSearch(innerText);\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, title, onClick, onClose, onSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {!openSearch ? (\r\n                    <>\r\n                        <IconButton className='header-left-button' onClick={onClose}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                            <span className='header-status-content'>{title}</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='header-search-input grow'>\r\n                            <div\r\n                                id='header-search-inputbox'\r\n                                ref={this.searchInputRef}\r\n                                placeholder={t('Search')}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {Boolean(onSearch) && (\r\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\r\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    onCloseSearch: PropTypes.func,\r\n    onSearch: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport { between, insertByOrder } from '../../../Utils/Common';\r\nimport { loadMessageContents } from '../../../Utils/File';\r\nimport { messageComparatorDesc } from '../../../Utils/Message';\r\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaBase.css';\r\n\r\nclass SharedMediaBase extends React.Component {\r\n    getListClassName() {\r\n        return null;\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return null;\r\n    }\r\n\r\n    constructor(props) {\r\n        if (new.target === SharedMediaBase) {\r\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\r\n        }\r\n\r\n        // console.log('SharedMediaBase.ctor');\r\n\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: [],\r\n            migratedItems: [],\r\n            searchItems: [],\r\n            searchMigratedItems: []\r\n        };\r\n    }\r\n\r\n    hasSearch() {\r\n        return true;\r\n    }\r\n\r\n    isValidContent(content) {\r\n        throw new Error('Virtual method isValidContent is not implemented');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, id } = message;\r\n\r\n        return (\r\n            <SharedDocument\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        throw new Error('Virtual method getSearchFilter is not implemented');\r\n    }\r\n\r\n    getHeader() {\r\n        throw new Error('Virtual method getHeader is not implemented');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_id, old_content, new_content } = update;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\r\n\r\n        if (chat_id === chatId) {\r\n            if (!items.length) return;\r\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\r\n\r\n            const index = items.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        } else if (chat_id === migratedChatId) {\r\n            if (!migratedItems.length) return;\r\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\r\n\r\n            const index = migratedItems.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({\r\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\r\n                    });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({\r\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\r\n                    });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { message } = update;\r\n        const { chat_id } = message;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!this.isValidMessage(message)) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: [message].concat(items) });\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: [message].concat(migratedItems) });\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_ids } = update;\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        const callback = () => {\r\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\r\n                this.onLoadNext(this.params);\r\n            }\r\n        };\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.params = {\r\n            loading: false,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onLoadNext(this.params);\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\r\n\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (params.migrateCompleted) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ migratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onLoadMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleScroll = () => {\r\n        if (!this.listRef) return;\r\n\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { params } = this;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (params && !params.completed) {\r\n                this.onLoadNext(params);\r\n            } else {\r\n                this.onLoadMigratedNext(params);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        list.scrollTop = 0;\r\n    };\r\n\r\n    handleSearchScroll = () => {\r\n        if (!this.searchListRef) return;\r\n\r\n        const list = this.searchListRef.current;\r\n        if (!list) return;\r\n\r\n        const { searchParams } = this;\r\n        if (!searchParams) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (!searchParams.completed) {\r\n                this.onSearchNext(searchParams);\r\n            } else {\r\n                this.onSearchMigratedNext(searchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    onSearchNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\r\n\r\n        if (completed) return;\r\n        if (loading) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (params.completed) {\r\n            this.onSearchMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onSearchNext(params, false);\r\n        }\r\n    };\r\n\r\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onSearchMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text ? text.trim() : '';\r\n        if (!query) {\r\n            this.handleCloseSearch();\r\n            return;\r\n        }\r\n\r\n        this.searchParams = {\r\n            query,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onSearchNext(this.searchParams, true);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.searchParams = null;\r\n        this.setState({ searchItems: [], searchMigratedItems: [] });\r\n    };\r\n\r\n    isValidMessage = message => {\r\n        if (!message) return false;\r\n\r\n        return this.isValidContent(message.content);\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\r\n        const { searchParams } = this;\r\n\r\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\r\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\r\n\r\n        return (\r\n            <>\r\n                <SharedMediaHeader\r\n                    title={this.getHeader()}\r\n                    onClick={this.handleHeaderClick}\r\n                    onClose={onClose}\r\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\r\n                    onCloseSearch={this.handleCloseSearch}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('shared-media-list', this.getListClassName())}\r\n                    onScroll={this.handleScroll}\r\n                    style={{ minHeight: popup ? minHeight : null }}>\r\n                    {messages}\r\n                </div>\r\n                {Boolean(searchParams) && (\r\n                    <div\r\n                        ref={this.searchListRef}\r\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\r\n                        onScroll={this.handleSearchScroll}>\r\n                        {searchMessages}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaBase.propTypes = {};\r\n\r\nexport default SharedMediaBase;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedAudios.css';\r\n\r\nclass SharedAudios extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterAudio' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('AudioTitle');\r\n    }\r\n}\r\n\r\nSharedAudios.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedAudios.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedAudios);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedDocuments.css';\r\n\r\nclass SharedDocuments extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageDocument';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterDocument' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('DocumentsTitle');\r\n    }\r\n}\r\n\r\nSharedDocuments.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedDocuments.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedDocuments);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedLinks.css';\r\n\r\nclass SharedLinks extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text } = content;\r\n        if (web_page) return true;\r\n        if (!text) return false;\r\n\r\n        const { entities } = text;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterUrl' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('LinksTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedLink\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                webPage={content.web_page}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinks.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedLinks.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedLinks);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { close } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={close}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Shared Media</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SharedMediaHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport './SharedMedia.css';\r\n\r\nclass SharedMedia extends React.Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, popup } = this.props;\r\n        const { value } = this.state;\r\n\r\n        const content = (\r\n            <>\r\n                <SharedMediaHeader close={onClose} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    scrollable\r\n                    scrollButtons='off'\r\n                    fullWidth>\r\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\r\n                </Tabs>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\r\n    }\r\n}\r\n\r\nSharedMedia.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedMedia.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default SharedMedia;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedPhotos.css';\r\n\r\nclass SharedPhotos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messagePhoto';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterPhoto' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('PhotosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedPhoto\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                photo={content.photo}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhotos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedPhotos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedPhotos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVideos.css';\r\n\r\nclass SharedVideos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVideo';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVideo' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VideosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVideo\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                video={content.video}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVideos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVideos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVoiceNotes.css';\r\n\r\nclass SharedVoiceNotes extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVoiceNote' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VoiceTitle');\r\n    }\r\n\r\n    hasSearch() {\r\n        return false;\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVoiceNote\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                voiceNote={content.voice_note}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNotes.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVoiceNotes.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNotes);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatDetails from './ChatDetails';\r\nimport GroupsInCommon from './GroupsInCommon';\r\nimport SharedAudios from './SharedMedia/SharedAudios';\r\nimport SharedDocuments from './SharedMedia/SharedDocuments';\r\nimport SharedLinks from './SharedMedia/SharedLinks';\r\nimport SharedMedia from './SharedMedia';\r\nimport SharedPhotos from './SharedMedia/SharedPhotos';\r\nimport SharedVideos from './SharedMedia/SharedVideos';\r\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\r\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\r\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\r\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfo.css';\r\n\r\nclass ChatInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detailsRef = React.createRef();\r\n\r\n        const { popup } = props;\r\n        const { chatId, dialogChatId } = AppStore;\r\n\r\n        this.state = {\r\n            chatId: popup ? dialogChatId : chatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: null,\r\n            migratedCounters: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.chatId);\r\n\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.state;\r\n        if (chatId !== prevState.chatId) {\r\n            this.loadContent(chatId);\r\n        }\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { popup } = this.props;\r\n        if (popup) return;\r\n\r\n        this.handleCloseChatDetails();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { popup } = this.props;\r\n        const { chatId } = this.state;\r\n\r\n        if (popup) return;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.sharedAudios = null;\r\n        this.sharedDocuments = null;\r\n        this.sharedLinks = null;\r\n        this.sharedPhotos = null;\r\n        this.sharedVideos = null;\r\n        this.sharedVoiceNotes = null;\r\n\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: ChatStore.getCounters(update.nextChatId),\r\n            migratedCounters: null\r\n        });\r\n\r\n        if (!update.nextChatId) {\r\n            this.handleCloseChatDetails();\r\n        }\r\n    };\r\n\r\n    loadContent = chatId => {\r\n        this.loadChatCounters(chatId);\r\n        this.loadMigratedCounters(chatId);\r\n\r\n        const photo = getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n    };\r\n\r\n    loadChatCounters = async chatId => {\r\n        const counters = await getChatCounters(chatId);\r\n        ChatStore.setCounters(chatId, counters);\r\n\r\n        if (chatId !== this.state.chatId) return;\r\n\r\n        this.setState({ counters });\r\n    };\r\n\r\n    loadMigratedCounters = async chatId => {\r\n        if (!isSupergroup(chatId)) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\r\n        if (!fullInfo) return;\r\n\r\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\r\n        if (!basic_group_id) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id,\r\n            force: true\r\n        });\r\n\r\n        if (!chat) return;\r\n\r\n        const counters = await getChatCounters(chat.id);\r\n        ChatStore.setCounters(chat.id, counters);\r\n\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\r\n    };\r\n\r\n    handleOpenSharedMedia = () => {\r\n        this.setState({ openSharedMedia: true });\r\n    };\r\n\r\n    handleCloseSharedMedia = () => {\r\n        this.setState({ openSharedMedia: false });\r\n    };\r\n\r\n    handleOpenGroupInCommon = () => {\r\n        this.setState({ openGroupInCommon: true });\r\n    };\r\n\r\n    handleCloseGroupsInCommon = () => {\r\n        this.setState({ openGroupInCommon: false });\r\n    };\r\n\r\n    handleCloseChatDetails = () => {\r\n        const { popup } = this.props;\r\n        const { userChatId } = this.state;\r\n\r\n        if (userChatId) {\r\n            this.setState({ userChatId: null });\r\n        } else if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        } else {\r\n            changeChatDetailsVisibility(false);\r\n        }\r\n    };\r\n\r\n    handleOpenSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: true });\r\n    };\r\n\r\n    handleCloseSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: false });\r\n    };\r\n\r\n    handleOpenSharedAudios = () => {\r\n        this.setState({ openSharedAudios: true });\r\n    };\r\n\r\n    handleCloseSharedAudios = () => {\r\n        this.setState({ openSharedAudios: false });\r\n    };\r\n\r\n    handleOpenSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: true });\r\n    };\r\n\r\n    handleCloseSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: false });\r\n    };\r\n\r\n    handleOpenSharedLinks = () => {\r\n        this.setState({ openSharedLinks: true });\r\n    };\r\n\r\n    handleCloseSharedLinks = () => {\r\n        this.setState({ openSharedLinks: false });\r\n    };\r\n\r\n    handleOpenSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: true });\r\n    };\r\n\r\n    handleCloseSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: false });\r\n    };\r\n\r\n    handleOpenSharedVideos = () => {\r\n        this.setState({ openSharedVideos: true });\r\n    };\r\n\r\n    handleCloseSharedVideos = () => {\r\n        this.setState({ openSharedVideos: false });\r\n    };\r\n\r\n    render() {\r\n        const { className, popup } = this.props;\r\n        const {\r\n            chatId,\r\n            counters,\r\n            migratedChatId,\r\n            migratedCounters,\r\n            userChatId,\r\n            openSharedAudios,\r\n            openSharedDocuments,\r\n            openSharedLinks,\r\n            openSharedMedia,\r\n            openSharedPhotos,\r\n            openSharedVideos,\r\n            openSharedVoiceNotes,\r\n            openGroupInCommon\r\n        } = this.state;\r\n\r\n        const currentChatId = chatId || userChatId;\r\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\r\n\r\n        let content = null;\r\n        if (openSharedMedia) {\r\n            content = (\r\n                <SharedMedia\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedMedia}\r\n                />\r\n            );\r\n        } else if (openSharedAudios) {\r\n            this.sharedAudios = this.sharedAudios || (\r\n                <SharedAudios\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedAudios}\r\n                />\r\n            );\r\n\r\n            content = this.sharedAudios;\r\n        } else if (openSharedDocuments) {\r\n            this.sharedDocuments = this.sharedDocuments || (\r\n                <SharedDocuments\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedDocuments}\r\n                />\r\n            );\r\n\r\n            content = this.sharedDocuments;\r\n        } else if (openSharedLinks) {\r\n            this.sharedLinks = this.sharedLinks || (\r\n                <SharedLinks\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedLinks}\r\n                />\r\n            );\r\n\r\n            content = this.sharedLinks;\r\n        } else if (openSharedPhotos) {\r\n            this.sharedPhotos = this.sharedPhotos || (\r\n                <SharedPhotos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedPhotos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedPhotos;\r\n        } else if (openSharedVideos) {\r\n            this.sharedVideos = this.sharedVideos || (\r\n                <SharedVideos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVideos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVideos;\r\n        } else if (openSharedVoiceNotes) {\r\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\r\n                <SharedVoiceNotes\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVoiceNotes}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVoiceNotes;\r\n        } else if (openGroupInCommon) {\r\n            content = (\r\n                <GroupsInCommon\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseGroupsInCommon}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <ChatDetails\r\n                    ref={this.detailsRef}\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    backButton={userChatId === chatId}\r\n                    counters={counters}\r\n                    migratedCounters={migratedCounters}\r\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\r\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\r\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\r\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\r\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\r\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\r\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\r\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\r\n                    onClose={this.handleCloseChatDetails}\r\n                />\r\n            );\r\n        }\r\n\r\n        return popup ? (\r\n            <>{content}</>\r\n        ) : (\r\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfo.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nChatInfo.defaultProps = {\r\n    className: null,\r\n    classes: null,\r\n    popup: false\r\n};\r\n\r\nexport default ChatInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {\r\n    getChatTypingString,\r\n    getChatDraft,\r\n    getLastMessageSenderName,\r\n    getLastMessageContent,\r\n    showChatDraft, isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './DialogContent.css';\r\n\r\nclass DialogContent extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateUserChatAction', this.onUpdate);\r\n        UserStore.on('updateUser', this.onUpdateUser);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUser = update => {\r\n        const { chatId } = this.props;\r\n        const { user } = update;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (isPrivateChat(chatId)) return;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return;\r\n\r\n        const { sender_id } = last_message;\r\n        if (sender_id.user_id !== user.id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        let contentControl = null;\r\n        const typingString = getChatTypingString(chatId);\r\n        if (typingString) {\r\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const draft = getChatDraft(chatId);\r\n            if (showChatDraft(chatId)) {\r\n                const text = draft.text || '\\u00A0';\r\n\r\n                contentControl = (\r\n                    <>\r\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\r\n                        {text}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\r\n            const senderName = getLastMessageSenderName(chat, t);\r\n            contentControl = (\r\n                <>\r\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return <div className='dialog-content'>{contentControl}</div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\r\n        <path\r\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\r\n            strokeWidth='1.66'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n        />\r\n    </g>,\r\n    'Pin'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PinIcon from '../../Assets/Icons/Pin';\r\nimport {\r\n    isChatMuted,\r\n    isChatPinned,\r\n    showChatUnreadCount,\r\n    showChatUnreadMentionCount\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\nimport './DialogBadge.css';\r\n\r\nclass DialogBadge extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, chatList } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.on('updateChatPosition', this.onUpdate);\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.off('updateChatPosition', this.onUpdate);\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId, chatList } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { unread_count } = chat;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\r\n        const showUnreadCount = showChatUnreadCount(chatId);\r\n        const isMuted = isChatMuted(chatId);\r\n\r\n        return (\r\n            <>\r\n                {showUnreadMentionCount && (\r\n                    <div className='dialog-badge'>\r\n                        <div className='dialog-badge-mention'>@</div>\r\n                    </div>\r\n                )}\r\n                {showUnreadCount && (\r\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\r\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\r\n                    </div>\r\n                )}\r\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\r\n                    <div className='dialog-badge-pinned'>\r\n                        <PinIcon className='dialog-badge-pinned-icon' />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogBadge;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\r\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\r\n        </g>\r\n    </g>,\r\n    'Error'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n        <g transform='translate(-3.000000, 0.000000)'>\r\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\r\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\r\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\r\n        </g>\r\n    </g>,\r\n    'Pending'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-4.000000, -2.000000)'\r\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\r\n    />,\r\n    'Sent'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-1.000000, -2.000000)'\r\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\r\n    />,\r\n    'Succeeded'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '../../Assets/Icons/Error';\r\nimport PendingIcon from '../../Assets/Icons/Pending';\r\nimport SentIcon from '../../Assets/Icons/Sent';\r\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\r\nimport { isMessageUnread } from '../../Utils/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Status.css';\r\n\r\nclass Status extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const sendingState = message ? message.sending_state : null;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                sendingState,\r\n                unread: isMessageUnread(chatId, messageId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\r\n    }\r\n\r\n    onUpdateMessageSendAcknowledged = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.setState({ sendingState: null });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { old_message_id, message } = update;\r\n\r\n        if (messageId !== old_message_id) return;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, sending_state } = message;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.newMessageId = id;\r\n        this.setState({ sendingState: sending_state });\r\n    };\r\n\r\n    onUpdateChatReadOutbox = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, last_read_outbox_message_id } = update;\r\n        const { newMessageId } = this;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\r\n            this.setState({ sendingState: null, unread: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const { sendingState, unread } = this.state;\r\n        if (!unread) {\r\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\r\n        }\r\n\r\n        if (sendingState) {\r\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\r\n                <ErrorIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\r\n                />\r\n            ) : (\r\n                <PendingIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\r\n    }\r\n}\r\n\r\nStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nexport default Status;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Status from '../Message/Status';\r\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogMeta.css';\r\n\r\nclass DialogMeta extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return null;\r\n\r\n        const date = getLastMessageDate(chat);\r\n        if (!date) return null;\r\n\r\n        const { id, is_outgoing } = last_message;\r\n\r\n        return (\r\n            <div className='dialog-meta'>\r\n                {is_outgoing && !isMe && (\r\n                    <>\r\n                        <Status chatId={chatId} messageId={id} />\r\n                        <span> </span>\r\n                    </>\r\n                )}\r\n                {date}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Archive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Unarchive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\r\n    'Pin2'\r\n);\r\n\r\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\r\n// <title>Combined Shape</title>\r\n// <desc>Created with Sketch.</desc>\r\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\r\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\r\n// </g>\r\n// </g>\r\n// </svg>\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\r\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\r\n    </g>,\r\n    'PinOff'\r\n);\r\n\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\r\n    'Mute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\r\n    'Unmute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'User'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\r\n    'Group'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\r\n    'Message'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\r\n    'Unread'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport DialogContent from './DialogContent';\r\nimport DialogBadge from './DialogBadge';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogMeta from './DialogMeta';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport MuteIcon from '../../Assets/Icons/Mute';\r\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MessageIcon from '../../Assets/Icons/Message';\r\nimport UnreadIcon from '../../Assets/Icons/Unread';\r\nimport {\r\n    canAddChatToList,\r\n    canDeleteChat,\r\n    getDeleteChatTitle,\r\n    getViewInfoTitle,\r\n    isChatArchived,\r\n    isChatMuted,\r\n    isChatPinned,\r\n    isChatSecret,\r\n    isChatUnread,\r\n    isMeChat,\r\n    isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport {\r\n    addChatToList,\r\n    leaveChat,\r\n    toggleChatIsMarkedAsUnread,\r\n    toggleChatIsPinned,\r\n    toggleChatNotificationSettings\r\n} from '../../Actions/Chat';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { viewMessages } from '../../Actions/Message';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialog.css';\r\n\r\nclass Dialog extends Component {\r\n    static contextMenuId;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialog = React.createRef();\r\n\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        this.state = {\r\n            chat,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            // console.log('[vl] Dialog.shouldUpdate true t');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.isLastPinned !== isLastPinned) {\r\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatList !== chatList) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\r\n            // console.log('[vl] Dialog.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] Dialog.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        if (event.button === 0) {\r\n            openChat(this.props.chatId);\r\n        }\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { chatId, chatList } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const contextMenuId = new Date();\r\n            Dialog.contextMenuId = contextMenuId;\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const isPinned = isChatPinned(chatId, chatList);\r\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\r\n            const canToggleArchive = canAddChatToList(chatId);\r\n            const canMute = !isMeChat(chatId);\r\n\r\n            if (Dialog.contextMenuId !== contextMenuId) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                canTogglePin,\r\n                canToggleArchive,\r\n                canMute,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\r\n    };\r\n\r\n    canPinChats = async chatId => {\r\n        const { chatList } = this.props;\r\n\r\n        const pinnedSumMaxOption = isChatArchived(chatId)\r\n            ? OptionStore.get('pinned_archived_chat_count_max')\r\n            : OptionStore.get('pinned_chat_count_max');\r\n        if (!pinnedSumMaxOption) return false;\r\n\r\n        const isSecret = isChatSecret(chatId);\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            limit: pinnedSumMaxOption.value + 10\r\n        });\r\n\r\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\r\n            if (isChatSecret(id) !== isSecret) return x;\r\n\r\n            const chat = ChatStore.get(id);\r\n\r\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\r\n        }, 0);\r\n\r\n        return pinnedSum < pinnedSumMaxOption.value;\r\n    };\r\n\r\n    handlePin = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId, chatList } = this.props;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        if (!isPinned && !this.canPinChats(chatId)) return;\r\n\r\n        toggleChatIsPinned(chatId, chatList, !isPinned);\r\n    };\r\n\r\n    handleArchive = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n        if (!canAddChatToList(chatId)) return;\r\n\r\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\r\n    };\r\n\r\n    handleViewInfo = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleRead = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const isUnread = isChatUnread(chatId);\r\n        if (isUnread) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (!chat) return;\r\n\r\n            const { is_marked_as_unread, last_message, unread_count } = chat;\r\n            if (unread_count > 0 && last_message) {\r\n                viewMessages(chatId, [last_message.id], true);\r\n            } else if (is_marked_as_unread) {\r\n                toggleChatIsMarkedAsUnread(chatId, false);\r\n            }\r\n        } else {\r\n            toggleChatIsMarkedAsUnread(chatId, true);\r\n        }\r\n    };\r\n\r\n    handleDeleteChat = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        leaveChat(chatId)\r\n    };\r\n\r\n    render() {\r\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\r\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\r\n\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const isSelected = currentChatId === chatId;\r\n        const isMuted = isChatMuted(chatId);\r\n        const isUnread = isChatUnread(chatId);\r\n        const isArchived = isChatArchived(chatId);\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\r\n                onMouseDown={this.handleSelect}\r\n                onContextMenu={this.handleContextMenu}\r\n                style={style}\r\n                >\r\n                    <div className='dialog-wrapper'>\r\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\r\n                        <div className='dialog-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} />\r\n                                <DialogMeta chatId={chatId} />\r\n                            </div>\r\n                            <div className='tile-second-row'>\r\n                                <DialogContent chatId={chatId} />\r\n                                <DialogBadge chatId={chatId} chatList={chatList} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Popover\r\n                        open={contextMenu}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        anchorReference='anchorPosition'\r\n                        anchorPosition={{ top, left }}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            {canToggleArchive && (\r\n                                <MenuItem onClick={this.handleArchive}>\r\n                                    {isArchived ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnarchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Unarchive')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <ArchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Archive')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            {canTogglePin && (\r\n                                <MenuItem onClick={this.handlePin}>\r\n                                    {isPinned ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnpinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('UnpinFromTop')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <PinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('PinToTop')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleViewInfo}>\r\n                                <ListItemIcon>\r\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                            </MenuItem>\r\n                            { canMute && (\r\n                                <MenuItem onClick={this.handleMute}>\r\n                                    {isMuted ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnmuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsUnmute')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <MuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsMute')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleRead}>\r\n                                {isUnread ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <MessageIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsRead')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnreadIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsUnread')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                            {/*{clearHistory && (*/}\r\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\r\n                            {/*        <ListItemIcon>*/}\r\n                            {/*            <BroomIcon />*/}\r\n                            {/*        </ListItemIcon>*/}\r\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\r\n                            {/*    </MenuItem>*/}\r\n                            {/*)}*/}\r\n                            {deleteChat && deleteChatTitle && (\r\n                                <MenuItem onClick={this.handleDeleteChat}>\r\n                                    <ListItemIcon>\r\n                                        <DeleteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={deleteChatTitle} />\r\n                                </MenuItem>\r\n                            )}\r\n                        </MenuList>\r\n                    </Popover>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nDialog.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    chatList: PropTypes.object.isRequired,\r\n    hidden: PropTypes.bool,\r\n    showSavedMessages: PropTypes.bool,\r\n    isLastPinned: PropTypes.bool,\r\n    style: PropTypes.object\r\n};\r\n\r\nDialog.defaultProps = {\r\n    hidden: false,\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(Dialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport './DialogPlaceholder.css';\r\n\r\nclass DialogPlaceholder extends React.Component {\r\n    render() {\r\n        const { chatId, index, showTitle } = this.props;\r\n\r\n        let title = null;\r\n        if (showTitle) {\r\n            title = getChatTitle(chatId, true);\r\n        }\r\n\r\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\r\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\r\n\r\n        return (\r\n            <div className='dialog-placeholder'>\r\n                <div className='dialog-placeholder-wrapper'>\r\n                    <div className='dialog-placeholder-tile' />\r\n                    <div className='dialog-placeholder-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {showTitle ? (\r\n                                title\r\n                            ) : (\r\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\r\n                            )}\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogPlaceholder.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    showTitle: PropTypes.bool\r\n};\r\n\r\nexport default DialogPlaceholder;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './VirtualizedList.css';\r\n\r\nconst style = {\r\n    listWrapper: height => ({\r\n        height,\r\n        position: 'relative'\r\n    }),\r\n    item: (index, height) => ({\r\n        height,\r\n        left: 0,\r\n        right: 0,\r\n        top: height * index,\r\n        position: 'absolute'\r\n    })\r\n};\r\n\r\nexport class VirtualizedList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0,\r\n            renderIds: new Map(),\r\n            renderIdsList: [],\r\n            viewportHeight: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.source !== this.props.source) {\r\n            this.setViewportHeight();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return true;\r\n\r\n        // const { renderIds } = this.state;\r\n        // const { renderIds: nextRenderIds } = nextState;\r\n        //\r\n        // if (renderIds.size === nextRenderIds.size) {\r\n        //     renderIds.forEach((value, key) => {\r\n        //         if (!nextRenderIds.has(key)) {\r\n        //             return true;\r\n        //         }\r\n        //     });\r\n        //\r\n        //     return false;\r\n        // }\r\n        //\r\n        // return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.setViewportHeight, true);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.addEventListener('scroll', this.setScrollPosition, true);\r\n\r\n        this.setViewportHeight();\r\n    }\r\n\r\n    setViewportHeight = () => {\r\n        const { source } = this.props;\r\n        const { scrollTop } = this.state;\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\r\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\r\n\r\n        // console.log('[vl] setViewportHeight');\r\n        this.setState({ viewportHeight, ...renderIds });\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setViewportHeight);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.removeEventListener('scroll', this.setScrollPosition);\r\n    }\r\n\r\n    getListRenderIds() {\r\n        const { renderIds } = this.state;\r\n\r\n        return renderIds;\r\n    }\r\n\r\n    setScrollPosition = event => {\r\n        const { source, rowHeight, onScroll } = this.props;\r\n        const { viewportHeight, scrollTop } = this.state;\r\n\r\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\r\n\r\n            this.setState({\r\n                scrollTop: event.target.scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n\r\n        if (onScroll) {\r\n            onScroll(event);\r\n        }\r\n    };\r\n\r\n    getListRef() {\r\n        return this.listRef;\r\n    }\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { overScanCount, rowHeight } = this.props;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, source, renderItem, rowHeight } = this.props;\r\n        const { renderIds } = this.state;\r\n\r\n        const items = (source || []).map((item, index) => {\r\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\r\n        });\r\n\r\n        // console.log('[vl] render', source, renderIds);\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('vlist', className)}>\r\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\r\n                    {items}\r\n                </div>\r\n                {/*<div className='vlist-top-border'/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVirtualizedList.defaultProps = {\r\n    source: [],\r\n    rowHeight: 72,\r\n    overScanCount: 5\r\n};\r\n\r\nVirtualizedList.propTypes = {\r\n    renderItem: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    rowHeight: PropTypes.number,\r\n    className: PropTypes.string,\r\n    source: PropTypes.array.isRequired,\r\n    overScanCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VirtualizedList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function findLastTextNode(element) {\r\n    if (element.nodeType === Node.TEXT_NODE) {\r\n        return element;\r\n    }\r\n\r\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\r\n        const textNode = findLastTextNode(element.childNodes[i]);\r\n        if (textNode) {\r\n            return textNode;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function focusInput(element) {\r\n    if (!element) return;\r\n\r\n    const textNode = findLastTextNode(element);\r\n    if (textNode) {\r\n        const range = document.createRange();\r\n        range.setStart(textNode, textNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    element.focus();\r\n}\r\n\r\nexport function scrollTop(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n    if (element.scrollTop === 0) return;\r\n\r\n    element.scrollTop = Math.min(element.scrollTop, 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: 0, behavior });\r\n    }, 1);\r\n}\r\n\r\nexport function scrollBottom(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\r\n\r\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\r\n    }, 1);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\r\n    'Channel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\r\n    'Menu'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\r\n    'Help'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\r\n    'Settings'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass CacheManager {\r\n    async load(key) {\r\n        const value = localStorage.getItem(key);\r\n        if (!value) return null;\r\n\r\n        try {\r\n            return JSON.parse(value);\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async save(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    async remove(key) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    async clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nconst manager = new CacheManager();\r\nexport default manager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { debounce } from '../Utils/Common';\r\nimport CacheManager from '../Workers/CacheManager';\r\nimport {\r\n    STORAGE_CACHE_KEY,\r\n    STORAGE_CACHE_TEST_KEY,\r\n    STORAGE_CONTACTS_KEY,\r\n    STORAGE_CONTACTS_TEST_KEY,\r\n    STORAGE_FILES_KEY,\r\n    STORAGE_FILES_TEST_KEY,\r\n    STORAGE_FILTERS_KEY,\r\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\r\n} from '../Constants';\r\nimport BasicGroupStore from './BasicGroupStore';\r\nimport ChatStore from './ChatStore';\r\nimport FileStore from './FileStore';\r\nimport MessageStore from './MessageStore';\r\nimport OptionStore from './OptionStore';\r\nimport SupergroupStore from './SupergroupStore';\r\nimport UserStore from './UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass CacheStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.cacheContacts = false;\r\n\r\n        const { useTestDC } = TdLibController.parameters;\r\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\r\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\r\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\r\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\r\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n\r\n        this.saveInternal = debounce(this.saveInternal, 2000, {\r\n            leading: false,\r\n            trailing: true\r\n        });\r\n    }\r\n\r\n    reset = () => {\r\n        this.filters = null;\r\n        this.chatIds = [];\r\n        this.archiveChatIds = [];\r\n        this.meChat = null;\r\n        if (this.cacheContacts) {\r\n            this.contacts = null;\r\n        }\r\n\r\n        this.cache = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        this.clear();\r\n                        break;\r\n                    }\r\n                    case 'authorizationStateLoggingOut':\r\n                    case 'authorizationStateWaitCode':\r\n                    case 'authorizationStateWaitPhoneNumber':\r\n                    case 'authorizationStateWaitPassword':\r\n                    case 'authorizationStateWaitRegistration': {\r\n                        CacheManager.remove(this.cacheKey);\r\n                        CacheManager.remove(this.filesKey);\r\n                        if (this.cacheContacts) {\r\n                            CacheManager.remove(this.contactsKey);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateDialogsReady': {\r\n                this.clearDataUrls();\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    async load() {\r\n        const promises = [];\r\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\r\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\r\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\r\n        if (this.cacheContacts) {\r\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\r\n        }\r\n        let [cache, files, filters, contacts] = await Promise.all(promises);\r\n        // console.log('[f] cache.load', files);\r\n\r\n        let dropCache = false;\r\n        if (cache && cache.chats) {\r\n            for (let i = 0; i < cache.chats.length; i++) {\r\n                const { last_message } = cache.chats[i];\r\n                if (last_message && last_message.sender_user_id) {\r\n                    dropCache = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (dropCache) {\r\n            cache = null;\r\n        }\r\n\r\n        this.cache = cache;\r\n        if (this.cache) {\r\n            this.cache.files = files || [];\r\n        }\r\n\r\n        if (this.cacheContacts) {\r\n            if (contacts) {\r\n                (contacts || []).forEach(x => {\r\n                    UserStore.set(x);\r\n                })\r\n\r\n                this.contacts = {\r\n                    '@type': 'users',\r\n                    user_ids: contacts.map(x => x.id),\r\n                    total_count: contacts.length\r\n                };\r\n            }\r\n        }\r\n\r\n        this.filters = filters;\r\n\r\n        if (this.cache) {\r\n            this.parseCache(this.cache);\r\n        }\r\n\r\n        // console.log('[cm] load', this.filters, filters);\r\n        return this.cache;\r\n    }\r\n\r\n    parseCache(cache) {\r\n        if (!cache) return;\r\n\r\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\r\n        // console.log('[f] cache.parse', cache.files);\r\n\r\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\r\n            FileStore.setDataUrl(id, url);\r\n        });\r\n\r\n        (users || []).forEach(x => {\r\n            UserStore.set(x);\r\n        });\r\n\r\n        (basicGroups || []).forEach(x => {\r\n            BasicGroupStore.set(x);\r\n        });\r\n\r\n        (supergroups || []).forEach(x => {\r\n            SupergroupStore.set(x);\r\n        });\r\n\r\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\r\n            if (x) {\r\n                delete x.OutputTypingManager;\r\n\r\n                ChatStore.set(x);\r\n                if (x.photo) {\r\n                    if (x.photo.small) FileStore.set(x.photo.small);\r\n                    if (x.photo.big) FileStore.set(x.photo.big);\r\n                }\r\n                if (x.position) {\r\n                    ChatStore.updateChatChatLists(x.id);\r\n                }\r\n                if (x.last_message) {\r\n                    MessageStore.set(x.last_message);\r\n                }\r\n            }\r\n        });\r\n\r\n        (options || []).forEach(([id, option]) => {\r\n            OptionStore.set(id, option);\r\n        });\r\n    }\r\n\r\n    async getCache(chatIds, archiveChatIds) {\r\n        const fileMap = new Map();\r\n        const userMap = new Map();\r\n        const basicGroupMap = new Map();\r\n        const supergroupMap = new Map();\r\n        const meChat = this.meChat;\r\n        const chats = chatIds.map(x => ChatStore.get(x));\r\n        const chatMap = new Map(chats.map(x => [x.id, x]));\r\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\r\n\r\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\r\n            const { photo, type, last_message } = x;\r\n            if (photo && photo.small) {\r\n                const { id } = photo.small;\r\n                if (id) {\r\n                    const blob = FileStore.getBlob(id);\r\n                    if (blob) {\r\n                        fileMap.set(id, blob);\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type['@type']) {\r\n                case 'chatTypeBasicGroup': {\r\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                    if (basicGroup) {\r\n                        basicGroupMap.set(basicGroup.id, basicGroup);\r\n                    }\r\n                }\r\n                case 'chatTypePrivate':\r\n                case 'chatTypeSecret': {\r\n                    const user = UserStore.get(type.user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n                case 'chatTypeSupergroup': {\r\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                    if (supergroup) {\r\n                        supergroupMap.set(supergroup.id, supergroup);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (last_message) {\r\n                const { sender_id } = last_message;\r\n                switch (sender_id['@type']) {\r\n                    case 'messageSenderUser': {\r\n                        const user = UserStore.get(sender_id.user_id);\r\n                        if (user) {\r\n                            userMap.set(user.id, user);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSenderChat': {\r\n                        const chat = ChatStore.get(sender_id.chat_id);\r\n                        if (chat) {\r\n                            chatMap.set(chat.id, chat);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return {\r\n            date: new Date(),\r\n            meChat,\r\n            chats: [...chatMap.values()],\r\n            archiveChats,\r\n            users: [...userMap.values()],\r\n            basicGroups: [...basicGroupMap.values()],\r\n            supergroups: [...supergroupMap.values()],\r\n            files: [...fileMap.entries()],\r\n            options: [...OptionStore.items.entries()]\r\n        };\r\n    }\r\n\r\n    async save(filters, chatIds, archiveChatIds) {\r\n        this.chatIds = chatIds;\r\n        this.archiveChatIds = archiveChatIds;\r\n        this.meChat = this.meChat || await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: false\r\n        });\r\n        if (this.cacheContacts) {\r\n            this.contacts = this.contacts || await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n        }\r\n        this.filters = filters;\r\n\r\n        // console.log('[cm] save');\r\n        this.saveInternal();\r\n    }\r\n\r\n    async saveInternal() {\r\n        // console.log('[cm] saveInternal');\r\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\r\n        const files = cache.files;\r\n        cache.files = [];\r\n        // console.log('[cm] save cache', cache);\r\n        await CacheManager.save(this.cacheKey, cache);\r\n\r\n        const promises = [];\r\n        files.forEach(x => {\r\n            const [id, blob] = x;\r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.readAsDataURL(blob);\r\n                    fileReader.onload = e => {\r\n                        resolve({ id, url: e.target.result });\r\n                    };\r\n                    fileReader.onerror = e => {\r\n                        resolve(null);\r\n                    };\r\n                })\r\n            );\r\n        });\r\n        const results = await Promise.all(promises);\r\n        await CacheManager.save(this.filesKey, results);\r\n\r\n        if (this.cacheContacts) {\r\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\r\n            await CacheManager.save(this.contactsKey, contacts);\r\n        }\r\n\r\n        if (this.filters) {\r\n            await CacheManager.save(this.filtersKey, this.filters);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        const promises = [];\r\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\r\n\r\n        Promise.all(promises);\r\n    }\r\n\r\n    clearDataUrls() {\r\n        if (this.cache) {\r\n            const { files } = this.cache;\r\n\r\n            files.forEach(({ id, url }) => {\r\n                FileStore.deleteDataUrl(id);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new CacheStore();\r\nwindow.cache = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport ChannelIcon from '../../Assets/Icons/Channel';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MenuIcon from '../../Assets/Icons/Menu';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport HelpIcon from '../../Assets/Icons/Help';\r\nimport SavedIcon from '../../Assets/Icons/Saved';\r\nimport SettingsIcon from '../../Assets/Icons/Settings';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\r\nimport { openSupportChat } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            anchorEl: null,\r\n            isSmallWidth: AppStore.isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCheckUpdates = async () => {\r\n        this.handleMenuClose();\r\n\r\n        //await update();\r\n    };\r\n\r\n    handleNewChannel = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleNewGroup = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleContacts = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleArchived = event => {\r\n        this.handleMenuClose();\r\n\r\n        openArchive();\r\n    };\r\n\r\n    handleSaved = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleSettings = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: true,\r\n            chatId: chat.id\r\n        });\r\n    };\r\n\r\n    handleHelp = async event => {\r\n        this.handleMenuClose();\r\n\r\n        openSupportChat();\r\n    };\r\n\r\n    handleSearch = () => {\r\n        this.handleMenuClose();\r\n\r\n        searchChat(0);\r\n    };\r\n\r\n    render() {\r\n        const { t, timeout, popup, showClose, onClose } = this.props;\r\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\r\n\r\n        const mainMenuControl =\r\n            !showClose && isAuthorizationReady(authorizationState) ? (\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleNewChannel}>\r\n                        <ListItemIcon>\r\n                            <ChannelIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewChannel')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleNewGroup}>\r\n                        <ListItemIcon>\r\n                            <GroupIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewGroup')} />\r\n                    </MenuItem>\r\n                    { isSmallWidth && (\r\n                        <MenuItem onClick={this.handleSearch}>\r\n                            <ListItemIcon>\r\n                                <SearchIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Search')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleContacts}>\r\n                        <ListItemIcon>\r\n                            <UserIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Contacts')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleArchived}>\r\n                        <ListItemIcon>\r\n                            <ArchiveIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Archived')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSaved}>\r\n                        <ListItemIcon>\r\n                            <SavedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Saved')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSettings}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Settings')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleHelp}>\r\n                        <ListItemIcon>\r\n                            <HelpIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('SettingsHelp')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            ) : null;\r\n\r\n        const closeIcon = popup\r\n            ? <CloseIcon/>\r\n            : <ArrowBackIcon/>;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-left-button main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\r\n                    { timeout\r\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\r\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\r\n                    }\r\n\r\n                </IconButton>\r\n                {mainMenuControl}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === 27) {\r\n            const { onChange, onClose } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n\r\n            if (element.innerText) {\r\n                event.stopPropagation();\r\n                event.nativeEvent.stopImmediatePropagation();\r\n\r\n                element.innerText = null;\r\n                if (onChange) onChange(element.innerText);\r\n                return;\r\n            }\r\n\r\n            if (onClose) {\r\n                onClose(event);\r\n            }\r\n        } else if (event.keyCode === 8) {\r\n            const { onBackspace } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n            if (element.innerText) return;\r\n\r\n            if (onBackspace) {\r\n                event.stopPropagation();\r\n                onBackspace();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyUp = event => {\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { onChange } = this.props;\r\n\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        if (onChange) {\r\n            onChange(element.innerText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\r\n\r\n        return (\r\n            <div className='search-input'>\r\n                <div className='search-input-wrapper'>\r\n                    {showIcon && <SearchIcon className='search-input-icon' />}\r\n                    <div\r\n                        id='search-inputbox'\r\n                        ref={inputRef}\r\n                        placeholder={hint || t('Search')}\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onKeyUp={this.handleKeyUp}\r\n                        onPaste={this.handlePaste}\r\n                        onInput={this.handleInput}\r\n                        onFocus={onFocus}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchInput.propTypes = {\r\n    inputRef: PropTypes.object,\r\n    hint: PropTypes.string,\r\n    showIcon: PropTypes.bool,\r\n    onBackspace: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nSearchInput.defaultProps = {\r\n    showIcon: true\r\n}\r\n\r\nexport default withTranslation()(SearchInput);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport SearchInput from './Search/SearchInput';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport '../ColumnMiddle/Header.css';\r\n\r\nclass DialogsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            open: false\r\n        };\r\n    }\r\n\r\n    setInitQuery(query) {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.innerText = query;\r\n            if (searchInput.childNodes.length > 0) {\r\n                const range = document.createRange();\r\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\r\n                range.collapse(true);\r\n\r\n                const selection = window.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            }\r\n            searchInput.focus();\r\n            onSearchTextChange(query);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.props;\r\n\r\n        if (openSearch !== prevProps.openSearch) {\r\n            if (openSearch) {\r\n                this.focusInput();\r\n            } else {\r\n                const searchInput = this.searchInputRef.current;\r\n                if (searchInput) {\r\n                    searchInput.innerText = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    focusInput() {\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.popup) {\r\n            this.focusInput();\r\n        }\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleSearch = () => {\r\n        const { onSearch, openSearch } = this.props;\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        onSearch(!openSearch);\r\n    };\r\n\r\n    handleSearchTextChange = () => {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        onSearchTextChange(innerText);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    handleFocus = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    render() {\r\n        const { openSearch, timeout, popup } = this.props;\r\n\r\n        let content = null;\r\n        let showBack = false;\r\n        if (openSearch) {\r\n            showBack = true;\r\n            content = (\r\n                <SearchInput\r\n                    inputRef={this.searchInputRef}\r\n                    onChange={this.handleSearchTextChange}\r\n                    onClose={this.handleCloseSearch}\r\n                />\r\n            );\r\n        } else {\r\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsHeader.propTypes = {\r\n    openSearch: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func,\r\n    onSearch: PropTypes.func.isRequired,\r\n    onSearchTextChange: PropTypes.func.isRequired,\r\n    timeout: PropTypes.bool,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default DialogsHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport Animator from '../../Utils/Animatior';\r\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\r\nimport { openChatList } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './Filters.css';\r\n\r\nclass Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        const { isSmallWidth } = AppStore;\r\n        const { filters, chatList } = FilterStore;\r\n\r\n        this.state = {\r\n            isSmallWidth,\r\n            filters,\r\n            chatList\r\n        };\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n\r\n        this.setSelection();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n    }\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onClientUpdateLanguageChange = update => {\r\n        if (!this.hasObserver()) this.setSelection(false);\r\n    };\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { filters } = this.state;\r\n        if (filters) return;\r\n\r\n        const { filters: cachedFilters } = CacheStore;\r\n        if (!cachedFilters) return;\r\n\r\n        this.setState({\r\n            filters: cachedFilters\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        this.setState({\r\n            isSmallWidth\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { chatList, filters, isSmallWidth } = this.state;\r\n\r\n        const scroll = this.filtersRef.current;\r\n        const padding = 3;\r\n\r\n        let item = null;\r\n        let left = 9;\r\n        if (chatList['@type'] === 'chatListMain') {\r\n            const main = this.filterRef.get('chatListMain');\r\n            if (main){\r\n                item = main.firstChild;\r\n                left = item.offsetLeft;\r\n            }\r\n        } else if (chatList['@type'] === 'chatListFilter') {\r\n            for (let i = 0; i < filters.length; i++) {\r\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\r\n                if (filters[i].id === chatList.chat_filter_id) {\r\n                    item = filter.firstChild;\r\n                    left = item.offsetLeft;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    onUpdateChatFilters = update => {\r\n        const { chatList } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        this.setState({\r\n            filters\r\n        }, () => {\r\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\r\n                this.handleMainClick();\r\n            } else {\r\n                if (!this.hasObserver()) this.setSelection();\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = FilterStore;\r\n\r\n        this.setState({\r\n            chatList\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    handleMainClick = event => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListMain' });\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\r\n    };\r\n\r\n    handleWheel = event => {\r\n        if (!event.deltaY) {\r\n            return;\r\n        }\r\n\r\n        event.currentTarget.scrollLeft += event.deltaY;\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { filters, chatList, isSmallWidth } = this.state;\r\n\r\n        if (!filters) return null;\r\n        if (!filters.length) return null;\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className='tabs'>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\r\n                    <div\r\n                        ref={r => this.filterRef.set('chatListMain', r)}\r\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\r\n                        onMouseDown={this.handleMainClick}\r\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\r\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\r\n                    </div>\r\n                    {filters.map(x => (\r\n                        <div\r\n                            key={x.id}\r\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\r\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\r\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\r\n                            title={isSmallWidth ? x.title : null}>\r\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\r\n                        </div>))}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n\r\n};\r\n\r\nexport default withTranslation()(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '../Tile/Dialog';\r\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\r\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './DialogsList.css';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport Filters from './Filters';\r\n\r\nclass DialogListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, chatList, style, hidden } = this.props;\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, chatList, hidden, style } = this.props;\r\n\r\n        return (\r\n            <div className='dialog-list-item' style={style}>\r\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DialogsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hiddenChats = new Map();\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        const { authorizationState } = AppStore;\r\n\r\n        this.state = {\r\n            authorizationState,\r\n            chats: null,\r\n            fistSliceLoaded: false,\r\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\r\n            params: {\r\n                loading: false,\r\n                completed: false\r\n            }\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.cacheItems !== cacheItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chats !== chats) {\r\n            return true;\r\n        }\r\n\r\n        // if (nextState.chatList !== chatList) {\r\n        //     return true;\r\n        // }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return { scrollTop: 0 };\r\n\r\n        return { scrollTop: list.scrollTop };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFirstSlice();\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = update;\r\n\r\n        if (chatListEquals(this.state.chatList, chatList)) {\r\n            this.scrollToTop();\r\n        } else {\r\n            this.setState({\r\n                chatList,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false\r\n                }\r\n            }, () => {\r\n                this.loadFirstSlice();\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        // const { supegroup, prevSupergroup } = update;\r\n        //\r\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\r\n        //     return;\r\n        // }\r\n\r\n\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { inProgress, chatId } = update;\r\n\r\n        if (inProgress) {\r\n            this.hiddenChats.set(chatId, chatId);\r\n        } else {\r\n            this.hiddenChats.delete(chatId);\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        const { authorization_state: authorizationState } = update;\r\n\r\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.onLoadNext(true);\r\n    };\r\n\r\n    loadFirstSlice = async () => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        await FileStore.initDB(() => this.onLoadNext(true));\r\n    };\r\n\r\n    saveCache = () => {\r\n        const { onSaveCache, type } = this.props;\r\n        const { chatList } = this.state;\r\n        if (type !== 'chatListMain') return;\r\n        if (chatList['@type'] !== 'chatListMain') return;\r\n\r\n        if (onSaveCache) onSaveCache();\r\n    };\r\n\r\n    onUpdateChatPosition = update => {\r\n        const { chatList } = this.state;\r\n        const { position } = update;\r\n\r\n        if (!chatListEquals(chatList, position.list)) {\r\n            return;\r\n        }\r\n\r\n        this.onUpdateChatOrder(update);\r\n    };\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { chats, chatList, params } = this.state;\r\n        if (!chats) return;\r\n\r\n        const { loading } = params;\r\n        if (loading && !chats.length) return;\r\n\r\n        const { chat_id } = update;\r\n\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat) {\r\n            return;\r\n        }\r\n\r\n        if (!hasChatList(chat_id, chatList)) {\r\n            return;\r\n        }\r\n\r\n        const order = getChatOrder(chat_id, chatList);\r\n        const currentIndex = chats.findIndex(x => x === chat_id);\r\n        if (currentIndex === -1 && order === '0') {\r\n            return;\r\n        }\r\n\r\n        const chatIds = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = ChatStore.get(chats[i]);\r\n            const chatOrder = getChatOrder(chats[i], chatList);\r\n            if (chat && chatOrder !== '0') {\r\n                chatIds.push(chat.id);\r\n            }\r\n        }\r\n\r\n        const newChatIds = [];\r\n        if (order === '0') {\r\n            // unselect deleted chat\r\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\r\n                TdLibController.setChatId(0);\r\n                changeChatDetailsVisibility(false);\r\n            }\r\n        } else {\r\n            if (currentIndex === -1) {\r\n                if (loading) {\r\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\r\n                    // TODO: check and add if within loaded part\r\n                } else {\r\n                    newChatIds.push(chat_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.reorderChats(chatIds, newChatIds, () => {\r\n            this.loadChatContents(newChatIds);\r\n            this.saveCache();\r\n        });\r\n    };\r\n\r\n    reorderChats(chatIds, newChatIds = [], callback) {\r\n        const { chatList } = this.state;\r\n\r\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\r\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\r\n        });\r\n\r\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        // console.log('[vl] reorderChats', orderedChatIds);\r\n        this.setState({ chats: orderedChatIds }, callback);\r\n    }\r\n\r\n    static isDifferentOrder(oldChatIds, newChatIds) {\r\n        if (oldChatIds.length === newChatIds.length) {\r\n            for (let i = 0; i < oldChatIds.length; i++) {\r\n                if (oldChatIds[i] !== newChatIds[i]) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleScroll = () => {\r\n        return;\r\n\r\n        // console.log('[vl] onScroll');\r\n        if (this.stub) return;\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const list = current.getListRef().current;\r\n        if (!list) return;\r\n\r\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\r\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\r\n            this.onLoadPrev();\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\r\n            // console.log(`[vl] onScroll onLoadNext`);\r\n            this.onLoadNext();\r\n        }\r\n    };\r\n\r\n    onLoadPrev() {\r\n\r\n    }\r\n\r\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\r\n        const { type } = this.props;\r\n        const { chats, chatList, params } = this.state;\r\n\r\n        // console.log('[folders] onLoadNext', chatList, limit);\r\n        if (params.loading) {\r\n            // console.log('[folders] onLoadNext cancel loading', chatList);\r\n            return;\r\n        }\r\n\r\n        if (params.completed) {\r\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\r\n            return;\r\n        }\r\n\r\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\r\n        let offsetChatId = 0;\r\n        let offsetChat = null;\r\n        if (!replace && chats && chats.length > 0) {\r\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\r\n            if (offsetChat) {\r\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\r\n                offsetChatId = offsetChat.id;\r\n            }\r\n        }\r\n\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            limit: 300\r\n        }).finally(() => {\r\n            params.loading = false;\r\n            if (replace) {\r\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\r\n            }\r\n        });\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\r\n\r\n        if (params !== this.state.params) {\r\n            // console.log('[folders] onLoadNext cancel', chatList);\r\n            return;\r\n        }\r\n\r\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\r\n            result.chat_ids.shift();\r\n        }\r\n\r\n        params.completed = !result.chat_ids.length;\r\n\r\n        if (replace) {\r\n            this.replaceChats(result.chat_ids, () => {\r\n                this.loadChatContents(result.chat_ids);\r\n                this.saveCache();\r\n\r\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\r\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\r\n                }\r\n\r\n                const list = this.listRef.current.getListRef().current;\r\n                if (!list) return;\r\n                list.scrollTop = 0;\r\n            });\r\n        } else {\r\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\r\n            this.appendChats(result.chat_ids, () => {\r\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\r\n                this.loadChatContents(result.chat_ids);\r\n\r\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\r\n                    this.onLoadNext(false, limit - result.chat_ids.length);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    appendChats(chatIds, callback) {\r\n        if (chatIds.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const { chats } = this.state;\r\n\r\n        const newChats = (chats || []).concat(chatIds);\r\n        this.setState({ chats: newChats }, callback);\r\n    }\r\n\r\n    replaceChats(chats, callback) {\r\n        this.setState({ chats }, callback);\r\n    }\r\n\r\n    scrollToTop() {\r\n        const list = this.listRef.current.getListRef().current;\r\n\r\n        scrollTop(list);\r\n    }\r\n\r\n    renderItem = ({ index, style }, source, stub = false) => {\r\n        const { chatList } = this.state;\r\n        const x = source[index];\r\n\r\n        if (stub) {\r\n            return <DialogPlaceholder key={index} index={index} />\r\n        }\r\n\r\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\r\n\r\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\r\n    };\r\n\r\n    render() {\r\n        const { cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        this.source = [];\r\n        this.stub = false;\r\n        if (chats) {\r\n            let lastPinnedId = 0;\r\n            chats.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = chats;\r\n        } else if (cacheItems) {\r\n            let lastPinnedId = 0;\r\n            cacheItems.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = cacheItems.map(x => x.id);\r\n        } else {\r\n            if (chatList['@type'] === 'chatListMain') {\r\n                this.source = Array.from(Array(10));\r\n                this.stub = true;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <VirtualizedList\r\n                ref={this.listRef}\r\n                className='dialogs-list'\r\n                source={this.source}\r\n                rowHeight={76}\r\n                overScanCount={20}\r\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\r\n                onScroll={this.handleScroll}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDialogsList.propTypes = {\r\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\r\n    cacheItems: PropTypes.array,\r\n};\r\n\r\nexport default DialogsList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport DialogsList from './DialogsList';\r\n\r\nclass Archive extends React.Component {\r\n    handleClick = () => {\r\n        const { innerListRef } = this.props;\r\n        if (!innerListRef) return;\r\n\r\n        const { current: list } = innerListRef;\r\n        if (!list) return;\r\n\r\n        list.scrollToTop();\r\n    };\r\n\r\n    render() {\r\n        const { t, innerListRef, cacheItems, onClose } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\r\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='dialogs-content'>\r\n                    <DialogsList\r\n                        type='chatListArchive'\r\n                        ref={innerListRef}\r\n                        cacheItems={cacheItems}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nArchive.propTypes = {};\r\n\r\nexport default withTranslation()(Archive);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './TopChat.css';\r\n\r\nclass TopChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\r\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\r\n                    <div className='top-chat-title'>{shortTitle}</div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTopChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nTopChat.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(TopChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Chat from './Chat';\r\nimport './RecentlyFoundChat.css';\r\n\r\nclass RecentlyFoundChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, onClick } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem\r\n                    button\r\n                    className='recently-found-chat'\r\n                    onClick={onClick}\r\n                    onContextMenu={this.handleContextMenu}>\r\n                    <Chat chatId={chatId} />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecentlyFoundChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RecentlyFoundChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from './Chat';\r\nimport { getChatUsername } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './FoundPublicChat.css';\r\n\r\nclass FoundPublicChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            previousChatId: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId, previousChatId } = update;\r\n\r\n        this.setState({\r\n            nextChatId: nextChatId,\r\n            previousChatId: previousChatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClick } = this.props;\r\n        const { nextChatId: selectedChatId } = this.state;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\r\n                onClick={onClick}>\r\n                <div className='found-public-chat-wrapper'>\r\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundPublicChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default FoundPublicChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatTile from './ChatTile';\r\nimport UserTile from './UserTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\r\nimport { getContent } from '../../Utils/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './FoundMessage.css';\r\n\r\nclass FoundMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            nextMessageId: AppStore.getMessageId()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            ...update\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n        const selectedMessageId = this.state.nextMessageId;\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const { sender_id } = message;\r\n\r\n        const date = getMessageDate(message);\r\n        const senderName = getMessageSenderName(message, t);\r\n        const senderFullName = getMessageSenderFullName(message, t);\r\n        const content = getContent(message, t) || '\\u00A0';\r\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\r\n\r\n        const tile =\r\n            sender_id.user_id && chatSearch ? (\r\n                <UserTile userId={sender_id.user_id} dialog />\r\n            ) : (\r\n                <ChatTile chatId={chatId} dialog />\r\n            );\r\n\r\n        return (\r\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='dialog-wrapper'>\r\n                    {tile}\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {chatSearch && senderFullName ? (\r\n                                <div className='dialog-title'>{senderFullName}</div>\r\n                            ) : (\r\n                                <DialogTitle chatId={chatId} />\r\n                            )}\r\n                            <div className='dialog-meta'>{date}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-content'>\r\n                                {\r\n                                    <>\r\n                                        {!chatSearch && senderName && (\r\n                                            <span className='dialog-content-accent'>{senderName}: </span>\r\n                                        )}\r\n                                        {content}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    chatSearch: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FoundMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './SectionHeader.css';\r\n\r\nfunction SectionHeader({ command, multiline, onClick, children }) {\r\n    return (\r\n        <div className='section-header'>\r\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\r\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\r\n        </div>\r\n    );\r\n}\r\n\r\nSectionHeader.propTypes = {\r\n    command: PropTypes.string,\r\n    multiline: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default SectionHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Chat from '../../Tile/Chat';\r\nimport TopChat from '../../Tile/TopChat';\r\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\r\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\r\nimport FoundMessage from '../../Tile/FoundMessage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { filterDuplicateMessages } from '../../../Utils/Message';\r\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\r\nimport { orderCompare } from '../../../Utils/Common';\r\nimport { getChatOrder } from '../../../Utils/Chat';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n        this.listRef = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { text } = this.props;\r\n\r\n        this.searchOrLoadContent(text);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.target.blur();\r\n\r\n                this.handleClose();\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.searchOrLoadContent(text);\r\n        } else if (prevProps.chatId !== chatId) {\r\n            this.searchOrLoadContent(text);\r\n        }\r\n    }\r\n\r\n    searchOrLoadContent(text) {\r\n        const trimmedText = text ? text.trim() : '';\r\n\r\n        if (!trimmedText) {\r\n            this.loadContent();\r\n        } else {\r\n            this.searchText(trimmedText);\r\n        }\r\n    }\r\n\r\n    concatSearchResults = results => {\r\n        const arr = [];\r\n        const map = new Map();\r\n\r\n            for (let i = 0; i < results.length; i++) {\r\n            let result = results[i] && results[i].chat_ids;\r\n            if (result) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    if (!map.has(result[j])) {\r\n                        map.set(result[j], result[j]);\r\n                        arr.push(result[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            return orderCompare(getChatOrder(b), getChatOrder(a));\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    searchText = async text => {\r\n        this.sessionId = new Date();\r\n        this.text = text;\r\n        const sessionId = this.sessionId;\r\n        let store = null;\r\n\r\n        // console.log('[se] searchText=' + text);\r\n\r\n        const { chatId } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (!chatId) {\r\n            const promises = [];\r\n            const localPromise = TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query: text,\r\n                limit: 100\r\n            });\r\n            promises.push(localPromise);\r\n\r\n            const latinText = getLatinInput(text);\r\n            if (latinText && latinText !== text) {\r\n                const latinLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: latinText,\r\n                    limit: 100\r\n                });\r\n                promises.push(latinLocalPromise);\r\n            }\r\n\r\n            const cyrillicText = getCyrillicInput(text);\r\n            if (cyrillicText && cyrillicText !== text) {\r\n                const cyrillicLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: cyrillicText,\r\n                    limit: 100\r\n                });\r\n                promises.push(cyrillicLocalPromise);\r\n            }\r\n\r\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\r\n            const local = this.concatSearchResults(results);\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (savedMessages) {\r\n                const { t } = this.props;\r\n\r\n                const searchText = text.toUpperCase();\r\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\r\n\r\n                if (\r\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\r\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\r\n                ) {\r\n                    local.splice(0, 0, savedMessages.id);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: local\r\n            });\r\n\r\n            store = FileStore.getStore();\r\n            loadChatsContent(store, local);\r\n\r\n            let trimmedText = text.trim();\r\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\r\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\r\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\r\n\r\n                const globalPromises = [];\r\n\r\n                const globalPromise = TdLibController.send({\r\n                    '@type': 'searchPublicChats',\r\n                    query: trimmedText\r\n                });\r\n                globalPromises.push(globalPromise);\r\n\r\n                if (latinText) {\r\n                    let latinTrimmedText = latinText.trim();\r\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\r\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\r\n                        const globalLatinPromise = TdLibController.send({\r\n                            '@type': 'searchPublicChats',\r\n                            query: latinTrimmedText\r\n                        });\r\n                        globalPromises.push(globalLatinPromise);\r\n                    }\r\n                }\r\n\r\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\r\n                const global = this.concatSearchResults(globalResults);\r\n\r\n                if (sessionId !== this.sessionId) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    global\r\n                });\r\n\r\n                store = FileStore.getStore();\r\n                loadChatsContent(store, global);\r\n            } else {\r\n                this.setState({\r\n                    global: null\r\n                });\r\n            }\r\n        }\r\n\r\n        let messages = [];\r\n        if (chatId) {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: text,\r\n                sender_user_id: 0,\r\n                from_message_id: 0,\r\n                offset: 0,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: text,\r\n                offset_date: 0,\r\n                offset_chat_id: 0,\r\n                offset_message_id: 0,\r\n                limit: 50\r\n            });\r\n        }\r\n\r\n        MessageStore.setItems(messages.messages);\r\n\r\n        let linkMessage = null;\r\n        if (!chatId) {\r\n            try {\r\n                const messageLinkInfo = await TdLibController.send({\r\n                    '@type': 'getMessageLinkInfo',\r\n                    url: text\r\n                });\r\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\r\n\r\n                MessageStore.setItems([messageLinkInfo.message]);\r\n\r\n                linkMessage = messageLinkInfo;\r\n            } catch (error) {\r\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\r\n            }\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\r\n\r\n        this.setState({\r\n            messages,\r\n            linkMessage\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < messages.messages.length; i++) {\r\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\r\n            if (messages.messages[i].sender_id.user_id) {\r\n                users.set(messages.messages[i].sender_id.user_id, messages.messages[i].sender_id.user_id);\r\n            }\r\n        }\r\n\r\n        if (linkMessage) {\r\n            const { chat_id, message } = linkMessage;\r\n\r\n            chats.set(chat_id, chat_id);\r\n            if (message) {\r\n                const { sender_id } = message;\r\n                if (sender_id && sender_id.user_id) {\r\n                    users.set(sender_id.user_id, sender_id.user_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId } = this.props;\r\n        if (chatId) {\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null,\r\n                linkMessage: null\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const topPromise = TdLibController.send({\r\n            '@type': 'getTopChats',\r\n            category: { '@type': 'topChatCategoryUsers' },\r\n            limit: 30\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const recentlyFoundPromise = TdLibController.send({\r\n            '@type': 'searchChats',\r\n            query: '',\r\n            limit: 100\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        }).catch(error => {});\r\n\r\n        const [top, recentlyFound, savedMessages] = await Promise.all([\r\n            topPromise,\r\n            recentlyFoundPromise,\r\n            savedMessagesPromise\r\n        ]);\r\n\r\n        this.setState({\r\n            top,\r\n            recentlyFound,\r\n            savedMessages,\r\n            local: null,\r\n            global: null,\r\n            messages: null,\r\n            linkMessage: null\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, top.chat_ids);\r\n        loadChatsContent(store, recentlyFound.chat_ids);\r\n    };\r\n\r\n    handleClearRecentlyFound = event => {\r\n        event.stopPropagation();\r\n\r\n        TdLibController.send({\r\n            '@type': 'clearRecentlyFoundChats'\r\n        });\r\n\r\n        this.setState({ recentlyFound: null });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\r\n        const { onSelectMessage } = this.props;\r\n\r\n        if (addToRecent) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chatId\r\n            });\r\n        }\r\n\r\n        onSelectMessage(chatId, messageId, keepOpen);\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n    };\r\n\r\n    getOffset = messages => {\r\n        const length = messages ? messages.messages.length : 0;\r\n\r\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\r\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\r\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\r\n\r\n        return {\r\n            offset_date: offsetDate,\r\n            offset_chat_id: offsetChatId,\r\n            offset_message_id: offsetMessageId\r\n        };\r\n    };\r\n\r\n    concatMessages = (messages, result) => {\r\n        if (!result) return messages;\r\n        if (!result.messages.length) return messages;\r\n\r\n        if (!messages) return result;\r\n        if (!messages.messages.length) return result;\r\n\r\n        return {\r\n            total_count: result.total_count,\r\n            messages: messages.messages.concat(result.messages)\r\n        };\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        if (this.loading) return;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const sessionId = this.sessionId;\r\n\r\n        const { messages } = this.state;\r\n\r\n        const offset = this.getOffset(messages);\r\n\r\n        this.loading = true;\r\n        let result = [];\r\n        if (chatId) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: this.text,\r\n                sender_user_id: 0,\r\n                from_message_id: offset.offset_message_id,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: this.text,\r\n                ...offset,\r\n                limit: 50\r\n            });\r\n        }\r\n        this.loading = false;\r\n\r\n        filterDuplicateMessages(result, messages ? messages.messages : []);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: this.concatMessages(messages, result)\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\r\n            if (result.messages[i].sender_id.user_id) {\r\n                users.set(result.messages[i].sender_id.user_id, result.messages[i].sender_id.user_id);\r\n            }\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    handleTopChatsScroll = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose();\r\n    };\r\n\r\n    handleDeleteRecentlyFoundChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeRecentlyFoundChat',\r\n            chat_id: chatId\r\n        });\r\n\r\n        const { recentlyFound } = this.state;\r\n        if (!recentlyFound) return;\r\n\r\n        this.setState({\r\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    handleDeleteTopChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeTopChat',\r\n            chat_id: chatId,\r\n            category: {\r\n                '@type': 'topChatCategoryUsers'\r\n            }\r\n        });\r\n\r\n        const { top } = this.state;\r\n        if (!top) return;\r\n\r\n        this.setState({\r\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const topChats =\r\n            top && top.chat_ids\r\n                ? top.chat_ids.map(x => (\r\n                      <TopChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\r\n                          onDelete={() => this.handleDeleteTopChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const recentlyFoundChats =\r\n            recentlyFound && recentlyFound.chat_ids\r\n                ? recentlyFound.chat_ids.map(x => (\r\n                      <RecentlyFoundChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const localChats = local\r\n            ? local.map(x => (\r\n                  <RecentlyFoundChat\r\n                      key={x}\r\n                      chatId={x}\r\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                  />\r\n              ))\r\n            : [];\r\n\r\n        const globalChatsMap = new Map();\r\n        const globalChats = global\r\n            ? global.map(x => {\r\n                  globalChatsMap.set(x, x);\r\n\r\n                  return (\r\n                      <FoundPublicChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\r\n                      />\r\n                  );\r\n              })\r\n            : [];\r\n\r\n        const globalLinkChat =\r\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\r\n                <FoundPublicChat\r\n                    key={linkMessage.chat_id}\r\n                    chatId={linkMessage.chat_id}\r\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\r\n                />\r\n            ) : null;\r\n\r\n        const globalMessagesMap = new Map();\r\n        const globalMessages =\r\n            messages && messages.messages\r\n                ? messages.messages.map(x => {\r\n                      const key = `${x.chat_id}_${x.id}`;\r\n                      globalMessagesMap.set(key, key);\r\n\r\n                      return (\r\n                          <FoundMessage\r\n                              key={key}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              chatSearch={Boolean(chatId)}\r\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\r\n                          />\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n        const globalLinkMessage =\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\r\n                <FoundMessage\r\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\r\n                    chatId={linkMessage.message.chat_id}\r\n                    messageId={linkMessage.message.id}\r\n                    chatSearch={false}\r\n                    onClick={() =>\r\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\r\n                    }\r\n                />\r\n            ) : null;\r\n\r\n        let count = messages ? messages.total_count : 0;\r\n        if (\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\r\n        ) {\r\n            count++;\r\n        }\r\n\r\n        let messagesCaption = t('NoMessages');\r\n        if (count) {\r\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\r\n                {chat && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\r\n                            <div className='search-chat-wrapper'>\r\n                                <div className='search-chat-control'>\r\n                                    <Chat chatId={chatId} showStatus={false} />\r\n                                </div>\r\n                                <IconButton\r\n                                    className='header-right-button'\r\n                                    aria-label='Search'\r\n                                    onMouseDown={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {topChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\r\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\r\n                                <div className='search-top-chats-placeholder' />\r\n                                {topChats}\r\n                                <div className='search-top-chats-placeholder' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {recentlyFoundChats.length > 0 && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\r\n                            {t('Recent')}\r\n                        </SectionHeader>\r\n                        {recentlyFoundChats}\r\n                    </div>\r\n                )}\r\n                {localChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\r\n                            {localChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {globalChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\r\n                            {globalLinkChat}\r\n                            {globalChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {(messages || (linkMessage && linkMessage.message)) && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{messagesCaption}</SectionHeader>\r\n                        {globalLinkMessage}\r\n                        {globalMessages}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    chatId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    onSelectMessage: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Search);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport { Slide } from '@material-ui/core';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './SidebarPage.css';\r\n\r\nclass SidebarPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                const { onClose } = this.props;\r\n                if (onClose) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    event.target.blur();\r\n\r\n                    onClose();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.props;\r\n\r\n        if (prevProps.open !== open) {\r\n            if (open) {\r\n                KeyboardManager.add(this.keyboardHandler);\r\n            } else {\r\n                KeyboardManager.remove(this.keyboardHandler);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children, open, timeout, onClose } = this.props;\r\n\r\n        return (\r\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\r\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\r\n            </Slide>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarPage.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default SidebarPage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\r\n    'Folder'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Edit'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\r\n    'LogOut'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\r\nimport MoreIcon from '../../../Assets/Icons/More';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass SettingsMenuButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.handleClose();\r\n        TdLibController.logOut();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, open } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-right-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleMenuOpen}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleLogOut}>\r\n                        <ListItemIcon>\r\n                            <LogOutIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('LogOut')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureLogout')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDone} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettingsMenuButton.propTypes = {};\r\n\r\nexport default withTranslation()(SettingsMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\r\n    'Data'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\r\n    'Language'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport FilterIcon from '../../../Assets/Icons/Folder';\r\nimport Chat from '../../Tile/Chat';\r\nimport EditIcon from '../../../Assets/Icons/Edit';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '../../../Assets/Icons/Settings';\r\nimport SettingsMenuButton from './SettingsMenuButton';\r\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\r\nimport DataIcon from '../../../Assets/Icons/Data';\r\nimport LanguageIcon from '../../../Assets/Icons/Language';\r\nimport packageJson from '../../../../package.json';\r\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport './Main.css';\r\n\r\nclass Main extends React.Component {\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId } = this.props;\r\n        \r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            chatId,\r\n            popup,\r\n            t,\r\n            onClose,\r\n            onEditProfile,\r\n            onGeneral,\r\n            onNotifications,\r\n            onPrivacySecurity,\r\n            onLanguage,\r\n            onFilters\r\n        } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Settings')}</span>\r\n                    </div>\r\n                    <SettingsMenuButton />\r\n                </div>\r\n                <div className='sidebar-page-content settings-main-content'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={false}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\r\n                        <ListItemIcon>\r\n                            <EditIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('EditProfile')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('GeneralSettings')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\r\n                        <ListItemIcon>\r\n                            <UnmuteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Notifications')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\r\n                        <ListItemIcon>\r\n                            <DataIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('PrivacySettings')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\r\n                        <ListItemIcon>\r\n                            <FilterIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Filters')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\r\n                        <ListItemIcon>\r\n                            <LanguageIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Language')} />\r\n                    </ListItem>\r\n                    <div className='settings-main-footer'>\r\n                        {packageJson.version}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onEditProfile: PropTypes.func,\r\n    onGeneral: PropTypes.func,\r\n    onNotifications: PropTypes.func,\r\n    onPrivacySecurity: PropTypes.func,\r\n    onLanguage: PropTypes.func,\r\n    onFilters: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Main);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\r\n    'AddImage'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Cropper from 'react-cropper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AddImageIcon from '../../Assets/Icons/AddImage';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CheckIcon from '../../Assets/Icons/Check';\r\nimport { getFitSize, readImageSize } from '../../Utils/Common';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport './NewChatPhoto.css';\r\n\r\nclass NewChatPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachPhotoRef = React.createRef();\r\n        this.cropperRef = React.createRef();\r\n\r\n        const { defaultURL } = this.props;\r\n\r\n        this.state = {\r\n            blobURL: defaultURL,\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleDone = () => {\r\n        const cropper = this.cropperRef.current.cropper;\r\n        if (!cropper) return;\r\n\r\n        cropper.getCroppedCanvas().toBlob(blob => {\r\n            const blobURL = URL.createObjectURL(blob);\r\n\r\n            this.setState({\r\n                blob,\r\n                blobURL\r\n            });\r\n\r\n            const { onChoose } = this.props;\r\n            if (!onChoose) return;\r\n\r\n            onChoose(blob, blobURL);\r\n        }, 'image/jpeg');\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    handleAttach = () => {\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    handleAttachComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ file, ...rest ] = Array.from(files);\r\n            if (!file) return;\r\n\r\n            const [width, height] = await readImageSize(file);\r\n\r\n            this.setState({\r\n                open: true,\r\n                file,\r\n                fileURL: URL.createObjectURL(file),\r\n                width,\r\n                height\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { open, width, height, fileURL, blobURL } = this.state;\r\n\r\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\r\n\r\n        return (\r\n            <>\r\n                <div className='new-chat-photo'>\r\n                    { blobURL ? (\r\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\r\n                        ) : (\r\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\r\n                            <AddImageIcon className='new-chat-photo-icon'/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <input\r\n                    ref={this.attachPhotoRef}\r\n                    className='inputbox-attach-button'\r\n                    type='file'\r\n                    multiple={false}\r\n                    accept='image/*'\r\n                    onChange={this.handleAttachComplete}\r\n                />\r\n                { open && (\r\n                    <Dialog\r\n                        transitionDuration={0}\r\n                        open={true}\r\n                        onClose={this.handleCancel}\r\n                        aria-labelledby='dialog-title'>\r\n                        <div className='header-master'>\r\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                            <div className='header-status grow cursor-pointer'>\r\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\r\n                            </div>\r\n                        </div>\r\n                        <DialogContent>\r\n                            <Cropper\r\n                                ref={this.cropperRef}\r\n                                src={fileURL}\r\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\r\n                                // Cropper.js options\r\n                                aspectRatio={1}\r\n                                viewMode={3}\r\n                                guides={false} />\r\n                        </DialogContent>\r\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\r\n                            <CheckIcon/>\r\n                        </div>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nNewChatPhoto.propTypes = {\r\n    defaultURL: PropTypes.string,\r\n    onChoose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(NewChatPhoto);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport NewChatPhoto from '../NewChatPhoto';\r\nimport { getSrc, loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditProfile.css';\r\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\r\n\r\nclass EditProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.firstNameRef = React.createRef();\r\n        this.lastNameRef = React.createRef();\r\n        this.bioRef = React.createRef();\r\n        this.usernameRef = React.createRef();\r\n\r\n        const user = UserStore.get(UserStore.getMyId());\r\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\r\n\r\n        this.state = {\r\n            firstName: user ? user.first_name : '',\r\n            lastName: user ? user.last_name : '',\r\n            bio: userFullInfo ? userFullInfo.bio : '',\r\n            username: user ? user.username : '',\r\n            usernameCheck: null\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setName();\r\n        this.setBio();\r\n        this.setUsername();\r\n    }\r\n\r\n    setUsername() {\r\n        const { username, usernameCheck } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n\r\n        if (username === newUsername) return;\r\n        if (!usernameCheck) return;\r\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setUsername',\r\n            username: newUsername\r\n        });\r\n    }\r\n\r\n    setName() {\r\n        const { firstName, lastName } = this.state;\r\n        const newFirstName = this.firstNameRef.current.value;\r\n        const newLastName = this.lastNameRef.current.value;\r\n\r\n        if (newFirstName === firstName && newLastName === lastName) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setName',\r\n            first_name: newFirstName,\r\n            last_name: newLastName\r\n        });\r\n    }\r\n\r\n    setBio() {\r\n        const { bio } = this.state;\r\n        const newBio = this.bioRef.current.value;\r\n        if (newBio === bio) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setBio',\r\n            bio: newBio\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = async () => {\r\n        const { chatId } = this.props;\r\n        const { username } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n        if (username === newUsername || newUsername === '') {\r\n            this.setState({\r\n                usernameCheck: null\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername', 'null');\r\n        } else {\r\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\r\n            const result = await TdLibController.send({\r\n                '@type': 'checkChatUsername',\r\n                chat_id: chatId,\r\n                username: newUsername\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\r\n\r\n            let newUsername2 = this.usernameRef.current.value;\r\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\r\n                newUsername2 = newUsername2.substr(1);\r\n            }\r\n            if (newUsername2 === newUsername) {\r\n                this.setState({\r\n                    usernameCheck: result\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChoosePhoto = async data => {\r\n        const { chatId } = this.props;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setProfilePhoto',\r\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    render() {\r\n        let { chatId, t, onClose } = this.props;\r\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\r\n\r\n        let hasError = false;\r\n        let usernameLabel = t('Username');\r\n        if (usernameCheck) {\r\n            switch (usernameCheck['@type']) {\r\n                case 'checkChatUsernameResultOk': {\r\n                    hasError = false;\r\n                    usernameLabel = 'Username is available';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultPublicChatsTooMuch':\r\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\r\n                case 'checkChatUsernameResultUsernameInvalid': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Invalid username';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultUsernameOccupied': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Username is already taken';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        const src = getSrc(photo ? photo.small : null);\r\n        const entities = [];\r\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\r\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('EditProfile')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\r\n                    <div className='edit-profile-name'>\r\n                        <TextField\r\n                            inputRef={this.firstNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FirstName')}\r\n                            defaultValue={firstName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.lastNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('LastName')}\r\n                            defaultValue={lastName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.bioRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('Bio')}\r\n                            defaultValue={bio}\r\n                        />\r\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='edit-profile-username'>\r\n                        <TextField\r\n                            inputRef={this.usernameRef}\r\n                            error={hasError}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={usernameLabel}\r\n                            defaultValue={username}\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                        <div className='edit-profile-hint'>\r\n                            {formattedText}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(EditProfile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\r\n    'Add'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\r\n    'NewPrivate'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\r\n    'NonContacts'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\r\n    'NewGroup'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\r\n    'NewChannel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\r\n    'ReadChats'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\r\n    'Bots'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\r\n    'Done'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ChatTile from './ChatTile';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\r\nimport './FilterChat.css';\r\n\r\nclass FilterChat extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        checked: false\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { chatId, onDelete } = this.props;\r\n\r\n        onDelete && onDelete(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t, type, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const title = getChatTitle(chatId, true, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        <div className='filter-chat-title'>\r\n                            {title}\r\n                        </div>\r\n                        { type && (\r\n                            <div className='filter-chat-subtitle'>\r\n                                {getChatType(chatId, t)}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    type: PropTypes.bool,\r\n    onDelete: PropTypes.func,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterChat);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport './FilterText.css';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass FilterText extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete && onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, className, icon, text, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        {icon}\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        {text}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterText.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterText);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport './Chip.css';\r\n\r\nclass Chip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { icon, text, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='chip-icon'>\r\n                    {icon}\r\n                </div>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{text}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChip.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default Chip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ChatChip.css';\r\n\r\nclass ChatChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <ChatTile chatId={chatId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChatChip.propTypes = {\r\n    chatId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ChatChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SearchInput from '../Search/SearchInput';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport Chip from '../../Tile/Chip';\r\nimport ChatChip from '../../Tile/ChatChip';\r\nimport { loadChatsContent } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditFilterChats.css';\r\nimport { scrollBottom } from '../../../Utils/DOM';\r\n\r\nclass EditFilterChats extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            focusedItem: null,\r\n            searchItems: null,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleChatChange = (chatId, search) => {\r\n        const { mode } = this.props;\r\n\r\n        if (search) {\r\n            const input = this.searchInputRef.current;\r\n            input.focus();\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { filter, mode } = this.props;\r\n        const { filter : prevFilter } = prevProps;\r\n\r\n        if (prevProps.filter === filter) {\r\n            return null;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\r\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\r\n\r\n        const isDeleting =\r\n            prevItems.length > items.length\r\n            || prevFilter.include_contacts && !filter.include_contacts\r\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\r\n            || prevFilter.include_groups && !filter.include_groups\r\n            || prevFilter.include_channels && !filter.include_channels\r\n            || prevFilter.include_bots && !filter.include_bots\r\n            || prevFilter.exclude_read && !filter.exclude_read\r\n            || prevFilter.exclude_muted && !filter.exclude_muted\r\n            || prevFilter.exclude_archived && !filter.exclude_archived;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.filter === this.props.filter) {\r\n            return;\r\n        }\r\n\r\n        this.animatePanel(snapshot.panel);\r\n        // this.animateItems(snapshot.items);\r\n    }\r\n\r\n    animatePanel(snapshot) {\r\n        if (!snapshot) return;\r\n\r\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        scrollBottom(wrapPanel, 'auto');\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        if (!prevOffsets) return;\r\n\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                            + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                        + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    handleBackspace = () => {\r\n        const { filter, mode } = this.props;\r\n        const { focusedItem } = this.state;\r\n        if (!filter) return;\r\n\r\n        if (focusedItem) {\r\n            switch (focusedItem) {\r\n                case 'include_contacts':\r\n                case 'include_non_contacts':\r\n                case 'include_bots':\r\n                case 'include_groups':\r\n                case 'include_channels':\r\n                case 'exclude_muted':\r\n                case 'exclude_read':\r\n                case 'exclude_archived': {\r\n                    this.handleChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.handleChatChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        if (include) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = filter;\r\n\r\n            if (included_chat_ids.length > 0) {\r\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (include_bots) {\r\n                this.setState({\r\n                    focusedItem: 'include_bots'\r\n                });\r\n            } else if (include_channels) {\r\n                this.setState({\r\n                    focusedItem: 'include_channels'\r\n                });\r\n            } else if (include_groups) {\r\n                this.setState({\r\n                    focusedItem: 'include_groups'\r\n                });\r\n            } else if (include_non_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_non_contacts'\r\n                });\r\n            } else if (include_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_contacts'\r\n                });\r\n            }\r\n        } else {\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = filter;\r\n\r\n            if (excluded_chat_ids.length > 0) {\r\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (exclude_archived) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_archived'\r\n                });\r\n            } else if (exclude_read) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_read'\r\n                });\r\n            } else if (exclude_muted) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_muted'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { onChange } = this.props;\r\n\r\n        onChange(type, value);\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        });\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query,\r\n                limit: 100\r\n            })\r\n        );\r\n        const [searchItems] = await Promise.all(promises);\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, searchItems.chat_ids);\r\n\r\n        this.setState({ searchItems, focusedItem: null });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\r\n        const { focusedItem, searchItems } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = filter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = filter;\r\n\r\n        const include = mode === 'include';\r\n        const items = include ? included_chat_ids : excluded_chat_ids;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    { include && (\r\n                        <>\r\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\r\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\r\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\r\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\r\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\r\n                        </>\r\n                    )}\r\n                    { !include && (\r\n                        <>\r\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\r\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\r\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\r\n                        </>\r\n                    )}\r\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\r\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\r\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\r\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\r\n                    {include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\r\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\r\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\r\n                        </>\r\n                    )}\r\n                    {!include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\r\n                        </>\r\n                    )}\r\n                    { chats && chats.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\r\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\r\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </>\r\n                    )}\r\n                    { searchItems && (\r\n                        <div className='edit-filter-chats-search'>\r\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditFilterChats.propTypes = {\r\n    filter: PropTypes.object,\r\n    chats: PropTypes.array,\r\n    mode: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onScroll: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditFilterChats);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport DoneIcon from '../../../Assets/Icons/Done';\r\nimport EditFilterChats from './EditFilterChats';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { isFilterValid } from '../../../Utils/Filter';\r\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './CreateFilter.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass CreateFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            prevFilterId: -1,\r\n            data: null,\r\n            openFilterChats: false,\r\n            mode: null,\r\n            title: '',\r\n            error: false,\r\n            shook: false,\r\n            chats: [],\r\n            limit: 0\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { filter, filterId } = props;\r\n        const { prevFilterId } = state;\r\n\r\n        if (filter && prevFilterId !== filterId){\r\n            return {\r\n                prevFilterId: filterId,\r\n                editFilter: {...filter},\r\n                title: filter.title\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [ fetch('data/Folders_2.json') ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { onDone } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.titleRef.current.focus();\r\n            this.setState({\r\n                error: true\r\n            })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        editFilter.title = title;\r\n\r\n        if (!isFilterValid(editFilter)) {\r\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\r\n            return;\r\n        }\r\n\r\n        onDone && onDone(editFilter);\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleDeleteIncludeContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeNonContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterNonContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeGroups = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_groups: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterGroups')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeChannels = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_channels: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterChannels')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeBots = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_bots: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterBots')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeMuted = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_muted: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeRead = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_read: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeArchived = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_archived: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleOpenFilterChats = async mode => {\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            limit: 1000\r\n        });\r\n\r\n        this.setState({\r\n            openFilterChats: true,\r\n            mode,\r\n            chats: result.chat_ids,\r\n            limit: CHAT_SLICE_LIMIT\r\n        })\r\n    };\r\n\r\n    setDefaultFilterTitle() {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (!title) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = editFilter;\r\n\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = editFilter;\r\n\r\n            if (!included_chat_ids.length) {\r\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterContacts')\r\n                    });\r\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterNonContacts')\r\n                    });\r\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('ChatHints')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterBots')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterGroups')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterChannels')\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCloseFilterChats = () => {\r\n\r\n        this.setDefaultFilterTitle();\r\n\r\n        this.setState({\r\n            openFilterChats: false,\r\n            mode: null\r\n        })\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        let newEditFilter = null;\r\n        switch (type) {\r\n            case 'include_contacts': {\r\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\r\n                break;\r\n            }\r\n            case 'include_non_contacts': {\r\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\r\n                break;\r\n            }\r\n            case 'include_bots': {\r\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\r\n                break;\r\n            }\r\n            case 'include_groups': {\r\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\r\n                break;\r\n            }\r\n            case 'include_channels': {\r\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\r\n                break;\r\n            }\r\n            case 'included_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.included_chat_ids.includes(value)) {\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                    excluded = editFilter.excluded_chat_ids;\r\n                } else {\r\n                    included = [ ...editFilter.included_chat_ids, value ];\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n                break;\r\n            }\r\n            case 'exclude_muted': {\r\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\r\n                break;\r\n            }\r\n            case 'exclude_read': {\r\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\r\n                break;\r\n            }\r\n            case 'exclude_archived': {\r\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\r\n                break;\r\n            }\r\n            case 'excluded_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.excluded_chat_ids.includes(value)) {\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                    included = editFilter.included_chat_ids;\r\n                } else {\r\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        // console.log('[f] onChange', type, value, newEditFilter);\r\n        if (!newEditFilter) return;\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleTitleChange = () => {\r\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\r\n\r\n        this.setState({\r\n            title\r\n        });\r\n    }\r\n\r\n    handleScroll = event => {\r\n        const scroll = event.target;\r\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\r\n            this.setState({\r\n                limit: this.state.limit + CHAT_SLICE_LIMIT\r\n            })\r\n        }\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, id, onClose } = this.props;\r\n        if (!filter) return null;\r\n\r\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = editFilter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = editFilter;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\r\n                    </div>\r\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\r\n                        <DoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='filters-create-animation'>\r\n                        { data && (\r\n                            <React.Suspense fallback={null}>\r\n                                <RLottie\r\n                                    ref={this.lottieRef}\r\n                                    options={{\r\n                                        width: 80,\r\n                                        height: 80,\r\n                                        autoplay: true,\r\n                                        loop: false,\r\n                                        fileId: 'createFilter',\r\n                                        stringData: data\r\n                                    }}\r\n                                    onClick={this.handleAnimationClick}\r\n                                />\r\n                            </React.Suspense>\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                    <div className='create-filter-title'>\r\n                        <TextField\r\n                            inputRef={this.titleRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FilterNameHint')}\r\n                            value={title}\r\n                            error={error}\r\n                            onChange={this.handleTitleChange}\r\n                        />\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\r\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\r\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\r\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\r\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\r\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\r\n                        { included_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\r\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\r\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\r\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\r\n                        { excluded_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\r\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFilter.propTypes = {\r\n    filter: PropTypes.object,\r\n    id: PropTypes.number,\r\n    onDone: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(CreateFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { getChatOrder } from './Chat';\r\n\r\nexport function isFilterValid(filter) {\r\n    if (!filter) return false;\r\n\r\n    const {\r\n        include_contacts,\r\n        include_non_contacts,\r\n        include_bots,\r\n        include_groups,\r\n        include_channels,\r\n        included_chat_ids,\r\n        title\r\n    } = filter;\r\n\r\n    if (!title) return false;\r\n\r\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\r\n}\r\n\r\nexport function getFilterSubtitle(t, filterId, chats) {\r\n    if (!chats) return ' ';\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < chats.chat_ids.length; i++) {\r\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\r\n            count++;\r\n        }\r\n    }\r\n\r\n    if (!count) {\r\n        return t('FilterNoChats');\r\n    }\r\n\r\n    return count === 1 ? '1 chat' : `${count} chats`;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getFilterSubtitle } from '../../Utils/Filter';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Filter.css';\r\n\r\nclass Filter extends React.Component {\r\n\r\n    state = {\r\n        dialog: false,\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n        this.handleOpenDialog();\r\n    };\r\n\r\n    handleOpenDialog = () => {\r\n        this.setState({\r\n            dialog: true\r\n        })\r\n    };\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({\r\n            dialog: false\r\n        })\r\n    };\r\n\r\n    handleDeleteCancel = () => {\r\n        this.handleCloseDialog();\r\n    };\r\n\r\n    handleDeleteConfirm = () => {\r\n        const { info } = this.props;\r\n        if (!info) return;\r\n\r\n        this.handleCloseDialog();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, info, onEdit, chats } = this.props;\r\n        if (!info) return null;\r\n\r\n        const { dialog, contextMenu, top, left } = this.state;\r\n\r\n        const { title } = info;\r\n        const subtitle = getFilterSubtitle(t, info.id, chats);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\r\n                    <ListItemText\r\n                        className='settings-list-item-text2'\r\n                        primary={title}\r\n                        secondary={subtitle}\r\n                    />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={dialog}\r\n                    onClose={this.handleCancel}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {t('FilterDeleteAlert')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    info: PropTypes.object.isRequired,\r\n    chats: PropTypes.object,\r\n    onEdit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Filter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './RecommendedFilter.css';\r\n\r\nclass RecommendedFilter extends React.Component {\r\n\r\n    handleAdd = () => {\r\n        const { filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return;\r\n\r\n        const { filter } = recommendedFilter;\r\n\r\n        TdLibController.send({\r\n            '@type': 'createChatFilter',\r\n            filter\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return null;\r\n\r\n        const { filter, description } = recommendedFilter;\r\n\r\n        return (\r\n            <ListItem\r\n                className='settings-list-item2'\r\n                role={undefined}\r\n                button>\r\n                <ListItemText\r\n                    className='settings-list-item-text'\r\n                    primary={filter.title}\r\n                    secondary={description}\r\n                />\r\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\r\n                    {t('Add')}\r\n                </Button>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecommendedFilter.propTypes = {\r\n    filter: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(RecommendedFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport CreateFilter from './CreateFilter';\r\nimport Filter from '../../Tile/Filter';\r\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport FilterStore from '../../../Stores/FilterStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Filters.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass Filters extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null,\r\n            editFilter: null,\r\n            recommendedFilters: null,\r\n            chats: null,\r\n            filtersMap: new Map()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n        this.loadData();\r\n\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        setTimeout(() => {\r\n            this.loadData();\r\n        }, 100);\r\n    };\r\n\r\n    async loadData() {\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            limit: 1000\r\n        });\r\n\r\n        const { filters: filterInfo } = FilterStore;\r\n        const promises = [];\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            promises.push(TdLibController.send({\r\n                '@type': 'getChatFilter',\r\n                chat_filter_id: filterInfo[i].id\r\n            }).catch(e => null));\r\n        }\r\n        const filters = await Promise.all(promises);\r\n\r\n        const filtersMap = new Map();\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            filtersMap.set(filterInfo[i].id, filters[i]);\r\n        }\r\n\r\n        const recommendedFilters = await TdLibController.send({\r\n            '@type': 'getRecommendedChatFilters'\r\n        });\r\n\r\n        this.setState({\r\n            chats,\r\n            filtersMap,\r\n            recommendedFilters\r\n        });\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [\r\n                fetch('data/Folders_1.json'),\r\n                fetch('data/Folders_2.json'),\r\n            ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleCreateFilter = () => {\r\n        const { t } = this.props;\r\n        const { filters } = FilterStore;\r\n        if (filters.length >= FILTER_COUNT_MAX) {\r\n            this.handleScheduledAction(t('FilterCreateError'));\r\n            return;\r\n        }\r\n\r\n        const filter = {\r\n            '@type': 'chatFiler',\r\n            title: '',\r\n            icon_name: '',\r\n            pinned_chat_ids: [],\r\n            included_chat_ids: [],\r\n            excluded_chat_ids: [],\r\n            exclude_muted: false,\r\n            exclude_read: false,\r\n            exclude_archived: false,\r\n            include_contacts: false,\r\n            include_non_contacts: false,\r\n            include_bots: false,\r\n            include_groups: false,\r\n            include_channels: false\r\n        };\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: -1,\r\n            filter\r\n        });\r\n    };\r\n\r\n    handleCloseFilter = () => {\r\n        this.setState({\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null\r\n        })\r\n    };\r\n\r\n    handleEditFilter = async info => {\r\n        const filter = await TdLibController.send({\r\n            '@type': 'getChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n\r\n        if (!filter) return;\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: info.id,\r\n            filter\r\n        })\r\n    };\r\n\r\n    handleDone = filter => {\r\n        const { filterId } = this.state;\r\n\r\n        this.handleCloseFilter();\r\n        if (!filter) return;\r\n\r\n        if (filterId !== -1) {\r\n            TdLibController.send({\r\n                '@type': 'editChatFilter',\r\n                chat_filter_id: filterId,\r\n                filter\r\n            });\r\n        } else {\r\n            TdLibController.send({\r\n                '@type': 'createChatFilter',\r\n                filter\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        const hasFilters = filters && filters.length > 0;\r\n        const hasRecommendedFilters = recommendedFilters\r\n            && recommendedFilters.chat_filters.length > 0\r\n            && (!filters || filters.length < FILTER_COUNT_MAX);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section filters-create'>\r\n                        <div className='filters-create-animation'>\r\n                            { data && (\r\n                                <React.Suspense fallback={null}>\r\n                                    <RLottie\r\n                                        ref={this.lottieRef}\r\n                                        options={{\r\n                                            width: 80,\r\n                                            height: 80,\r\n                                            autoplay: true,\r\n                                            loop: false,\r\n                                            fileId: 'filters',\r\n                                            stringData: data\r\n                                        }}\r\n                                        onClick={this.handleAnimationClick}\r\n                                    />\r\n                                </React.Suspense>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\r\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\r\n                            {t('CreateNewFilter')}\r\n                        </Button>\r\n                    </div>\r\n                    { hasFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('Filters')}</SectionHeader>\r\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    { hasRecommendedFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\r\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\r\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Colorize'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './Wallpaper.css';\r\nimport FileProgress from '../Viewer/FileProgress';\r\n\r\nclass Wallpaper extends React.Component {\r\n    state = {\r\n        loaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.props;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { wallpaper, onClick } = this.props;\r\n\r\n        if (onClick) {\r\n            onClick(wallpaper);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { wallpaper, isSelected } = this.props;\r\n        const { loaded  } = this.state;\r\n\r\n        const { document } = wallpaper;\r\n        const { minithumbnail, thumbnail } = document;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const tileLoaded = thumbSrc && loaded;\r\n        const src = thumbSrc || miniSrc;\r\n\r\n        return (\r\n            <div className='shared-photo' onClick={this.handleClick}>\r\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\r\n                    {src !== thumbSrc && (\r\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                    )}\r\n                </div>\r\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\r\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nWallpaper.propTypes = {\r\n    wallpaper: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool\r\n};\r\n\r\nexport default Wallpaper;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Wallpaper from '../../Tile/Wallpaper';\r\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ChatBackground.css';\r\n\r\nclass ChatBackground extends React.Component {\r\n    state = {\r\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { backgrounds } = this.props;\r\n        if (!backgrounds) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadBackgroundsContent(store, backgrounds.backgrounds);\r\n    }\r\n\r\n    handleClick = wallpaper => {\r\n        this.setState({\r\n            selectedId: wallpaper.id\r\n        });\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail, document: file } = document;\r\n        if (!file) return;\r\n\r\n        const src = getSrc(file);\r\n        if (!src) {\r\n            const store = FileStore.getStore();\r\n            loadBackgroundContent(store, wallpaper, true);\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatBackground',\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, backgrounds, onClose } = this.props;\r\n        const { selectedId } = this.state;\r\n\r\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\r\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nChatBackground.propTypes = {\r\n    backgrounds: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(ChatBackground);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport withTheme from '@material-ui/core/styles/withTheme';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport red from '@material-ui/core/colors/red';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './ThemePicker.css';\r\n\r\nclass ThemePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\r\n        try {\r\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\r\n            type = themeOptions.type;\r\n            primary = themeOptions.primary;\r\n        } catch {}\r\n\r\n        this.state = {\r\n            open: false,\r\n            type,\r\n            color: this.getColorString(this.props.theme.palette.primary.main)\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        const type = event.target.value;\r\n\r\n        this.setState({ type });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: event.target.value,\r\n            primary: this.getColor(this.state.color)\r\n        });\r\n    };\r\n\r\n    handleAccentChange = event => {\r\n        this.setState({ color: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: this.state.type,\r\n            primary: this.getColor(event.target.value)\r\n        });\r\n    };\r\n\r\n    getColorString = value => {\r\n        switch (value) {\r\n            case red['500']:\r\n                return 'red';\r\n            case orange['500']:\r\n                return 'orange';\r\n            case amber['500']:\r\n                return 'amber';\r\n            case green['500']:\r\n                return 'green';\r\n            case '#50A2E9':\r\n                return 'blue';\r\n            case indigo['500']:\r\n                return 'indigo';\r\n            case deepPurple['500']:\r\n                return 'deepPurple';\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getColor = value => {\r\n        switch (value) {\r\n            case 'red':\r\n                return red;\r\n            case 'orange':\r\n                return orange;\r\n            case 'amber':\r\n                return amber;\r\n            case 'green':\r\n                return green;\r\n            case 'blue':\r\n                return { main: '#50A2E9' };\r\n            case 'indigo':\r\n                return indigo;\r\n            case 'deepPurple':\r\n                return deepPurple;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { type, color, open } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                disableEnforceFocus={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'>\r\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Theme')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='theme'\r\n                            name='theme1'\r\n                            className='theme-picker-group'\r\n                            value={type}\r\n                            onChange={this.handleChange}>\r\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\r\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\r\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Accent')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='accent'\r\n                            name='accent1'\r\n                            className='theme-picker-group'\r\n                            value={color}\r\n                            onChange={this.handleAccentChange}>\r\n                            <FormControlLabel\r\n                                value='red'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-red'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Red'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='orange'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-orange'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Orange'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='amber'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-amber'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Amber'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='green'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-green'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Green'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='blue'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-blue'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Blue'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='indigo'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-indigo'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Indigo'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='deepPurple'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-deep-purple'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Deep Purple'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nThemePicker.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTheme,\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ThemePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\r\nimport ChatBackground from './ChatBackground';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\r\nimport ThemePicker from '../ThemePicker';\r\nimport { isMacOS } from '../../../Utils/Common';\r\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './General.css';\r\n\r\nclass General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\r\n\r\n        this.state = {\r\n            backgrounds: null,\r\n            openChatBackground: false,\r\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\r\n        };\r\n\r\n        this.themePickerRef = React.createRef();\r\n    }\r\n\r\n    handleAppearance = () => {\r\n        this.themePickerRef.current.open();\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent = () => {\r\n        TdLibController.send({\r\n            '@type': 'getBackgrounds',\r\n            for_dark_theme: false\r\n        }).then(backgrounds => this.setState({ backgrounds }));\r\n    };\r\n\r\n    openChatBackground = () => {\r\n        if (!this.state.backgrounds) return;\r\n\r\n        this.setState({\r\n            openChatBackground: true\r\n        });\r\n    };\r\n\r\n    closeChatBackground = () => {\r\n        this.setState({\r\n            openChatBackground: false\r\n        });\r\n    };\r\n\r\n    async handleSetOption(command) {\r\n        let value = false;\r\n        switch (command) {\r\n            case 'sendByCtrlEnter': {\r\n                value = true;\r\n                break;\r\n            }\r\n            case 'sendByEnter': {\r\n                value = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: SEND_BY_CTRL_ENTER_KEY,\r\n            value: { '@type': 'optionValueBoolean', value }\r\n        });\r\n\r\n        this.setState({\r\n            sendByCtrlEnter: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <SharedMediaIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\r\n                        {/*</ListItem>*/}\r\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\r\n                            <ListItemIcon>\r\n                                <ColorizeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Theme')} />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\r\n                            <Radio\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={!sendByCtrlEnter}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('SendByEnter')}\r\n                                secondary={t('NewLineByShiftEnter')}\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\r\n                            <Radio\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={sendByCtrlEnter}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\r\n                                secondary={t('NewLineByEnter')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\r\n                    <ChatBackground backgrounds={backgrounds} />\r\n                </SidebarPage>\r\n                <ThemePicker ref={this.themePickerRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nGeneral.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(General);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Language.css';\r\n\r\nclass Language extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { i18n } = props;\r\n        const language = i18n ? i18n.language : null;\r\n\r\n        this.state = {\r\n            language: language || 'en'\r\n        };\r\n    }\r\n\r\n    handleChange = language => {\r\n        this.setState({ language });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { language } = this.state;\r\n        const info = LocalizationStore.info || { language_packs: [] };\r\n\r\n        const languages = info.language_packs.map(x => (\r\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\r\n                <Radio\r\n                    color='primary'\r\n                    className='settings-item-control'\r\n                    checked={language === x.id}\r\n                    tabIndex={-1}\r\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                />\r\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Language')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>{languages}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLanguage.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Language);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport NotificationStore from '../../../Stores/NotificationStore';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Notifications.css';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n\r\n        this.state = {\r\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\r\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\r\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\r\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\r\n        this.setContactJoinedOption(contactJoined);\r\n    }\r\n\r\n    setContactJoinedOption() {\r\n        const { contactJoined } = this.state;\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\r\n        if (oldContactJoined === contactJoined) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: 'disable_contact_registered_notifications',\r\n            value: {\r\n                '@type': 'optionValueBoolean',\r\n                value: !contactJoined\r\n            }\r\n        });\r\n    }\r\n\r\n    setScopeNotificationSettings(scope, settings) {\r\n        if (!scope) return;\r\n        if (!settings) return;\r\n        const oldSettings = NotificationStore.settings.get(scope);\r\n        if (!oldSettings) return;\r\n\r\n        const { mute_for, show_preview } = settings;\r\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\r\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setScopeNotificationSettings',\r\n            scope: { '@type': scope },\r\n            notification_settings: settings\r\n        });\r\n    }\r\n\r\n    handleMuteFor = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { mute_for } = settings;\r\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleShowPreview = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { show_preview } = settings;\r\n        const newSettings = { ...settings, show_preview: !show_preview };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleContactJoined = () => {\r\n        this.setState({ contactJoined: !this.state.contactJoined });\r\n    };\r\n\r\n    isEnabled(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { mute_for } = settings;\r\n\r\n        return mute_for === 0;\r\n    }\r\n\r\n    showPreview(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { show_preview } = settings;\r\n\r\n        return show_preview;\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Notifications')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForPrivateChats')}\r\n                                secondary={\r\n                                    this.isEnabled(privateChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForGroups')}\r\n                                secondary={\r\n                                    this.isEnabled(groupChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForChannels')}\r\n                                secondary={\r\n                                    this.isEnabled(channelChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\r\n                        <div className='settings-item' onClick={this.handleContactJoined}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={contactJoined}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('ContactJoined')}\r\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Notifications);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\r\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\r\n    </g>,\r\n    'Stop'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport { getMessageDate } from '../../Utils/Chat';\r\nimport './Session.css';\r\n\r\nclass Session extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { session } = this.props;\r\n        if (!session) return;\r\n        if (session.is_current) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleTerminate = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { onTerminate, session } = this.props;\r\n\r\n        onTerminate(session);\r\n    };\r\n\r\n    render() {\r\n        const { session, t } = this.props;\r\n        if (!session) return null;\r\n\r\n        const { left, top, contextMenu } = this.state;\r\n        const {\r\n            is_current,\r\n            application_name,\r\n            application_version,\r\n            device_model,\r\n            platform,\r\n            system_version,\r\n            ip,\r\n            region,\r\n            country,\r\n            last_active_date\r\n        } = session;\r\n        const showDate = !is_current;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\r\n                    <div className='session'>\r\n                        <div className='session-title'>\r\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\r\n                            {showDate && (\r\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\r\n                        <div className='session-subtitle2'>\r\n                            {`${ip} - `}\r\n                            {region && `${region}, `}\r\n                            {country && `${country}`}\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleTerminate}>\r\n                            <ListItemIcon>\r\n                                <StopIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Terminate')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSession.propTypes = {\r\n    session: PropTypes.object.isRequired,\r\n    onTerminate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Session);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Session from '../../Tile/Session';\r\nimport StopIcon from '../../../Assets/Icons/Stop';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ActiveSessions.css';\r\n\r\nclass ActiveSessions extends React.Component {\r\n    state = {\r\n        open: false,\r\n        openAll: false,\r\n        session: null\r\n    };\r\n\r\n    handleTerminate = session => {\r\n        this.setState({\r\n            open: true,\r\n            session\r\n        });\r\n    };\r\n\r\n    handleTerminateAllOther = () => {\r\n        this.setState({\r\n            openAll: true\r\n        });\r\n    };\r\n\r\n    handleCloseConfirmation = () => {\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n    };\r\n\r\n    handleDoneConfirmation = async () => {\r\n        const { sessions, t } = this.props;\r\n        const { session } = this.state;\r\n        if (!session) return;\r\n\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateSession',\r\n            session_id: session.id\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleCloseAllConfirmation = () => {\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n    };\r\n\r\n    handleDoneAllConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateAllOtherSessions'\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, sessions, onClose } = this.props;\r\n        const { open, openAll } = this.state;\r\n\r\n        const current = sessions.sessions.find(x => x.is_current);\r\n        const other = sessions.sessions.filter(x => !x.is_current);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    {Boolean(current) && (\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\r\n                            <Session session={current} onTerminate={this.handleTerminate} />\r\n                            {other.length > 0 && (\r\n                                <ListItem\r\n                                    className='settings-list-item'\r\n                                    button\r\n                                    disableRipple\r\n                                    onClick={this.handleTerminateAllOther}>\r\n                                    <ListItemIcon>\r\n                                        <StopIcon color='secondary' />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primaryTypographyProps={{ color: 'secondary' }}\r\n                                        primary={t('TerminateAllSessions')}\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {other.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\r\n                                {other.map(x => (\r\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleCloseConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('TerminateSessionText')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={openAll}\r\n                    onClose={this.handleCloseAllConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureSessions')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nActiveSessions.propTypes = {\r\n    sessions: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ActiveSessions);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\r\n    'Unblock'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation, withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport User from '../../Tile/User';\r\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { openUser } from '../../../Actions/Client';\r\nimport { unblockSender } from '../../../Actions/Message';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './BlockedUsers.css';\r\n\r\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\r\n    const [contextMenu, setContextMenu] = React.useState(false);\r\n    const [top, setTop] = React.useState(0);\r\n    const [left, setLeft] = React.useState(0);\r\n    const { t } = useTranslation();\r\n\r\n    const handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (contextMenu) {\r\n            setContextMenu(false);\r\n        } else {\r\n            const { clientX, clientY } = event;\r\n\r\n            setContextMenu(true);\r\n            setLeft(clientX);\r\n            setTop(clientY);\r\n        }\r\n    };\r\n\r\n    const handleCloseContextMenu = () => {\r\n        setContextMenu(false);\r\n        setLeft(0);\r\n        setTop(0);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        onClick(userId);\r\n    };\r\n\r\n    const handleUnblock = () => {\r\n        handleCloseContextMenu();\r\n        onUnblock(userId);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n            <Popover\r\n                open={contextMenu}\r\n                onClose={handleCloseContextMenu}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={{ top, left }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}>\r\n                <MenuList onClick={e => e.stopPropagation()}>\r\n                    <MenuItem onClick={handleUnblock}>\r\n                        <ListItemIcon>\r\n                            <UnblockIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Unblock')} />\r\n                    </MenuItem>\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    );\r\n});\r\n\r\nBlockedUser.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onUnblock: PropTypes.func.isRequired\r\n};\r\n\r\nclass BlockedUsers extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { users } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\r\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\r\n    }\r\n\r\n    handleUnblockUser = async userId => {\r\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, users, t } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        { users.senders.length > 0 ? (\r\n                            <>\r\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\r\n                                {\r\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nBlockedUsers.propTypes = {\r\n    users: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(BlockedUsers);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\r\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\r\n    </g>,\r\n    'Device'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'RemoveMember'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport SectionHeader from '../SectionHeader';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacyCalls.css';\r\n\r\nclass PrivacyCalls extends React.Component {\r\n    state = {\r\n        prevAllowCalls: null,\r\n        prevAllowP2PCalls: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { allowCalls, allowP2PCalls } = props;\r\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\r\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\r\n            const allowCallsValue = allowCalls.rules.find(x =>\r\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n\r\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\r\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n\r\n            return {\r\n                prevAllowCalls: allowCalls,\r\n                prevAllowP2PCalls: allowP2PCalls,\r\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\r\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setSettings();\r\n    }\r\n\r\n    setSettings() {\r\n        const { allowCalls, allowP2PCalls } = this.props;\r\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\r\n\r\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\r\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\r\n            let added = false;\r\n            const rules = {\r\n                '@type': 'userPrivacySettingRules',\r\n                rules: allowCalls.rules.map(x => {\r\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\r\n                        added = true;\r\n                        return { '@type': allowCallsValue }\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (!added) {\r\n                rules.rules.push({ '@type': allowCallsValue });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'setUserPrivacySettingRules',\r\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\r\n                rules\r\n            });\r\n        }\r\n\r\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\r\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\r\n            let added = false;\r\n            const rules = {\r\n                '@type': 'userPrivacySettingRules',\r\n                rules: allowP2PCalls.rules.map(x => {\r\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\r\n                        added = true;\r\n                        return { '@type': allowP2PCallsValue }\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (!added) {\r\n                rules.rules.push({ '@type': allowP2PCallsValue });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'setUserPrivacySettingRules',\r\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\r\n                rules\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeAllowCalls = event => {\r\n        this.setState({\r\n            allowCallsValue: event.currentTarget.value\r\n        });\r\n    };\r\n\r\n    handleChangeAllowP2PCalls = event => {\r\n        this.setState({\r\n            allowP2PCallsValue: event.currentTarget.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Calls')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\r\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\r\n                        </RadioGroup>\r\n\r\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\r\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\r\n                        </RadioGroup>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacyCalls.propTypes = {\r\n    allowCalls: PropTypes.object.isRequired,\r\n    allowP2PCalls: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withTranslation()(PrivacyCalls);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport ActiveSessions from './ActiveSessions';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport BlockedUsers from './BlockedUsers';\r\nimport DeviceIcon from '../../../Assets/Icons/Device';\r\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacySecurity.css';\r\nimport PrivacyCalls from './PrivacyCalls';\r\nimport { CallOutlined } from '@material-ui/icons';\r\n\r\nclass PrivacySecurity extends React.Component {\r\n    state = {\r\n        sessions: null,\r\n        openActiveSessions: false,\r\n\r\n        users: null,\r\n        openBlockedUsers: false,\r\n\r\n        allowCalls: null,\r\n        allowP2PCalls: null,\r\n        openCalls: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { user_id, user_full_info } = update;\r\n        const { users } = this.state;\r\n        if (!users) return;\r\n\r\n        const { total_count, senders } = users;\r\n        const { is_blocked } = user_full_info;\r\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\r\n        if (is_blocked === prevIsBlocked) return;\r\n\r\n        if (is_blocked) {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count + 1,\r\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count - 1,\r\n                    senders: senders.filter(x => x.user_id !== user_id)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getActiveSessions'\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getBlockedMessageSenders',\r\n            offset: 0,\r\n            limit: 100\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getUserPrivacySettingRules',\r\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getUserPrivacySettingRules',\r\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\r\n        }).catch(() => null));\r\n\r\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\r\n\r\n        this.setState({\r\n            sessions,\r\n            users,\r\n            allowCalls,\r\n            allowP2PCalls\r\n        });\r\n    }\r\n\r\n    openActiveSessions = () => {\r\n        if (!this.state.sessions) return;\r\n\r\n        this.setState({\r\n            openActiveSessions: true\r\n        });\r\n    };\r\n\r\n    closeActiveSessions = () => {\r\n        this.setState({\r\n            openActiveSessions: false\r\n        });\r\n    };\r\n\r\n    openBlockedUsers = () => {\r\n        if (!this.state.users) return;\r\n\r\n        this.setState({\r\n            openBlockedUsers: true\r\n        });\r\n    };\r\n\r\n    closeBlockedUsers = () => {\r\n        this.setState({\r\n            openBlockedUsers: false\r\n        });\r\n    };\r\n\r\n    openCalls = () => {\r\n        const { allowCalls, allowP2PCalls } = this.state;\r\n        if (!allowCalls || !allowP2PCalls) return;\r\n\r\n        this.setState({\r\n            openCalls: true\r\n        });\r\n    };\r\n\r\n    closeCalls = () => {\r\n        this.setState({\r\n            openCalls: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const {\r\n            openBlockedUsers, users,\r\n            openActiveSessions, sessions,\r\n            openCalls, allowCalls, allowP2PCalls\r\n        } = this.state;\r\n\r\n        const sessionsCount =\r\n            sessions && sessions.sessions.length > 0\r\n                ? sessions.sessions.length === 1\r\n                    ? '1 session'\r\n                    : `${sessions.sessions.length} sessions`\r\n                : '1 session';\r\n\r\n        const usersCount =\r\n            users && users.total_count > 0\r\n                ? users.total_count === 1\r\n                    ? '1 user'\r\n                    : `${users.total_count} users`\r\n                : 'no users';\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openBlockedUsers}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <RemoveMemberIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('BlockedUsers')}\r\n                                secondary={usersCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openActiveSessions}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <DeviceIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('SessionsTitle')}\r\n                                secondary={sessionsCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openCalls}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <CallOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('Calls')}\r\n                                secondary={''}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                    {/*<div className='sidebar-page-section-divider' />*/}\r\n                    {/*<div className='sidebar-page-section'>*/}\r\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\r\n                    {/*            secondary={t('LastSeenContacts')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('LastSeenTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('WhoCanAddMe')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\r\n                    <BlockedUsers users={users} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\r\n                    <ActiveSessions sessions={sessions} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\r\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacySecurity.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(PrivacySecurity);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Main from './Main';\r\nimport EditProfile from './EditProfile';\r\nimport Filters from './Filters';\r\nimport General from './General';\r\nimport Language from '../Language';\r\nimport Notifications from './Notifications';\r\nimport PrivacySecurity from './PrivacySecurity';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Settings.css';\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openEditProfile: false,\r\n            openGeneral: false,\r\n            openNotifications: false,\r\n            openPrivacySecurity: false,\r\n            openLanguage: false,\r\n            openFilters: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!photo) return;\r\n\r\n        const store = FileStore.get();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    async loadContent() {\r\n        const { chatId } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatContent(store, chatId, true);\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserFullInfo',\r\n            user_id: UserStore.getMyId()\r\n        });\r\n\r\n        UserStore.setFullInfo(UserStore.getMyId(), result);\r\n    }\r\n\r\n    openEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: true\r\n        });\r\n    };\r\n\r\n    closeEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: false\r\n        });\r\n    };\r\n\r\n    openGeneral = () => {\r\n        this.setState({\r\n            openGeneral: true\r\n        });\r\n    };\r\n\r\n    closeGeneral = () => {\r\n        this.setState({\r\n            openGeneral: false\r\n        });\r\n    };\r\n\r\n    openNotifications = () => {\r\n        this.setState({\r\n            openNotifications: true\r\n        });\r\n    };\r\n\r\n    closeNotifications = () => {\r\n        this.setState({\r\n            openNotifications: false\r\n        });\r\n    };\r\n\r\n    openPrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: true\r\n        });\r\n    };\r\n\r\n    closePrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: false\r\n        });\r\n    };\r\n\r\n    openLanguage = () => {\r\n        this.setState({\r\n            openLanguage: true\r\n        });\r\n    };\r\n\r\n    closeLanguage = () => {\r\n        this.setState({\r\n            openLanguage: false\r\n        });\r\n    };\r\n\r\n    openFilters = () => {\r\n        this.setState({\r\n            openFilters: true\r\n        });\r\n    };\r\n\r\n    closeFilters = () => {\r\n        this.setState({\r\n            openFilters: false\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, popup } = this.props;\r\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Main\r\n                    chatId={chatId}\r\n                    popup={popup}\r\n                    onClose={this.handleCloseSettings}\r\n                    onEditProfile={this.openEditProfile}\r\n                    onGeneral={this.openGeneral}\r\n                    onNotifications={this.openNotifications}\r\n                    onPrivacySecurity={this.openPrivacySecurity}\r\n                    onLanguage={this.openLanguage}\r\n                    onFilters={this.openFilters}\r\n                />\r\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\r\n                    <EditProfile chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\r\n                    <General chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\r\n                    <Notifications chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\r\n                    <PrivacySecurity />\r\n                </SidebarPage>\r\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\r\n                    <Filters />\r\n                </SidebarPage>\r\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\r\n                    <Language />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Settings);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { openUser } from '../../Actions/Client';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, false);\r\n        this.handleClose();\r\n    };\r\n\r\n    renderItem = ({ index, style }, items) => {\r\n        const userId = items.user_ids[index];\r\n\r\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const searchItems = await TdLibController.send({\r\n            '@type': 'searchContacts',\r\n            query,\r\n            limit: 1000\r\n        });\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\r\n\r\n        this.setState({ searchItems });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { items, searchItems } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\r\n                </div>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default Contacts;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DownloadIcon from '../../Assets/Icons/Download';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './UpdatePanel.css';\r\n\r\nclass UpdatePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            newContentAvailable: false,\r\n            isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateNewContentAvailable = () => {\r\n        this.setState({ newContentAvailable: true });\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        if (this.handled) return;\r\n\r\n        this.handled = true;\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 250);\r\n    };\r\n\r\n    render() {\r\n        const { newContentAvailable, isSmallWidth } = this.state;\r\n        const { t } = this.props;\r\n\r\n        if (!newContentAvailable) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\r\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(UpdatePanel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewChannel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false,\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { error } = this.state;\r\n        const { defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n\r\n        this.handleClose();\r\n\r\n        const description = this.descriptionRef.current.value;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createNewSupergroupChat',\r\n            title,\r\n            description,\r\n            is_channel: true,\r\n            location: null\r\n        });\r\n\r\n        if (defaultPhotoFile || defaultPhoto) {\r\n            const photo = defaultPhotoFile\r\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\r\n\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputChatPhotoStatic', photo }\r\n            });\r\n        }\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewChannel')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('EnterChannelName')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <TextField\r\n                                inputRef={this.descriptionRef}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('DescriptionOptionalPlaceholder')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewChannel.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewChannel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport UserTile from './UserTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport './UserChip.css';\r\n\r\nclass UserChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <UserTile userId={userId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getUserShortName(userId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserChip.propTypes = {\r\n    userId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default UserChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport UserChip from '../Tile/UserChip';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\nimport { scrollBottom } from '../../Utils/DOM';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, selected, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null,\r\n            selectedItems: {\r\n                array: [],\r\n                map: new Map()\r\n            },\r\n            focusedItem: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    getUserIds() {\r\n        return this.state.selectedItems.array;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        const { map, array } = selectedItems;\r\n\r\n        const newMap = new Map(map);\r\n        let newArray;\r\n        let newFocusedItem = null;\r\n        let isDeleting = false;\r\n        if (map.has(userId)) {\r\n            newMap.delete(userId);\r\n            newArray = array.filter(x => x !== userId);\r\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\r\n            isDeleting = true;\r\n        } else {\r\n            newMap.set(userId, userId);\r\n            newArray = array.concat([userId]);\r\n            newFocusedItem = null;\r\n        }\r\n\r\n        const input = this.searchInputRef.current;\r\n        input.focus();\r\n        if (!isDeleting) {\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        this.setState({\r\n            focusedItem: newFocusedItem,\r\n            selectedItems: {\r\n                array: newArray,\r\n                map: newMap\r\n            }\r\n        }, () => {\r\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\r\n            this.animateItems(prevMap);\r\n        });\r\n    };\r\n\r\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        scrollBottom(wrapPanel, 'auto');\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                                   + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                                     + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 101);\r\n        });\r\n    }\r\n\r\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\r\n        const userId = items[index];\r\n        const isSelected = selectedItemsMap.has(userId);\r\n\r\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                publicItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchContacts',\r\n                query,\r\n                limit: 20\r\n            })\r\n        );\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchPublicChats',\r\n                query\r\n            })\r\n        );\r\n        const [searchItems, publicChats] = await Promise.all(promises);\r\n\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const publicItems = { '@type': 'users', user_ids: [] };\r\n        publicChats.chat_ids.reduce((array, chatId) => {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\r\n                array.push(chat.type.user_id);\r\n            }\r\n            return array;\r\n        }, publicItems.user_ids);\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids);\r\n        loadUsersContent(store, publicItems.user_ids);\r\n\r\n        this.setState({ searchItems, publicItems, focusedItem: null });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleSearchClose = event => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { map } = selectedItems;\r\n        if (!map.has(focusedItem)) return;\r\n\r\n        event.stopPropagation();\r\n        event.nativeEvent.stopImmediatePropagation();\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        })\r\n    };\r\n\r\n    handleBackspace = () => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { array, map } = selectedItems;\r\n        if (!array) return;\r\n        if (!array.length) return;\r\n\r\n        if (map.has(focusedItem)) {\r\n            this.handleOpenUser(focusedItem);\r\n            return;\r\n        }\r\n\r\n        const lastItem = array[array.length - 1];\r\n        if (!lastItem) return;\r\n\r\n        this.setState({\r\n            focusedItem: lastItem\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        this.itemsRef.clear();\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='contacts-border'/>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && publicItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAddParticipants.propTypes = {\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(AddParticipants);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport SectionHeader from './SectionHeader';\r\nimport User from '../Tile/User';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './NewGroupParams.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass NewGroupParams extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { userIds } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, userIds);\r\n    }\r\n\r\n    getTitle() {\r\n        const { error } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return title;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        return title;\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n        if (!onClose) return;\r\n\r\n        onClose();\r\n    };\r\n\r\n    render() {\r\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\r\n        const { error } = this.state;\r\n\r\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\r\n\r\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewGroup')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('GroupName')}\r\n                                defaultValue={''}\r\n                            />\r\n                        </div>\r\n                        <SectionHeader>{itemsCaption}</SectionHeader>\r\n                        {items}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroupParams.propTypes = {\r\n    userIds: PropTypes.array,\r\n    defaultPhotoURL: PropTypes.string,\r\n    onChoosePhoto: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(NewGroupParams);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddParticipants from './AddParticipants';\r\nimport NewGroupParams from './NewGroupParams';\r\nimport SidebarPage from './SidebarPage';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addParticipantsRef = React.createRef();\r\n        this.newGroupParamsRef = React.createRef();\r\n\r\n        this.state = {\r\n            openParams: false,\r\n            userIds: [],\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleDone = async () => {\r\n        const { openParams } = this.state;\r\n        if (!openParams) {\r\n            const userIds = this.addParticipantsRef.current.getUserIds();\r\n            if (!userIds.length) return;\r\n\r\n            this.setState({\r\n                openParams: true,\r\n                userIds\r\n            })\r\n        } else {\r\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n            const title = this.newGroupParamsRef.current.getTitle();\r\n            if (!title) {\r\n                return;\r\n            }\r\n\r\n            this.handleClose();\r\n\r\n            const chat = await TdLibController.send({\r\n                '@type': 'createNewSupergroupChat',\r\n                title,\r\n                is_channel: false,\r\n                description: '',\r\n                location: null\r\n            });\r\n\r\n            if (defaultPhotoFile || defaultPhoto) {\r\n                const photo = defaultPhotoFile\r\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\r\n\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\r\n                });\r\n            }\r\n\r\n            if (userIds.length > 0) {\r\n                TdLibController.send({\r\n                    '@type': 'addChatMembers',\r\n                    chat_id: chat.id,\r\n                    user_ids: userIds\r\n                });\r\n            }\r\n\r\n            openChat(chat.id);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleCloseParams = () => {\r\n        this.setState({\r\n            openParams: false,\r\n            userIds: []\r\n        })\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { openParams, userIds, defaultPhotoURL } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\r\n\r\n                <SidebarPage open={openParams}>\r\n                    <NewGroupParams\r\n                        ref={this.newGroupParamsRef}\r\n                        defaultPhotoURL={defaultPhotoURL}\r\n                        userIds={userIds}\r\n                        onChoosePhoto={this.handleChoosePhoto}\r\n                        onClose={this.handleCloseParams}\r\n                    />\r\n                </SidebarPage>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroup.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewGroup);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Contacts from '../ColumnLeft/Contacts';\r\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\r\nimport Search from '../ColumnLeft/Search/Search';\r\nimport Settings from '../ColumnLeft/Settings/Settings';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './ChatInfoDialog.css';\r\nimport { openChat } from '../../Actions/Client';\r\nimport NewChannel from '../ColumnLeft/NewChannel';\r\nimport NewGroup from '../ColumnLeft/NewGroup';\r\n\r\nclass SidebarDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false,\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        this.query = query;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDialogEnter = () => {\r\n        if (!this.query) return;\r\n\r\n        const header = this.headerRef.current;\r\n        if (header) {\r\n            header.setInitQuery(this.query);\r\n        }\r\n\r\n        this.query = null;\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n            openSearch: false\r\n        });\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        this.handleCloseSearch();\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\r\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}\r\n                onEnter={this.handleDialogEnter}\r\n                >\r\n                {openSettings && <Settings chatId={meChatId} popup/>}\r\n                {openContacts && <Contacts popup />}\r\n                {openNewGroup && <NewGroup popup/>}\r\n                {openNewChannel && <NewChannel popup />}\r\n                {openSearch && (\r\n                    <>\r\n                        <DialogsHeader\r\n                            ref={this.headerRef}\r\n                            openSearch={true}\r\n                            timeout={false}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                            popup\r\n                        />\r\n                        <div className='search-content'>\r\n                            <Search\r\n                                chatId={searchChatId}\r\n                                text={searchText}\r\n                                onSelectMessage={this.handleSelectMessage}\r\n                                onClose={this.handleCloseSearch}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarDialog.propTypes = {};\r\n\r\nexport default SidebarDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { orderCompare } from './Common';\r\nimport { getChatOrder } from './Chat';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nexport function getArchiveTitle() {\r\n    const archive = ChatStore.chatList.get('chatListArchive');\r\n    const chats = [];\r\n    const chatsOrder = [];\r\n    if (archive) {\r\n        for (const chatId of archive.keys()) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\r\n                if (order !== '0') chats.push(chat);\r\n                chatsOrder.push({ order, id: chatId, title: chat.title });\r\n            }\r\n        }\r\n    }\r\n\r\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\r\n\r\n    return orderedChats.map(x => x.title).join(', ');\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport Archive from './Archive';\r\nimport Search from './Search/Search';\r\nimport Filters from './Filters';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport DialogsList from './DialogsList';\r\nimport SidebarPage from './SidebarPage';\r\nimport Settings from './Settings/Settings';\r\nimport Contacts from './Contacts';\r\nimport UpdatePanel from './UpdatePanel';\r\nimport SidebarDialog from '../Popup/SidebarDialog';\r\nimport NewGroup from './NewGroup';\r\nimport NewChannel from './NewChannel';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getArchiveTitle } from '../../Utils/Archive';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { duration } from '@material-ui/core/styles/transitions';\r\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialogs.css';\r\n\r\nconst defaultTimeout = {\r\n    enter: duration.enteringScreen,\r\n    exit: duration.leavingScreen\r\n};\r\n\r\nclass Dialogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogListRef = React.createRef();\r\n        this.archiveListRef = React.createRef();\r\n        this.dialogsHeaderRef = React.createRef();\r\n\r\n        this.state = {\r\n            cache: null,\r\n\r\n            showArchive: false,\r\n            archiveTitle: null,\r\n\r\n            archiveItems: [],\r\n\r\n            timeout: defaultTimeout,\r\n            openSearch: false,\r\n            openArchive: false,\r\n            openContacts: false,\r\n            openSettings: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n\r\n            searchChatId: 0,\r\n            searchText: null,\r\n            query: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            archiveItems,\r\n            openSearch,\r\n            openArchive,\r\n            openSettings,\r\n            openContacts,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        if (nextState.cache !== cache) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveItems !== archiveItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openArchive !== openArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchChatId !== searchChatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCache();\r\n\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        this.handleSaveCache();\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        if (!isSmallWidth) return;\r\n\r\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\r\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\r\n            this.setState({\r\n                    openContacts: false,\r\n                    openSettings: false,\r\n                    openSearch: false,\r\n                    openNewGroup: false,\r\n                    openNewChannel: false,\r\n                    timeout: 0\r\n                }, () => {\r\n                    this.setState({\r\n                        timeout: defaultTimeout\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadCache() {\r\n        const cache = (await CacheStore.load()) || {};\r\n\r\n        const { chats, archiveChats } = cache;\r\n\r\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\r\n        this.setState({\r\n            cache,\r\n\r\n            showArchive: archiveChats && archiveChats.length > 0,\r\n            archiveTitle: getArchiveTitle()\r\n        });\r\n\r\n        this.loadChatContents((chats || []).map(x => x.id));\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateCacheLoaded'\r\n        });\r\n    }\r\n\r\n    async saveCache() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListArchive' },\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        const [mainChats, archiveChats] = await Promise.all(promises);\r\n\r\n        const { filters } = FilterStore;\r\n\r\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\r\n    }\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { showArchive: prevShowArchive } = this.state;\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        if (mainCurrent && mainCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        if (archiveCurrent && archiveCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const archiveList = ChatStore.chatList.get('chatListArchive');\r\n        const showArchive = archiveList && archiveList.size > 0;\r\n\r\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\r\n            if (!prevShowArchive && showArchive) {\r\n                const { current } = this.dialogListRef;\r\n                if (current.listRef) {\r\n                    const { current: listCurrent } = current.listRef;\r\n                    if (listCurrent && listCurrent.scrollTop > 0) {\r\n                        current.scrollTop += 68;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (prevShowArchive && !showArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    onClientUpdateArchive = update => {\r\n        const { open } = update;\r\n\r\n        this.setState({ openArchive: open });\r\n    };\r\n\r\n    onClientUpdateThemeChange = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        const header = this.dialogsHeaderRef.current;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null,\r\n                openArchive: false,\r\n                openContacts: false,\r\n                openSettings: false,\r\n                openNewGroup: false,\r\n                openNewChannel: false,\r\n            },\r\n            () => {\r\n                if (header) {\r\n                    header.setInitQuery(query);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const { openArchive } = this.state;\r\n        if (openArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        } else {\r\n            this.dialogListRef.current.scrollToTop();\r\n        }\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\r\n        const searchText = openSearch ? this.state.searchText : null;\r\n\r\n        this.setState({\r\n            openSearch,\r\n            searchChatId,\r\n            searchText\r\n        });\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSaveCache = () => {\r\n        this.saveCache();\r\n    };\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    handleCloseArchive = () => {\r\n        this.setState({ openArchive: false });\r\n    };\r\n\r\n    handleCloseContacts = () => {\r\n        this.setState({ openContacts: false });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({ openSettings: false });\r\n    };\r\n\r\n    handleCloseNewGroup = () => {\r\n        this.setState({ openNewGroup: false });\r\n    };\r\n\r\n    handleCloseNewChannel = () => {\r\n        this.setState({ openNewChannel: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            archiveItems,\r\n            meChatId,\r\n            openSettings,\r\n            openContacts,\r\n            openArchive,\r\n            openSearch,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            timeout,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\r\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='dialogs'>\r\n                    <div className='sidebar-page'>\r\n                        <DialogsHeader\r\n                            ref={this.dialogsHeaderRef}\r\n                            openSearch={openSearch}\r\n                            timeout={timeout !== 0}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                        />\r\n                        <div className='dialogs-content'>\r\n                            <div className='dialogs-content-internal'>\r\n                                <Filters/>\r\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\r\n                                <DialogsList\r\n                                    type='chatListMain'\r\n                                    ref={this.dialogListRef}\r\n                                    cacheItems={mainCacheItems}\r\n                                    onSaveCache={this.handleSaveCache}\r\n                                />\r\n                            </div>\r\n                            <CSSTransition\r\n                                classNames='search'\r\n                                timeout={timeout}\r\n                                in={openSearch}\r\n                                mountOnEnter={true}\r\n                                unmountOnExit={true}>\r\n                                <Search\r\n                                    chatId={searchChatId}\r\n                                    text={searchText}\r\n                                    onSelectMessage={this.handleSelectMessage}\r\n                                    onClose={this.handleCloseSearch}\r\n                                />\r\n                            </CSSTransition>\r\n                        </div>\r\n                        {/*<UpdatePanel />*/}\r\n                    </div>\r\n\r\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\r\n                        <Archive\r\n                            innerListRef={this.archiveListRef}\r\n                            items={archiveItems}\r\n                            cacheItems={archiveCacheItems}\r\n                        />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\r\n                        <Contacts />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\r\n                        <Settings chatId={meChatId} />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\r\n                        <NewGroup />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\r\n                        <NewChannel />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarDialog/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialogs;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ChatInfo from '../ColumnRight/ChatInfo';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfoDialog.css';\r\n\r\nclass ChatInfoDialog extends React.Component {\r\n    state = {\r\n        chatId: ApplicationStore.dialogChatId\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.state;\r\n\r\n        return nextState.chatId !== chatId;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        if (ApplicationStore.mediaViewerContent) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogChatId = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDialogChatId',\r\n            chatId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.state;\r\n        if (!chatId) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}>\r\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfoDialog.propTypes = {};\r\n\r\nexport default ChatInfoDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\r\n    'Send'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'Microphone'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\r\n    'Attach'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AttachFileIcon from '../../Assets/Icons/Attach';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport PollIcon from '@material-ui/icons/PollOutlined';\r\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\nimport './AttachButton.css';\r\n\r\nclass AttachButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPhoto } = this.props;\r\n        if (!onAttachPhoto) return;\r\n\r\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachDocument } = this.props;\r\n        if (!onAttachDocument) return;\r\n\r\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPoll } = this.props;\r\n        if (!onAttachPoll) return;\r\n\r\n        onAttachPoll();\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className='inputbox-icon-button'\r\n                    aria-label='Attach'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    classes={{\r\n                        paper: 'attach-button-paper'\r\n                    }}\r\n                    onClose={this.handleMenuClose}>\r\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <PhotoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachPhoto')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <InsertDriveFileIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachDocument')} />\r\n                    </MenuItem>\r\n                    {!isPrivateChat(chatId) && (\r\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\r\n                            <ListItemIcon>\r\n                                <PollIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Poll')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAttachButton.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onAttachDocument: PropTypes.func.isRequired,\r\n    onAttachPhoto: PropTypes.func.isRequired,\r\n    onAttachPoll: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(AttachButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport function focusNode(node, toEnd = false) {\r\n    if (!node) return;\r\n\r\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\r\n        const lastNode = node.childNodes[node.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        range.setStart(lastNode, lastNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    node.focus();\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst keys = {\r\n    backspace: 8,\r\n    shift: 16,\r\n    ctrl: 17,\r\n    alt: 18,\r\n    delete: 46,\r\n    cmd: 91,\r\n    leftArrow: 37,\r\n    upArrow: 38,\r\n    rightArrow: 39,\r\n    downArrow: 40\r\n};\r\n\r\nexport const utils = {\r\n    special: {},\r\n    navigational: {},\r\n    isSpecial(e) {\r\n        return typeof this.special[e.keyCode] !== 'undefined';\r\n    },\r\n    isNavigational(e) {\r\n        return typeof this.navigational[e.keyCode] !== 'undefined';\r\n    }\r\n};\r\n\r\nutils.special[keys['backspace']] = true;\r\nutils.special[keys['shift']] = true;\r\nutils.special[keys['ctrl']] = true;\r\nutils.special[keys['alt']] = true;\r\nutils.special[keys['delete']] = true;\r\n\r\nutils.navigational[keys['upArrow']] = true;\r\nutils.navigational[keys['downArrow']] = true;\r\nutils.navigational[keys['leftArrow']] = true;\r\nutils.navigational[keys['rightArrow']] = true;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollOption.css';\r\n\r\nclass CreatePollOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionTextRef = React.createRef();\r\n\r\n        this.state = {\r\n            remainLength: POLL_OPTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    getText = () => {\r\n        return this.optionTextRef.current.innerText;\r\n    };\r\n\r\n    focus = (toEnd = false) => {\r\n        const node = this.optionTextRef.current;\r\n\r\n        focusNode(node, toEnd);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { option, onDelete } = this.props;\r\n        if (!option) return;\r\n        if (!onDelete) return;\r\n\r\n        onDelete(option.id);\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { option } = this.props;\r\n\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const length = node.dataset.length;\r\n        const maxLength = node.dataset.maxLength;\r\n        const text = this.getText();\r\n\r\n        this.setState({\r\n            remainLength: length - text.length\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollOption',\r\n            id: option.id,\r\n            text\r\n        });\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = this.getText();\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Backspace': {\r\n                const text = this.getText();\r\n                if (!text) {\r\n                    const { option, onDelete } = this.props;\r\n                    if (onDelete) {\r\n                        onDelete(option.id, true);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'Enter': {\r\n                const { option, onFocusNext } = this.props;\r\n                if (option && onFocusNext) {\r\n                    onFocusNext(option.id);\r\n                }\r\n\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            case 'ArrowUp': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\r\n\r\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\r\n                    const { option, onFocusPrev } = this.props;\r\n                    if (onFocusPrev) {\r\n                        onFocusPrev(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    const { option, onFocusNext } = this.props;\r\n                    if (onFocusNext) {\r\n                        onFocusNext(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = this.getText();\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleChange = () => {\r\n        const { option } = this.props;\r\n        if (!option) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChooseOption',\r\n            id: option.id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, option } = this.props;\r\n        const { remainLength } = this.state;\r\n\r\n        const { is_chosen } = option;\r\n\r\n        return (\r\n            <div className='create-poll-option'>\r\n                <div className='create-poll-option-wrapper'>\r\n                    <Radio\r\n                        key={Date.now()}\r\n                        classes={{ root: 'create-poll-radio-root' }}\r\n                        color='primary'\r\n                        checked={is_chosen}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div\r\n                        ref={this.optionTextRef}\r\n                        className='create-poll-option-text'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('Option')}\r\n                        data-length={POLL_OPTION_LENGTH}\r\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\r\n                        onInput={this.handleInput}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onPaste={this.handlePaste}\r\n                    />\r\n                </div>\r\n                <div className='create-poll-option-delete-button'>\r\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='create-poll-option-bottom-border' />\r\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\r\n                    <Typography\r\n                        align='center'\r\n                        className='create-poll-option-subtitle'\r\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\r\n                        variant='subtitle1'>\r\n                        {remainLength}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onFocusPrev: PropTypes.func.isRequired,\r\n    onFocusNext: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreatePollOption from './CreatePollOption';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { utils } from '../../Utils/Key';\r\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport {\r\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n    POLL_OPTIONS_MAX_COUNT,\r\n    POLL_QUESTION_HINT_LENGTH,\r\n    POLL_QUESTION_LENGTH,\r\n    POLL_QUESTION_MAX_LENGTH\r\n} from '../../Constants';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollDialog.css';\r\n\r\nclass CreatePollDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.questionRef = React.createRef();\r\n        this.optionsRefMap = new Map();\r\n\r\n        this.state = {\r\n            poll: null,\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    handleClientUpdateNewPoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePollQuestion = update => {\r\n        const { poll } = PollStore;\r\n\r\n        const node = this.questionRef.current;\r\n        const length = node.dataset.length;\r\n        const innerText = node.innerText;\r\n\r\n        this.setState({\r\n            remainLength: length - innerText.length,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll });\r\n    };\r\n\r\n    handleClientUpdateNewPollOption = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll }, () => {\r\n            setTimeout(() => {\r\n                const node = this.optionsRefMap.get(poll.options.length - 1);\r\n\r\n                node.focus(true);\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { poll } = this.state;\r\n\r\n        if (poll && !prevState.poll) {\r\n            setTimeout(() => {\r\n                focusNode(this.questionRef.current, true);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = node.innerText;\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Enter': {\r\n                if (!event.shiftKey) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = node.innerText;\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleInput = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        //const length = node.dataset.length;\r\n\r\n        const innerText = node.innerText;\r\n        const innerHtml = node.innerHTML;\r\n\r\n        if (innerHtml === '<br>') {\r\n            node.innerText = '';\r\n        }\r\n\r\n        // this.setState({\r\n        //     remainLength: length - innerText.length\r\n        // });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollQuestion',\r\n            question: innerText\r\n        });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\r\n\r\n        const option = {\r\n            id: Date.now(),\r\n            text: ''\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPollOption',\r\n            option\r\n        });\r\n    };\r\n\r\n    handleDeleteOption = (id, backspace = false) => {\r\n        if (backspace) {\r\n            this.handleDeleteByBackspace(id);\r\n        } else {\r\n            this.handleDelete(id);\r\n        }\r\n    };\r\n\r\n    handleDelete = id => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePollOption',\r\n            id\r\n        });\r\n    };\r\n\r\n    handleDeleteByBackspace = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n        let deleteOption = true;\r\n        for (let i = index; i < options.length; i++) {\r\n            const { text } = options[i];\r\n            if (text) {\r\n                deleteOption = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (deleteOption) {\r\n            this.handleDeleteOption(id);\r\n        }\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, true);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(true);\r\n    };\r\n\r\n    handleFocusPrevOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, false);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(false);\r\n    };\r\n\r\n    handleFocusNextOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const nextIndex = index + 1;\r\n\r\n        const nextNode = this.optionsRefMap.get(nextIndex);\r\n        if (!nextNode) {\r\n            const text = index >= 0 && index < options.length ? options[index].text : '';\r\n            if (options.length && !text) {\r\n                return;\r\n            }\r\n\r\n            this.handleAddOption();\r\n            return;\r\n        }\r\n\r\n        nextNode.focus(nextNode, true);\r\n    };\r\n\r\n    getHint = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\r\n\r\n        if (addCount <= 0) {\r\n            return 'You have added the maximum number of options.';\r\n        }\r\n        if (addCount === 1) {\r\n            return 'You can add 1 more option.';\r\n        }\r\n\r\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { poll } = this.state;\r\n\r\n        if (hasPollData(poll)) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            this.handleConfirmationDone();\r\n        }\r\n    };\r\n\r\n    handleSend = () => {\r\n        const { onSend } = this.props;\r\n\r\n        const inputMessagePoll = PollStore.getInputMessagePoll();\r\n        if (!inputMessagePoll) return;\r\n\r\n        onSend(inputMessagePoll);\r\n\r\n        this.handleConfirmationDone();\r\n    };\r\n\r\n    handleConfirmationClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleConfirmationDone = () => {\r\n        this.handleConfirmationClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePoll'\r\n        });\r\n    };\r\n\r\n    handleChangeAnonymous = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAnonymous'\r\n        });\r\n    };\r\n\r\n    handleChangeAllowMultipleAnswers = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\r\n        });\r\n    };\r\n\r\n    handleChangeType = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeType'\r\n        });\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleAllowMultipleAnswersClick = event => {\r\n        const { t } = this.props;\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n        if (quizPoll) {\r\n            event.stopPropagation();\r\n\r\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { remainLength, confirm, poll } = this.state;\r\n        if (!poll) return null;\r\n\r\n        const { is_anonymous } = poll;\r\n\r\n        const options = poll ? poll.options : [];\r\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\r\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n\r\n        this.optionsRefMap.clear();\r\n        const items = options.map((x, i) => (\r\n            <CreatePollOption\r\n                ref={el => this.optionsRefMap.set(i, el)}\r\n                key={x.id}\r\n                option={x}\r\n                onDelete={this.handleDeleteOption}\r\n                onFocusPrev={this.handleFocusPrevOption}\r\n                onFocusNext={this.handleFocusNextOption}\r\n            />\r\n        ));\r\n\r\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\r\n        const hint = this.getHint();\r\n\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\r\n                    open\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        <div className='create-poll-dialog-question-title'>\r\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\r\n                                {t('Question')}\r\n                            </Typography>\r\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\r\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\r\n                                    {remainLength}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                        <div\r\n                            ref={this.questionRef}\r\n                            id='create-poll-dialog-question'\r\n                            contentEditable\r\n                            suppressContentEditableWarning\r\n                            placeholder={t('QuestionHint')}\r\n                            data-length={POLL_QUESTION_LENGTH}\r\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\r\n                            onPaste={this.handlePaste}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            onInput={this.handleInput}\r\n                        />\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('PollOptions')}\r\n                        </Typography>\r\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\r\n                            {items}\r\n                            {canAddOption && (\r\n                                <ListItem\r\n                                    selected={false}\r\n                                    className='create-poll-add-option'\r\n                                    button\r\n                                    onClick={this.handleAddOption}>\r\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Typography>{hint}</Typography>\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('Settings')}\r\n                        </Typography>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        color='primary'\r\n                                        checked={is_anonymous}\r\n                                        onChange={this.handleChangeAnonymous}\r\n                                    />\r\n                                }\r\n                                label={t('PollAnonymous')}\r\n                            />\r\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            color='primary'\r\n                                            disabled={allowMultipleAnswersDisabled}\r\n                                            checked={allowMultipleAnswers}\r\n                                            onChange={this.handleChangeAllowMultipleAnswers}\r\n                                        />\r\n                                    }\r\n                                    label={t('PollMultiple')}\r\n                                />\r\n                            </div>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\r\n                                }\r\n                                label={t('PollQuiz')}\r\n                            />\r\n                        </FormGroup>\r\n                        <Typography>{t('QuizInfo')}</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        {isValidPoll(poll) && (\r\n                            <Button color='primary' onClick={this.handleSend}>\r\n                                {t('Create')}\r\n                            </Button>\r\n                        )}\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    className='create-poll-dialog-root'\r\n                    open={confirm}\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleConfirmationClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        {t('CancelPollAlertText')}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollDialog.propTypes = {\r\n    onSend: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validateUrl } from '../../Utils/Url';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './EditUrlDialog.css';\r\n\r\nclass EditUrlDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textRef = React.createRef();\r\n        this.textInputRef = React.createRef();\r\n        this.urlRef = React.createRef();\r\n        this.urlInputRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { defaultText, defaultUrl, open } = this.props;\r\n\r\n        if (open && prevProps.open !== open) {\r\n            setTimeout(() => {\r\n                const text = this.textInputRef.current;\r\n                const url = this.urlInputRef.current;\r\n\r\n                if (!text) return;\r\n                if (!url) return;\r\n\r\n                if (!defaultText) {\r\n                    text.focus();\r\n                } else if (!defaultUrl) {\r\n                    url.focus();\r\n                } else {\r\n                    text.focus();\r\n                    text.select();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const { defaultText, defaultUrl } = this.props;\r\n        //\r\n        // const text = this.textInputRef.current;\r\n        // const url = this.urlInputRef.current;\r\n        //\r\n        // if (!text) return;\r\n        // if (!url) return;\r\n        //\r\n        // setTimeout(() => {\r\n        //     if (!defaultText) {\r\n        //         text.focus();\r\n        //     } else if (!defaultUrl) {\r\n        //         url.focus();\r\n        //     } else {\r\n        //         text.focus();\r\n        //         // text.select();\r\n        //     }\r\n        // }, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\r\n        const { textError, urlError } = this.state;\r\n\r\n        if (nextProps.defaultText !== defaultText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.defaultUrl !== defaultUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.textError !== textError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.urlError !== urlError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onDone !== onDone) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onCancel !== onCancel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.prevOpen !== props.open) {\r\n            return {\r\n                prevOpen: true,\r\n                textError: false,\r\n                urlError: false,\r\n                text: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleTextKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.urlInputRef.current.focus();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleUrlKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.handleDone();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleTextChange = event => {\r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    };\r\n\r\n    handleUrlChange = event => {\r\n        this.setState({\r\n            url: event.target.value\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { defaultText, defaultUrl } = this.props;\r\n        let { text, url } = this.state;\r\n\r\n        text = text !== null ? text : defaultText;\r\n        url = url !== null ? url : defaultUrl;\r\n\r\n        if (!text && !url) {\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        if (!text) {\r\n            this.setState({ textError: true });\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        url = validateUrl(url);\r\n        if (!url) {\r\n            this.setState({ urlError: true });\r\n            this.urlInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        const { onDone } = this.props;\r\n\r\n        onDone(text, url);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { open, defaultUrl, defaultText, t } = this.props;\r\n        const { textError, urlError } = this.state;\r\n        if (!open) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-url-dialog-title'>\r\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\r\n                        <TextField\r\n                            ref={this.textRef}\r\n                            inputRef={this.textInputRef}\r\n                            label={t('Text')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultText}\r\n                            error={textError}\r\n                            onChange={this.handleTextChange}\r\n                            onKeyDown={this.handleTextKeyDown}\r\n                        />\r\n                        <TextField\r\n                            ref={this.urlRef}\r\n                            inputRef={this.urlInputRef}\r\n                            label={t('URL')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultUrl}\r\n                            error={urlError}\r\n                            onChange={this.handleUrlChange}\r\n                            onKeyDown={this.handleUrlKeyDown}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Create')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditUrlDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    defaultText: PropTypes.string,\r\n    defaultUrl: PropTypes.string,\r\n    onDone: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(EditUrlDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { hasVideoNote } from '../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ReplyTile.css';\r\n\r\nclass ReplyTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    onClientUpdateBlob = update => {\r\n        const { chatId, messageId, thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\r\n        if (!thumbnail) return null;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(file);\r\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n\r\n        return (\r\n            <div className='reply-tile' onClick={onClick}>\r\n                {miniSrc && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-mini-blurred': true }\r\n                        )}\r\n                        draggable={false}\r\n                        src={miniSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n                {src && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src}\r\n                        alt=''\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ReplyTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\r\nimport { closePinned, openChat } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Reply.css';\r\n\r\nclass Reply extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    onGetMessageResult = result => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === result.chat_id && messageId === result.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleOpen = event => {\r\n        if (event.button !== 0) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, onClick } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n        if (isDeletedMessage(message)) return null;\r\n\r\n        openChat(chatId, messageId, false);\r\n        closePinned();\r\n        if (onClick) onClick();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId } = this.props;\r\n        let { title } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        title = title || getTitle(message, t);\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            title = null;\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\r\n                <div className='reply-wrapper'>\r\n                    <div className='border reply-border' />\r\n                    {thumbnail && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            minithumbnail={minithumbnail}\r\n                            thumbnail={thumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='reply-content'>\r\n                        {title && <div className='reply-content-title'>{title}</div>}\r\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReply.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Reply);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Reply from '../Message/Reply';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxHeader.css';\r\n\r\nclass InputBoxHeader extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, editMessageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id && editMessageId !== message_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId, editMessageId } = this.props;\r\n\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            replyMessage(chatId, 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\r\n        if (!chatId) return null;\r\n        if (!messageId && !editMessageId) return null;\r\n\r\n        return (\r\n            <div className='inputbox-header'>\r\n                <div className='inputbox-header-left-column'>\r\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='inputbox-header-middle-column'>\r\n                    <Reply\r\n                        chatId={chatId}\r\n                        messageId={editMessageId || messageId}\r\n                        title={editMessageId ? t('EditMessage') : null}\r\n                        onClick={onClick}\r\n                    />\r\n                </div>\r\n                <div className='inputbox-header-right-column' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputBoxHeader.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    editMessageId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputBoxHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './PasteFilesDialog.css';\r\n\r\nclass PasteFilesDialog extends React.Component {\r\n    handleDone = () => {\r\n        const { onConfirm } = this.props;\r\n        onConfirm();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { files, t } = this.props;\r\n        if (!files) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPasteFilesDialog.propTypes = {\r\n    files: PropTypes.array,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(withTranslation());\r\n\r\nexport default enhance(PasteFilesDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './RecordTimer.css';\r\n\r\nclass RecordTimer extends React.Component {\r\n    state = { };\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    onClientUpdateRecordStart = () => {\r\n        this.timer = setInterval(() => {\r\n            const now = new Date();\r\n            const diff = now - this.startTime;\r\n\r\n            // console.log('[recordTimer] ');\r\n            this.setState({\r\n                time: diff\r\n            });\r\n        }, 25);\r\n        this.startTime = new Date();\r\n    }\r\n\r\n    onClientUpdateRecordStop = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateRecordError = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    normalizeM(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr += '0'\r\n        } else if (msStr.length > 2) {\r\n            msStr = msStr.substr(0, 2);\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    normalizeS(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr = '0' + msStr;\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    msToTime(s) {\r\n        let ms = (s % 1000);\r\n        s = (s - ms) / 1000;\r\n        let secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        let mins = s % 60;\r\n        let hrs = (s - mins) / 60;\r\n\r\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\r\n        if (hrs > 0) {\r\n            result = hrs + ':' + result;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const { time } = this.state;\r\n        if (!time) return null;\r\n\r\n        return (\r\n            <div className='record-timer'>\r\n                {this.msToTime(time)}\r\n                <div className='record-timer-icon'/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecordTimer.propTypes = {};\r\n\r\nexport default RecordTimer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditUrlDialog from './EditUrlDialog';\r\nimport { focusInput } from '../../Utils/DOM';\r\nimport { editMessage as editMessageAction } from '../../Actions/Client';\r\nimport { getEntities, getNodes } from '../../Utils/Message';\r\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './EditMediaDialog.css';\r\n\r\nclass EditMediaDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.captionRef = React.createRef();\r\n        this.editMediaRef = React.createRef();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevOpen } = state;\r\n        const { open, chatId, messageId, newItem } = props;\r\n\r\n        if (prevOpen !== open) {\r\n            if (open) {\r\n                const editMessage = MessageStore.get(chatId, messageId);\r\n                let sendAsPhoto = false;\r\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\r\n                    sendAsPhoto = true;\r\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\r\n                    sendAsPhoto = true;\r\n                }\r\n\r\n                return {\r\n                    prevOpen: true,\r\n                    sendAsPhoto,\r\n                    editMessage,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            } else {\r\n                return {\r\n                    prevOpen: false,\r\n                    sendAsPhoto: false,\r\n                    editMessage: null,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    handleSelectionChange = () => {\r\n        if (document.activeElement === this.captionRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    handleEnter = () => {\r\n        const { chatId, messageId, open, newItem } = this.props;\r\n        if (!open) return;\r\n\r\n        let text = null;\r\n        let caption = null;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                text = content.text;\r\n                caption = content.caption;\r\n            }\r\n        }\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else if (newItem && newItem.caption) {\r\n            element.innerHTML = newItem.caption;\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n\r\n        focusInput(element);\r\n    };\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.captionRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    handleDone = () => {\r\n        const { chatId, newItem, onSend, onEdit } = this.props;\r\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const caption = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n\r\n        const isEditing = Boolean(editMessage);\r\n        if (isEditing) {\r\n            if (editMedia) {\r\n                const { photo } = editMedia;\r\n                if (!photo) return;\r\n\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\r\n                    width,\r\n                    height,\r\n                    caption\r\n                };\r\n\r\n                onEdit(null, content);\r\n            } else {\r\n                onEdit(caption, null);\r\n            }\r\n\r\n            editMessageAction(chatId, 0);\r\n        } else {\r\n            const { media, file } = newItem;\r\n            const { audio, photo, document } = media;\r\n\r\n            let content = null;\r\n            if (photo) {\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                content = sendAsPhoto\r\n                    ? {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        width,\r\n                        height,\r\n                        caption\r\n                    }\r\n                    : {\r\n                        '@type': 'inputMessageDocument',\r\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        thumbnail: null,\r\n                        caption\r\n                    };\r\n            } else if (document) {\r\n                content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    caption\r\n                };\r\n            } else if (audio) {\r\n                const { duration, title, performer } = audio;\r\n\r\n                content = {\r\n                    '@type': 'inputMessageAudio',\r\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    duration,\r\n                    title,\r\n                    performer,\r\n                    caption\r\n                };\r\n            }\r\n            if (!content) return;\r\n\r\n            onSend(content, file);\r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, messageId, onCancel } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n\r\n        if (isEditing) {\r\n            editMessageAction(chatId, 0);\r\n        }\r\n\r\n        onCancel();\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleDone();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.captionRef.current.focus();\r\n    }\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = () => {\r\n        this.clearInnerHtml();\r\n    };\r\n\r\n    clearInnerHtml() {\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    }\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleEditMedia = event => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        element.click();\r\n    };\r\n\r\n    handleEditMediaComplete = async () => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        const { files } = element;\r\n        if (files.length === 0) return;\r\n\r\n        const [file, ...rest] = Array.from(files);\r\n        if (!file) return;\r\n\r\n        const editMedia = await getMediaPhotoFromFile(file);\r\n\r\n        this.setState({\r\n            editFile: file,\r\n            editMedia\r\n        });\r\n\r\n        element.value = '';\r\n    };\r\n\r\n    handleSendAsPhoto = () => {\r\n        const { sendAsPhoto } = this.state;\r\n\r\n        this.setState({\r\n            sendAsPhoto: !sendAsPhoto\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, newItem, open, t } = this.props;\r\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\r\n        if (!open) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n        let isPhoto = false;\r\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\r\n            isPhoto = true;\r\n        }\r\n\r\n        let media = null;\r\n        if (isEditing) {\r\n            media =\r\n            editMedia\r\n                ? getMedia({ content: editMedia })\r\n                : getMedia(message, null);\r\n        } else if (newItem) {\r\n            media = getMedia({ content: newItem.media });\r\n        }\r\n        const doneLabel = isEditing ? t('Save') : t('Send');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-media-dialog-title'\r\n                onEnter={this.handleEnter}>\r\n                <div className='edit-media-dialog-content'>\r\n                    <div style={{ margin: 24 }}>{media}</div>\r\n                    { isEditing && (\r\n                        <>\r\n                            <IconButton\r\n                                disableRipple={true}\r\n                                aria-label={t('Edit')}\r\n                                className='edit-media-dialog-edit-button'\r\n                                size='small'\r\n                                onClick={this.handleEditMedia}>\r\n                                <EditIcon fontSize='inherit' />\r\n                            </IconButton>\r\n                            <input\r\n                                ref={this.editMediaRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                accept='image/*'\r\n                                onChange={this.handleEditMediaComplete}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    { !isEditing && isPhoto && (\r\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\r\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\r\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\r\n                        </RadioGroup>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    ref={this.captionRef}\r\n                    id='edit-media-dialog-caption'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Caption')}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                />\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {doneLabel}\r\n                    </Button>\r\n                </DialogActions>\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditMediaDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    newItem: PropTypes.object,\r\n\r\n    onSend: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCancel: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditMediaDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass OutputTypingManager {\r\n    constructor(chatId) {\r\n        this.chatId = chatId;\r\n        this.lastAction = null;\r\n    }\r\n\r\n    setTyping(action) {\r\n        if (!this.chatId) return;\r\n\r\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\r\n            let now = new Date();\r\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\r\n            if (this.lastTypingDate && this.lastTypingDate > now) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.lastAction = action;\r\n        this.lastTypingDate = new Date();\r\n\r\n        TdLibController.send({\r\n            '@type': 'sendChatAction',\r\n            chat_id: this.chatId,\r\n            action: action\r\n        });\r\n    }\r\n}\r\n\r\nexport default OutputTypingManager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport emojiRegex from 'emoji-regex';\r\nimport MediaRecorder from 'opus-media-recorder';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport DoneIcon from '../../Assets/Icons/Done';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\r\nimport SendIcon from '../../Assets/Icons/Send';\r\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport AttachButton from './../ColumnMiddle/AttachButton';\r\nimport CreatePollDialog from '../Popup/CreatePollDialog';\r\nimport EditUrlDialog from '../Popup/EditUrlDialog';\r\nimport InputBoxHeader from './InputBoxHeader';\r\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\r\nimport RecordTimer from './RecordTimer';\r\nimport EditMediaDialog from '../Popup/EditMediaDialog';\r\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\r\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\r\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\r\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\r\nimport { getSize, readImageSize } from '../../Utils/Common';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\r\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\r\nimport AnimationStore from '../../Stores/AnimationStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBox.css';\r\n\r\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\r\n\r\nclass InputBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachDocumentRef = React.createRef();\r\n        this.attachPhotoRef = React.createRef();\r\n        this.newMessageRef = React.createRef();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        this.state = {\r\n            chatId,\r\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\r\n            editMessageId: 0,\r\n            recordingReady: true,\r\n            recordingTime: null,\r\n            recordPermissionDenied: false,\r\n            sendFile: null\r\n        };\r\n\r\n        document.execCommand('defaultParagraphSeparator', false, 'br');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            newDraft,\r\n            files,\r\n            replyToMessageId,\r\n            editMessageId,\r\n            openEditMedia,\r\n            openEditUrl,\r\n            sendFile,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.newDraft !== newDraft) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.files !== files) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.replyToMessageId !== replyToMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.editMessageId !== editMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.sendFile !== sendFile) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditUrl !== openEditUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditMedia !== openEditMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingTime !== recordingTime) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingReady !== recordingReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadDraft() {\r\n        this.setDraft();\r\n        this.setInputFocus();\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraft() {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let innerHTML = null;\r\n        if (editMessageId) {\r\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\r\n        } else {\r\n            innerHTML = element.innerHTML;\r\n        }\r\n\r\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\r\n        this.setChatDraftMessage(draftMessage);\r\n    }\r\n\r\n    selectionChangeListener = () => {\r\n        // console.log('[ed] selectionchange', document.activeElement);\r\n        if (document.activeElement === this.newMessageRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        this.loadDraft();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveDraft();\r\n\r\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\r\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        this.handleCancelRecord();\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n    };\r\n\r\n    onClientUpdateSendText = update => {\r\n        const { text } = update;\r\n\r\n        if (!text) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = text;\r\n        focusInput(element);\r\n    }\r\n\r\n    onClientUpdateInputShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (shook) {\r\n            this.setState({ shook: false }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({ shook: true });\r\n                }, 0);\r\n            });\r\n        } else {\r\n            this.setState({ shook: true });\r\n        }\r\n    };\r\n\r\n    onClientUpdateSendFiles = update => {\r\n        const { files } = update;\r\n        if (!files) return;\r\n\r\n        this.handleSendFiles(Array.from(files));\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, editMessageId } = this.state;\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n\r\n        if (!editMessageId) return;\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n        if (message_ids.indexOf(editMessageId) === -1) return;\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    onClientUpdateEditMessage = update => {\r\n        const { chatId, messageId } = update;\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        if (!messageId) {\r\n            this.restoreDraftAndSelection();\r\n        } else {\r\n            this.saveDraftAndSelection();\r\n        }\r\n\r\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\r\n        this.setState(\r\n            {\r\n                editMessageId: messageId,\r\n                openEditMedia\r\n            },\r\n            () => {\r\n                if (!this.state.openEditMedia) {\r\n                    this.setEditMessage();\r\n                    this.handleInput();\r\n                    setTimeout(() => {\r\n                        this.focusInput();\r\n                    }, 0);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    restoreDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { beforeEditText } = this;\r\n\r\n        if (beforeEditText) {\r\n            element.innerHTML = beforeEditText.innerHTML;\r\n\r\n            if (!beforeEditText.range) {\r\n                this.focusInput();\r\n                return;\r\n            }\r\n\r\n            const selection = document.getSelection();\r\n            selection.removeAllRanges();\r\n            selection.addRange(beforeEditText.range);\r\n\r\n            element.focus();\r\n        } else {\r\n            element.innerHTML = null;\r\n            this.focusInput();\r\n        }\r\n\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        this.beforeEditText = {\r\n            innerHTML: element.innerHTML,\r\n            range: this.range\r\n        };\r\n    }\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) return;\r\n\r\n        this.saveDraft();\r\n    };\r\n\r\n    onUpdateChatDraftMessage = update => {\r\n        const { chat_id } = update;\r\n        const { chatId, recordingTime } = this.state;\r\n\r\n        if (recordingTime) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.loadDraft();\r\n    };\r\n\r\n    onClientUpdateAnimationSend = update => {\r\n        const { animation: item } = update;\r\n        if (!item) return;\r\n\r\n        const { animation, thumbnail, width, height, duration } = item;\r\n        if (!animation) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageAnimation',\r\n            animation: {\r\n                '@type': 'inputFileId',\r\n                id: animation.id\r\n            },\r\n            width,\r\n            height,\r\n            duration\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n    };\r\n\r\n    onClientUpdateStickerSend = update => {\r\n        const { sticker: item } = update;\r\n        if (!item) return;\r\n\r\n        const { sticker, thumbnail, width, height } = item;\r\n        if (!sticker) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageSticker',\r\n            sticker: {\r\n                '@type': 'inputFileId',\r\n                id: sticker.id\r\n            },\r\n            width,\r\n            height\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateLocalStickersHint',\r\n            hint: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateReply = update => {\r\n        const { chatId: currentChatId, recordingTime } = this.state;\r\n        const { chatId, messageId } = update;\r\n\r\n        if (currentChatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ replyToMessageId: messageId });\r\n\r\n        if (messageId && !recordingTime) {\r\n            this.setInputFocus();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.state;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.saveDraft();\r\n        this.beforeEditText = null;\r\n        this.setState(\r\n            {\r\n                chatId: update.nextChatId,\r\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\r\n                editMessageId: 0,\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.loadDraft();\r\n            }\r\n        );\r\n\r\n        this.handleCancelRecord();\r\n    };\r\n\r\n    setDraft = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        const { chatSelectOptions } = AppStore;\r\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\r\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\r\n            return;\r\n        }\r\n\r\n        const formattedText = getChatDraft(chatId);\r\n        if (formattedText) {\r\n            this.setFormattedText(formattedText);\r\n            this.setState({\r\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\r\n            });\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    };\r\n\r\n    setEditMessage() {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, editMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { text, caption } = content;\r\n        if (!text && !caption) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    }\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    setInputFocus = () => {\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n\r\n        setTimeout(() => {\r\n            const element = this.newMessageRef.current;\r\n\r\n            focusInput(element);\r\n        }, 100);\r\n    };\r\n\r\n    setChatDraftMessage = chatDraftMessage => {\r\n        if (!chatDraftMessage) return;\r\n\r\n        const { chatId, draftMessage } = chatDraftMessage;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setChatDraftMessage',\r\n            chat_id: chatId,\r\n            draft_message: draftMessage\r\n        });\r\n    };\r\n\r\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { draft_message } = chat;\r\n        const { text, entities } = getEntities(innerHTML);\r\n        const draftMessage =\r\n            (text && text.length > 0) || entities.length > 0\r\n                ? {\r\n                      '@type': 'draftMessage',\r\n                      reply_to_message_id: replyToMessageId,\r\n                      input_message_text: {\r\n                          '@type': 'inputMessageText',\r\n                          text: {\r\n                              '@type': 'formattedText',\r\n                              text,\r\n                              entities\r\n                          },\r\n                          disable_web_page_preview: false,\r\n                          clear_draft: false\r\n                      }\r\n                  }\r\n                : null;\r\n\r\n        if (draftEquals(draft_message, draftMessage)) {\r\n            return null;\r\n        }\r\n\r\n        return { chatId, draftMessage };\r\n    };\r\n\r\n    handleSubmit = (startRecord = true) => {\r\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\r\n\r\n        if (recordingTime) {\r\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\r\n                return;\r\n            }\r\n\r\n            this.handleStopRecord();\r\n            return;\r\n        } else if (recordingReady) {\r\n            if (startRecord) this.handleRecord();\r\n            return;\r\n        }\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n        this.handleInput();\r\n\r\n        if (!innerHTML) return;\r\n        if (!innerHTML.trim()) return;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const formattedText = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n        const inputContent = {\r\n            '@type': 'inputMessageText',\r\n            text: formattedText,\r\n            disable_web_page_preview: false,\r\n            clear_draft: true\r\n        };\r\n\r\n        if (editMessageId) {\r\n            const editedMessage = MessageStore.get(chatId, editMessageId);\r\n            if (!editedMessage) return;\r\n\r\n            const { content } = editedMessage;\r\n            if (!content) return;\r\n\r\n            const { text, caption } = content;\r\n            if (text) {\r\n                this.editMessageText(inputContent, result => {});\r\n            } else if (caption) {\r\n                this.editMessageCaption(formattedText);\r\n            }\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            this.sendMessage(inputContent, false, result => {});\r\n        }\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPoll'\r\n        });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        if (!this.attachPhotoRef) return;\r\n\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    async getNewItem(file, sendAsFile) {\r\n        if (!file) return null;\r\n\r\n        const caption = this.newMessageRef.current.innerHTML;\r\n        if (caption) {\r\n            this.newMessageRef.current.innerHTML = null;\r\n            this.handleInput();\r\n        }\r\n\r\n        const media = sendAsFile\r\n            ? await getMediaPhotoFromFile(file)\r\n            : await getMediaDocumentFromFile(file);\r\n\r\n        return {\r\n            file,\r\n            media,\r\n            caption\r\n        }\r\n    };\r\n\r\n    handleAttachPhotoComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, true);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(async file => {\r\n                const [width, height] = await readImageSize(file);\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\r\n                    width,\r\n                    height\r\n                };\r\n\r\n                this.handleSendPhoto(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        if (!this.attachDocumentRef) return;\r\n\r\n        this.attachDocumentRef.current.click();\r\n    };\r\n\r\n    handleAttachDocumentComplete = async () => {\r\n        const { files } = this.attachDocumentRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, false);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(file => {\r\n                const content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\r\n                };\r\n\r\n                this.handleSendDocument(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachDocumentRef.current.value = '';\r\n    };\r\n\r\n    setTyping() {\r\n        const { chatId, editMessageId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        if (!innerText) return;\r\n        if (isMeChat(chatId)) return;\r\n        if (editMessageId) return;\r\n\r\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\r\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\r\n    }\r\n\r\n    setHints() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText || innerText.length > 11 || editMessageId) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const t0 = performance.now();\r\n        const regex = emojiRegex();\r\n        let match = regex.exec(innerText);\r\n        const t1 = performance.now();\r\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\r\n        if (!match || innerText !== match[0]) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const timestamp = Date.now();\r\n        TdLibController.send({\r\n            '@type': 'getStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateLocalStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateRemoteStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n            return true;\r\n        } else if (replyToMessageId) {\r\n            replyMessage(chatId, 0);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n        const { editMessageId, replyToMessageId } = this.state;\r\n\r\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\r\n        //\r\n        // setTimeout(() => {\r\n        //     const { innerText } = this.newMessageRef.current;\r\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\r\n        // }, 1000);\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            // ctrl+alt+0 fix\r\n            case 'Digit0': {\r\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\r\n                    if (editMessageId) return;\r\n                    if (replyToMessageId) return;\r\n\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\r\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\r\n                    // enter+cmd, enter+ctrl, enter+shift\r\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\r\n                        document.execCommand('insertLineBreak');\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                    // enter+cmd, enter+ctrl\r\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                        this.handleSubmit(false);\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                } else {\r\n                    // enter+cmd, enter+ctrl, enter+shift\r\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                        document.execCommand('insertLineBreak');\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                    // enter\r\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                        this.handleSubmit(false);\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // esc\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    if (!repeat && this.handleCancel()) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // arrow up\r\n            case 'ArrowUp': {\r\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const element = this.newMessageRef.current;\r\n                    if (element && !element.innerText) {\r\n                        const { editMessageId } = this.state;\r\n                        if (editMessageId) return;\r\n\r\n                        TdLibController.clientUpdate({\r\n                            '@type': 'clientUpdateTryEditMessage'\r\n                        });\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSendPhoto = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => {\r\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\r\n            if (cachedMessage != null) {\r\n                this.handleSendingMessage(cachedMessage, file);\r\n            }\r\n\r\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\r\n        });\r\n    };\r\n\r\n    handleSendPoll = poll => {\r\n        this.sendMessage(poll, true, () => {});\r\n    };\r\n\r\n    handleSendDocument = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\r\n    };\r\n\r\n    handleSendAudio = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\r\n    };\r\n\r\n    handleSendVoiceNote = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\r\n    };\r\n\r\n    async handleSendFiles(files) {\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        if (files.length === 1) {\r\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\r\n            if (!newItem) return;\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            this.setState({ files });\r\n        }\r\n    }\r\n\r\n    handlePaste = async event => {\r\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\r\n        if (!items) return;\r\n\r\n        const files = [];\r\n        Array.from(items).forEach(item => {\r\n            if (item.kind.indexOf('file') === 0) {\r\n                const file = item.getAsFile();\r\n                if (file) {\r\n                    files.push(file);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (files.length > 0) {\r\n            event.preventDefault();\r\n\r\n            this.handleSendFiles(files);\r\n            return;\r\n        }\r\n\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n            return;\r\n        }\r\n    };\r\n\r\n    handlePasteConfirm = () => {\r\n        const { files } = this.state;\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        files.forEach(file => {\r\n            const content = {\r\n                '@type': 'inputMessageDocument',\r\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\r\n            };\r\n\r\n            this.handleSendDocument(content, file);\r\n        });\r\n\r\n        this.handlePasteCancel();\r\n    };\r\n\r\n    handlePasteCancel = () => {\r\n        this.setState({ files: null });\r\n    };\r\n\r\n    handleUpdateDraftConfirm = () => {\r\n        const { newDraft } = this.state;\r\n        if (!newDraft) return;\r\n\r\n        this.loadDraft();\r\n        this.handleUpdateDraftCancel();\r\n    };\r\n\r\n    handleUpdateDraftCancel = () => {\r\n        this.setState({ newDraft: null });\r\n    };\r\n\r\n    handleSendingMessage = (message, blob) => {\r\n        if (!message) return;\r\n\r\n        const { sending_state, content, chat_id, id } = message;\r\n        if (!sending_state) return;\r\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\r\n        if (content['@type'] !== 'messagePhoto') return;\r\n\r\n        const { photo } = content;\r\n        if (!photo) return;\r\n\r\n        const size = getSize(photo.sizes, PHOTO_SIZE);\r\n        if (!size) return;\r\n\r\n        const { photo: file } = size;\r\n        if (!file) return;\r\n\r\n        FileStore.setBlob(file.id, blob);\r\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\r\n    };\r\n\r\n    async editMessageMedia(content) {\r\n        const { chatId, editMessageId } = this.state;\r\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        return TdLibController.send({\r\n            '@type': 'editMessageMedia',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            input_message_content: content\r\n        });\r\n    }\r\n\r\n    editMessageCaption(caption) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!caption) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'editMessageCaption',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            caption\r\n        });\r\n    }\r\n\r\n    async editMessageText(content, callback) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            const result = await TdLibController.send({\r\n                '@type': 'editMessageText',\r\n                chat_id: chatId,\r\n                message_id: editMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            callback(result);\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    sendMessage = async (content, clearDraft, callback) => {\r\n        const { chatId, replyToMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n            const result = await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: replyToMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            this.setState({ replyToMessageId: 0 }, () => {\r\n                if (clearDraft) {\r\n                    this.saveDraft();\r\n                }\r\n            });\r\n            //MessageStore.set(result);\r\n\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: chatId,\r\n                message_ids: [result.id]\r\n            });\r\n\r\n            if (replyToMessageId) {\r\n                replyMessage(chatId, 0);\r\n            }\r\n\r\n            callback(result);\r\n        } catch (error) {\r\n            alert('sendMessage error ' + JSON.stringify(error));\r\n        }\r\n    };\r\n\r\n    handleEmojiSelect = emoji => {\r\n        if (!emoji) return;\r\n\r\n        this.restoreSelection();\r\n        document.execCommand('insertText', false, emoji.native);\r\n        this.handleInput();\r\n    };\r\n\r\n    handleInput = async event => {\r\n        this.setTyping();\r\n        this.setHints();\r\n        this.setRecordingReadyState();\r\n\r\n        // const { text, position } = this.getTextAndCaretPosition();\r\n        // this.searchUsernameOrHashtag(text, position, [], false);\r\n    };\r\n\r\n    getTextAndCaretPosition = () => {\r\n        const { current: input } = this.newMessageRef;\r\n        if (!input) return;\r\n\r\n        input.focus()\r\n        let _range = document.getSelection().getRangeAt(0);\r\n        let range = _range.cloneRange();\r\n        range.selectNodeContents(input);\r\n        range.setEnd(_range.endContainer, _range.endOffset);\r\n\r\n        return { text: input.innerText, position: range.toString().length };\r\n    };\r\n\r\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\r\n        const { chatId } = this.state;\r\n\r\n        const searchResultUsernames = [];\r\n\r\n        if (this.cancelDelayRunnable) {\r\n            clearTimeout(this.cancelDelayRunnable);\r\n            this.cancelDelayRunnable = null;\r\n        }\r\n\r\n        const info = getChatFullInfo(chatId);\r\n        const needUsernames = true;\r\n        const needBotContext = true;\r\n\r\n        const now = Date.now();\r\n        this.now = now;\r\n\r\n        let searchPosition = position;\r\n        if (text.length > 0) {\r\n            searchPosition--;\r\n        }\r\n\r\n        this.lastText = text;\r\n        this.lastUsernameOnly = usernameOnly;\r\n\r\n        let foundType = -1;\r\n        let result = '';\r\n        let resultStartPosition;\r\n        let resultLength;\r\n\r\n        let dogPosition = -1;\r\n        if (usernameOnly) {\r\n            result += text.substring(1);\r\n            resultStartPosition = 0;\r\n            resultLength = result.length;\r\n            foundType = 0;\r\n        } else {\r\n            for (let i = searchPosition; i >= 0; i--) {\r\n                if (i >= text.length){\r\n                    continue;\r\n                }\r\n                let ch = text[i];\r\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\r\n                    if (ch === '@') {\r\n                        if (needUsernames || needBotContext && i === 0){\r\n                            if (!info && i !== 0) {\r\n                                this.lastText = text;\r\n                                this.lastPosition = position;\r\n                                this.messages = messages;\r\n                                this.closeHints(now);\r\n                                return;\r\n                            }\r\n                            dogPosition = i;\r\n                            foundType = 0;\r\n                            resultStartPosition = i;\r\n                            resultLength = result.length + 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result = ch + result;\r\n            }\r\n        }\r\n\r\n        if (foundType === -1) {\r\n            this.closeHints(now);\r\n            return;\r\n        }\r\n\r\n        if (foundType === 0) {\r\n            const users = [];\r\n            const usersMap = new Map();\r\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\r\n                const { sender } = messages[i];\r\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\r\n                    usersMap.set(sender.user_id, sender.user_id);\r\n                    users.push(sender.user_id);\r\n                }\r\n            }\r\n\r\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\r\n            const hasSpace = usernameString.indexOf(' ') >= 0;\r\n            const newResult = [];\r\n            const newResultsMap = new Map();\r\n            const newMap = new Map();\r\n\r\n            const inlineBots = [];\r\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\r\n\r\n            }\r\n\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && info && info.members) {\r\n                for (let i = -1; i < info.members.length; i++) {\r\n                    let username;\r\n                    let firstName;\r\n                    let lastName;\r\n                    let object;\r\n                    let id;\r\n                    if (i === -1) {\r\n                        if (!usernameString.length) {\r\n                            newResult.push(chat);\r\n                            continue;\r\n                        }\r\n                        firstName = chat.title;\r\n                        lastName = '';\r\n                        username = chat.username;\r\n                        object = chat;\r\n                        id = -chat.id;\r\n                    } else {\r\n                        const { user_id } = info.members[i];\r\n                        const user = UserStore.get(user_id);\r\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\r\n                            continue;\r\n                        }\r\n                        if (!usernameString.length) {\r\n                            if (!isDeletedUser(user_id)) {\r\n                                newResult.push(user);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        firstName = user.first_name;\r\n                        lastName = user.last_name;\r\n                        username = user.username;\r\n                        object = user;\r\n                        id = user.id;\r\n                    }\r\n\r\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\r\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\r\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\r\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\r\n                        newResult.push(object);\r\n                        newMap.set(id, object);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (isSupergroup(chatId) && usernameString.length > 0) {\r\n                if (newResult.length < 5) {\r\n                    this.cancelDelayRunnable = setTimeout(() => {\r\n                        this.cancelDelayRunnable = null;\r\n                        this.showUsersResult(now, newResult, newMap, true);\r\n                    }, 0);\r\n                } else {\r\n                    this.showUsersResult(now, newResult, newMap, true);\r\n                }\r\n\r\n                setTimeout(async () => {\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'searchChatMembers',\r\n                        chat_id: chatId,\r\n                        query: usernameString,\r\n                        limit: 20,\r\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\r\n                    });\r\n\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const { members } = result;\r\n                    if (members.length > 0) {\r\n                        for (let i = 0; i < members.length; i++) {\r\n                            const { user_id } = members[i];\r\n                            if (isMeUser(user_id)) {\r\n                                continue;\r\n                            }\r\n                            const user = UserStore.get(user_id);\r\n                            if (!user) {\r\n                                continue;\r\n                            }\r\n\r\n                            searchResultUsernames.push(user);\r\n                        }\r\n\r\n                        this.notifyDataSetChanged(now, searchResultUsernames);\r\n                    }\r\n\r\n\r\n                }, 200);\r\n            } else {\r\n                this.showUsersResult(now, newResult, newMap, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    notifyDataSetChanged(id, searchResultUsernames) {\r\n        console.log('[search] global', searchResultUsernames);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsGlobal',\r\n            id,\r\n            global: searchResultUsernames\r\n        });\r\n    }\r\n\r\n    showUsersResult(id, newResult, newMap, notify) {\r\n        console.log('[search] local', newResult);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsLocal',\r\n            id,\r\n            local: newResult\r\n        });\r\n    }\r\n\r\n    closeHints(id) {\r\n        console.log('[search] close');\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsClose',\r\n            id\r\n        });\r\n    }\r\n\r\n    openHints() {\r\n\r\n    }\r\n\r\n    setRecordingReadyState() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText && !editMessageId) {\r\n            this.setState({\r\n                recordingReady: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                recordingReady: false\r\n            });\r\n        }\r\n    }\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            this.focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.newMessageRef.current.focus();\r\n    }\r\n\r\n    focusInput = () => {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n        if (!element.childNodes.length) {\r\n            element.focus();\r\n            return;\r\n        }\r\n\r\n        const lastTextNode = findLastTextNode(element);\r\n        if (!lastTextNode) {\r\n            return;\r\n        }\r\n\r\n        const range = document.createRange();\r\n        range.setStart(lastTextNode, lastTextNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        element.focus();\r\n    };\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleCancelEditMedia = () => {\r\n        this.closeEditMediaDialog();\r\n    };\r\n\r\n    handleEditMedia = async (caption, content) => {\r\n        if (content) {\r\n            const message = await this.editMessageMedia(content);\r\n            if (message) {\r\n                const { content: editContent } = message;\r\n                switch (editContent['@type']) {\r\n                    case 'messagePhoto': {\r\n                        const { photo: sendPhoto } = content;\r\n                        if (!sendPhoto) break;\r\n\r\n                        const { data: blob } = sendPhoto;\r\n                        if (!blob) break;\r\n\r\n                        const { photo } = editContent;\r\n                        if (!photo) break;\r\n\r\n                        const iSize = photo.sizes.find(x => x.type === 'i');\r\n                        if (!iSize) break;\r\n\r\n                        const { photo: file } = iSize;\r\n                        if (file) {\r\n                            FileStore.setBlob(file.id, blob);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.editMessageCaption(caption);\r\n    };\r\n\r\n    handleSendMedia = (content, file) => {\r\n        this.closeEditMediaDialog(false);\r\n\r\n        switch (content['@type']) {\r\n            case 'inputMessageAudio': {\r\n                this.handleSendAudio(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessagePhoto': {\r\n                this.handleSendPhoto(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessageDocument': {\r\n                this.handleSendDocument(content, file);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    closeEditMediaDialog(cancel = true) {\r\n        const { newItem } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                openEditMedia: false,\r\n                newItem: null\r\n            },\r\n            () => {\r\n                if (cancel && newItem && newItem.caption) {\r\n                    this.newMessageRef.current.innerHTML = newItem.caption;\r\n                    this.focusInput();\r\n                    this.handleInput();\r\n                } else {\r\n                    this.restoreSelection();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleHeaderClick = () => {\r\n        setTimeout(() => this.restoreSelection(), 0);\r\n    };\r\n\r\n    handleStopRecord = (cancelled = false) => {\r\n        if (!this.recorder) return;\r\n\r\n        this.recorder.cancelled = cancelled;\r\n        this.recorder.stop();\r\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\r\n    }\r\n\r\n    handleCancelRecord = () => {\r\n        this.handleStopRecord(true);\r\n    }\r\n\r\n    handleRecord = async () => {\r\n        if (this.recorder) return;\r\n\r\n        let stream = null;\r\n        try{\r\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            if (this.recorder) return;\r\n        } catch { }\r\n\r\n        if (!stream) {\r\n            this.setState({\r\n                recordPermissionDenied: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        const constraints = {\r\n            channelCount: 1,\r\n            sampleRate: 48000,\r\n        };\r\n\r\n        const track = stream.getAudioTracks()[0];\r\n        track.applyConstraints(constraints)\r\n\r\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\r\n        const workerOptions = {\r\n            encoderWorkerFactory: function () {\r\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\r\n            },\r\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\r\n        };\r\n\r\n        const recorder = new MediaRecorder(stream, options, workerOptions);\r\n\r\n        const chunks = [];\r\n\r\n        recorder.ondataavailable = e => {\r\n            chunks.push(e.data);\r\n        };\r\n        recorder.onstart = () => {\r\n\r\n        };\r\n        recorder.onstop = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            const { cancelled } = this.recorder;\r\n            this.recorder = null;\r\n\r\n            this.loadDraft();\r\n            if (cancelled) {\r\n                return;\r\n            }\r\n\r\n            // console.log('stop');\r\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\r\n            const audioURL = window.URL.createObjectURL(blob);\r\n\r\n            const audio = new Audio(audioURL);\r\n            audio.oncanplay = () => {\r\n                const content = {\r\n                    '@type': 'inputMessageVoiceNote',\r\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\r\n                    duration: Math.trunc(audio.duration),\r\n                    waveform: '',\r\n                    caption: null\r\n                };\r\n\r\n                this.handleSendVoiceNote(content, blob);\r\n            };\r\n        };\r\n        recorder.onerror = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            this.loadDraft();\r\n            // console.log('error', e);\r\n        };\r\n\r\n        this.recorder = recorder;\r\n        this.recorder.start(50);\r\n        this.startTime = new Date();\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\r\n        this.setState({ recordingTime: new Date() });\r\n    }\r\n\r\n    handleClosePermission = () => {\r\n        this.setState({\r\n            recordPermissionDenied: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            editMessageId,\r\n            newItem,\r\n            replyToMessageId,\r\n            files,\r\n            newDraft,\r\n            defaultText,\r\n            defaultUrl,\r\n            openEditUrl,\r\n            openEditMedia,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\r\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\r\n        if (editMessageId) {\r\n            icon = <DoneIcon/>;\r\n        }\r\n\r\n        return (\r\n            <div className='inputbox-background'>\r\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\r\n                    <div className={classNames('inputbox-bubble')}>\r\n                        <InputBoxHeader\r\n                            chatId={chatId}\r\n                            messageId={replyToMessageId}\r\n                            editMessageId={openEditMedia ? 0 : editMessageId}\r\n                            onClick={this.handleHeaderClick}\r\n                        />\r\n                        <div className='inputbox-wrapper'>\r\n                            <div className='inputbox-left-column'>\r\n                                <React.Suspense\r\n                                    fallback={\r\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\r\n                                            <InsertEmoticonIcon />\r\n                                        </IconButton>\r\n                                    }>\r\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\r\n                                </React.Suspense>\r\n                            </div>\r\n                            <div className='inputbox-middle-column'>\r\n                                <div\r\n                                    id='inputbox-message'\r\n                                    className='scrollbars-hidden'\r\n                                    ref={this.newMessageRef}\r\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onKeyDown={this.handleKeyDown}\r\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\r\n                                    onPaste={this.handlePaste}\r\n                                    onInput={this.handleInput}\r\n                                />\r\n                            </div>\r\n                            <div className='inputbox-right-column'>\r\n                                <RecordTimer/>\r\n                                <input\r\n                                    ref={this.attachDocumentRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    onChange={this.handleAttachDocumentComplete}\r\n                                />\r\n                                <input\r\n                                    ref={this.attachPhotoRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    accept='image/*'\r\n                                    onChange={this.handleAttachPhotoComplete}\r\n                                />\r\n                                {!Boolean(editMessageId) && !recordingTime && (\r\n                                    <AttachButton\r\n                                        chatId={chatId}\r\n                                        onAttachPhoto={this.handleAttachPhoto}\r\n                                        onAttachDocument={this.handleAttachDocument}\r\n                                        onAttachPoll={this.handleAttachPoll}\r\n                                    />\r\n                                )}\r\n\r\n                                {/*<IconButton>*/}\r\n                                {/*<KeyboardVoiceIcon />*/}\r\n                                {/*</IconButton>*/}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { recordingTime && (\r\n                        <div className='inputbox-cancel-record-button-background'>\r\n                            <IconButton\r\n                                className='inputbox-cancel-record-button'\r\n                                aria-label='Delete'\r\n                                size='small'\r\n                                color='secondary'\r\n                                onClick={this.handleCancelRecord}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                    <div className='inputbox-send-button-background'>\r\n                        <IconButton\r\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\r\n                            aria-label='Send'\r\n                            size='small'\r\n                            onClick={this.handleSubmit}>\r\n                            {icon}\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\r\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\r\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n                <EditMediaDialog\r\n                    open={openEditMedia}\r\n                    chatId={chatId}\r\n                    messageId={editMessageId}\r\n                    newItem={newItem}\r\n                    onEdit={this.handleEditMedia}\r\n                    onSend={this.handleSendMedia}\r\n                    onCancel={this.handleCancelEditMedia}\r\n                />\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={recordPermissionDenied}\r\n                    onClose={this.handleClosePermission}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClosePermission} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(InputBox);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport './FooterCommand.css';\r\n\r\nclass FooterCommand extends React.Component {\r\n    render() {\r\n        const { command, onCommand } = this.props;\r\n\r\n        return (\r\n            <div className='footer-command'>\r\n                <div className='inputbox'>\r\n                    <div className='inputbox-bubble'>\r\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\r\n                            {command}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterCommand;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationsCommand extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\r\n\r\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputBox from './InputBox';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsCommand from './NotificationsCommand';\r\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\r\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const { is_blocked, last_message } = chat;\r\n\r\n                return {\r\n                    prevChatId: chatId,\r\n\r\n                    isBlocked: is_blocked,\r\n                    hasLastMessage: Boolean(last_message)\r\n                };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t, chatId, options } = this.props;\r\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.options !== options) {\r\n            return true;\r\n        }\r\n\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasLastMessage !== hasLastMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isBlocked !== isBlocked) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n\r\n        this.setState({\r\n            clearHistory: update.inProgress\r\n        });\r\n    };\r\n\r\n    onUpdateChatLastMessage = update => {\r\n        const { chat_id, last_message } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            hasLastMessage: Boolean(last_message)\r\n        });\r\n    };\r\n\r\n    onUpdateChatIsBlocked = update => {\r\n        const { chat_id, is_blocked } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            isBlocked: is_blocked\r\n        });\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleJoin = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'joinChat',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleDeleteAndExit = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: true\r\n        });\r\n\r\n        // TdLibController\r\n        //     .send({\r\n        //         '@type': 'leaveChat',\r\n        //         chat_id: this.props.chatId\r\n        //     });\r\n    };\r\n\r\n    handleUnblock = () => {\r\n        const { chatId } = this.props;\r\n\r\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\r\n    };\r\n\r\n    handleStartBot = async () => {\r\n        const { chatId, options } = this.props;\r\n\r\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n        if (options && options.botStartMessage) {\r\n            const { botUserId, parameter } = options.botStartMessage;\r\n\r\n            await sendBotStartMessage(chatId, botUserId, parameter);\r\n        } else {\r\n            await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: 0,\r\n                input_message_content: {\r\n                    '@type': 'inputMessageText',\r\n                    text: {\r\n                        '@type': 'formattedText',\r\n                        text: '/start',\r\n                        entities: []\r\n                    },\r\n                    disable_web_page_preview: true,\r\n                    clear_draft: true\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, options, t } = this.props;\r\n        const { hasLastMessage, clearHistory } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { type, is_blocked } = chat;\r\n        if (!type) return null;\r\n\r\n        if (is_blocked) {\r\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\r\n        }\r\n\r\n        if (options && options.botStartMessage) {\r\n            const isBot = isBotChat(chatId);\r\n            if (isBot) {\r\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n            }\r\n        }\r\n\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                if (!basicGroup) return null;\r\n\r\n                const { status } = basicGroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return null;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret':\r\n            case 'chatTypePrivate': {\r\n                const isBot = isBotChat(chatId);\r\n                if (isBot && (!hasLastMessage || clearHistory)) {\r\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n                }\r\n\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                if (!supergroup) return null;\r\n\r\n                const { is_channel, status } = supergroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return (\r\n                            <FooterCommand\r\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                onCommand={this.handleJoin}\r\n                            />\r\n                        );\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (is_channel) {\r\n                            return <NotificationsCommand chatId={chatId} />;\r\n                        } else {\r\n                            return <InputBox />;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return (\r\n                                <FooterCommand\r\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                    onCommand={this.handleJoin}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Footer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport const MAX_SPEED = 8.2;\r\nexport const MIN_SPEED = 0.8;\r\nexport const AMPLITUDE_SPEED = 0.33;\r\n\r\nexport const SCALE_BIG = 0.807;\r\nexport const SCALE_SMALL = 0.704;\r\n\r\nexport const SCALE_BIG_MIN = 0.878;\r\nexport const SCALE_SMALL_MIN = 0.926;\r\n\r\nexport const FORM_BIG_MAX = 0.6;\r\nexport const FORM_SMALL_MAX = 0.6;\r\n\r\nexport const GLOBAL_SCALE = 1;\r\n\r\nexport const FORM_BUTTON_MAX = 0;\r\n\r\nexport const GRADIENT_SPEED_MIN = 0.5;\r\nexport const GRADIENT_SPEED_MAX = 0.01;\r\n\r\nexport const LIGHT_GRADIENT_SIZE = 0.5;\r\n\r\nfunction rotateZ(x, y, angle, originX, originY) {\r\n    x -= originX;\r\n    y -= originY;\r\n\r\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\r\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\r\n\r\n    x = X + originX;\r\n    y = Y + originY;\r\n\r\n    return [x, y];\r\n}\r\n\r\nexport default class BlobDrawable {\r\n    constructor(n) {\r\n        this.maxRadius = 10;\r\n        this.minRadius = 0;\r\n\r\n        this.cubicBezierK = 1.0;\r\n        this.N = n;\r\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\r\n        this.radius = new Array(n);\r\n        this.angle = new Array(n);\r\n\r\n        this.radiusNext = new Array(n);\r\n        this.angleNext = new Array(n);\r\n        this.progress = new Array(n);\r\n        this.speed = new Array(n);\r\n\r\n        this.pointStart = new Array(4);\r\n        this.pointEnd = new Array(4);\r\n\r\n        for (let i = 0; i < this.N; i++) {\r\n            this.generateBlob(this.radius, this.angle, i);\r\n            this.generateBlob(this.radiusNext, this.angleNext, i);\r\n            this.progress[i] = 0;\r\n        }\r\n    }\r\n\r\n    generateBlob(radius, angle, i) {\r\n        const { maxRadius, minRadius, speed, N } = this;\r\n\r\n        const angleDif = 2 * Math.PI / N * 0.05;\r\n        const radDif = maxRadius - minRadius;\r\n        radius[i] = minRadius + Math.random() * radDif;\r\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\r\n        speed[i] = 0.017 + 0.003 * Math.random();\r\n    }\r\n\r\n    update(amplitude, speedScale) {\r\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\r\n        for (let i = 0; i < N; i++) {\r\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\r\n            if (progress[i] >= 1.0) {\r\n                progress[i] = 0.0;\r\n                radius[i] = radiusNext[i];\r\n                angle[i] = angleNext[i];\r\n                this.generateBlob(radiusNext, angleNext, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(cX, cY, canvas, paint) {\r\n        // console.log('[bd] draw', cX, cY, canvas, paint);\r\n        if (canvas.getContext) {\r\n            const ctx = canvas.getContext('2d');\r\n            // ctx.globalAlpha = 0.5;\r\n            // ctx.lineWidth = 1;\r\n\r\n            ctx.beginPath();\r\n\r\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\r\n\r\n            for (let i = 0; i < N; i++) {\r\n                const progress = this.progress[i];\r\n                const nextIndex = i + 1 < N ? i + 1 : 0;\r\n                const progressNext = this.progress[nextIndex];\r\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\r\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\r\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\r\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\r\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\r\n\r\n                pointStart[0] = cX;\r\n                pointStart[1] = cY - r1;\r\n                pointStart[2] = cX + l;\r\n                pointStart[3] = cY - r1;\r\n\r\n                this.mapPoints(pointStart, cX, cY, angle1);\r\n\r\n                pointEnd[0] = cX;\r\n                pointEnd[1] = cY - r2;\r\n                pointEnd[2] = cX - l;\r\n                pointEnd[3] = cY - r2;\r\n\r\n                this.mapPoints(pointEnd, cX, cY, angle2);\r\n\r\n                if (i === 0) {\r\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\r\n                    ctx.moveTo(pointStart[0], pointStart[1]);\r\n                }\r\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\r\n                ctx.bezierCurveTo(\r\n                    pointStart[2], pointStart[3],\r\n                    pointEnd[2], pointEnd[3],\r\n                    pointEnd[0], pointEnd[1]\r\n                );\r\n            }\r\n\r\n            // ctx.scale(1.0, 1.0);\r\n            // this.fillStyleFunc(ctx);\r\n            paint(ctx);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        }\r\n    }\r\n\r\n    mapPoints(points, cX, cY, angle) {\r\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\r\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\r\n\r\n        points[0] = result1[0];\r\n        points[1] = result1[1];\r\n        points[2] = result2[0];\r\n        points[3] = result2[1];\r\n    }\r\n\r\n    generateInitBlob() {\r\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\r\n\r\n        for (let i = 0; i < N; i++) {\r\n            this.generateBlob(radius, angle, i);\r\n            this.generateBlob(radiusNext, angleNext, i);\r\n            progress[i] = 0;\r\n        }\r\n    }\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// const MIN_SPEED = 0.8;\r\n// const MAX_SPEED = 8.2;\r\n\r\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\r\n\r\nexport default class LineBlobDrawable {\r\n    constructor(n) {\r\n        this.maxRadius = 10;\r\n        this.minRadius = 0;\r\n\r\n        this.N = n;\r\n        this.radius = new Array(n + 1);\r\n\r\n        this.radiusNext = new Array(n + 1);\r\n        this.progress = new Array(n + 1);\r\n        this.speed = new Array(n + 1);\r\n\r\n        for (let i = 0; i <= n; i++) {\r\n            this.generateBlob(this.radius, i);\r\n            this.generateBlob(this.radiusNext, i);\r\n            this.progress[i] = 0;\r\n        }\r\n    }\r\n\r\n    generateBlob(radius, i) {\r\n        const { maxRadius, minRadius, speed } = this;\r\n\r\n        const radDif = maxRadius - minRadius;\r\n        radius[i] = minRadius + Math.random() * radDif;\r\n        speed[i] = 0.017 + 0.003 * Math.random();\r\n    }\r\n\r\n    generateNextBlob() {\r\n        const { radius, radiusNext, progress, N } = this;\r\n        for (let i = 0; i < N; i++) {\r\n            this.generateBlob(radius, i);\r\n            this.generateBlob(radiusNext, i);\r\n            progress[i] = 0.0;\r\n        }\r\n    }\r\n\r\n    update(amplitude, speedScale) {\r\n        const { N, progress, speed, radius, radiusNext } = this;\r\n        for (let i = 0; i <= N; i++) {\r\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\r\n            if (progress[i] >= 1.0) {\r\n                progress[i] = 0.0;\r\n                radius[i] = radiusNext[i];\r\n                this.generateBlob(radiusNext, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\r\n        if (canvas.getContext) {\r\n            const ctx = canvas.getContext('2d');\r\n            // ctx.globalAlpha = 0.5;\r\n            // ctx.lineWidth = 1;\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(right, bottom);\r\n            ctx.lineTo(left, bottom);\r\n\r\n            const { radius, radiusNext, N } = this;\r\n            for (let i = 0; i <= N; i++) {\r\n                if (i === 0) {\r\n                    const progress = this.progress[i];\r\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\r\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    ctx.lineTo(left, y);\r\n                } else {\r\n                    const progress = this.progress[i - 1];\r\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\r\n                    const progressNext = this.progress[i];\r\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\r\n                    const x1 = (right - left) / N * (i - 1);\r\n                    const x2 = (right - left) / N * i;\r\n                    const cx = x1 + (x2 - x1) / 2;\r\n\r\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    ctx.bezierCurveTo(\r\n                        cx, y1,\r\n                        cx, y2,\r\n                        x2, y2\r\n                    );\r\n                    if (i === N) {\r\n                        ctx.lineTo(right, bottom);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // ctx.scale(1.0, 1.0);\r\n            paint(ctx);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        }\r\n    }\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LineBlobDrawable from './LineBlobDrawable';\r\n\r\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\r\nexport const MUTE_BUTTON_STATE_MUTE = 1;\r\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\r\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\r\n\r\nexport class WeavingState {\r\n    constructor(stateId) {\r\n        this.stateId = stateId;\r\n        this.shader = (ctx, left, top, right, bottom) => { };\r\n        this.createGradient(stateId);\r\n    }\r\n\r\n    createGradient(stateId) {\r\n        this.shader = (ctx, left, top, right, bottom) => {\r\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\r\n        };\r\n    }\r\n\r\n    // Android colors\r\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\r\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\r\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            gradient.addColorStop(0, '#57A4FE');\r\n            gradient.addColorStop(.6, '#766EE9');\r\n            gradient.addColorStop(1, '#F05459');\r\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\r\n            gradient.addColorStop(0, '#00B1C0');\r\n            gradient.addColorStop(1, '#52CE5D');\r\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\r\n            gradient.addColorStop(0, '#2BCEFF');\r\n            gradient.addColorStop(1, '#0976E3');\r\n        } else {\r\n            gradient.addColorStop(0, '#8599aa');\r\n            gradient.addColorStop(1, '#8599aa');\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    update(height, width, dt, amplitude) {\r\n        // TODO: move gradient here\r\n    }\r\n}\r\n\r\nclass TopBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focused = true;\r\n        this.resizing = false;\r\n        this.lastUpdateTime = new Date();\r\n        this.amplitude = 0.0;\r\n        this.amplitude2 = 0.0;\r\n\r\n        this.states = [\r\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\r\n        ];\r\n        this.prevState = null;\r\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\r\n        this.progressToState = 1.0;\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 20 * this.scale;\r\n        this.right = 1260 * this.scale;\r\n        this.bottom = 63 * this.scale;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        window.addEventListener('blur', this.handleBlur);\r\n        window.addEventListener('focus', this.handleFocus);\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n\r\n        const topBar = document.getElementById('top-bar');\r\n        this.right = topBar.offsetWidth * this.scale;\r\n        this.forceUpdate();\r\n\r\n        this.canvas = document.getElementById('canvas');\r\n        this.lbd = new LineBlobDrawable(3);\r\n        this.lbd1 = new LineBlobDrawable(7);\r\n        this.lbd2 = new LineBlobDrawable(8);\r\n        this.setAmplitude(this.amplitude);\r\n\r\n        this.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        window.removeEventListener('blur', this.handleBlur);\r\n        window.removeEventListener('focus', this.handleFocus);\r\n        window.removeEventListener('resize', this.handleResize);\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n    }\r\n\r\n    handleDevicePixelRatioChanged = e => {\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 20 * this.scale;\r\n        this.bottom = 63 * this.scale;\r\n\r\n        const topBar = document.getElementById('top-bar');\r\n        if (!topBar) return;\r\n\r\n        this.right = topBar.offsetWidth * this.scale;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleResize = () => {\r\n        if (this.resizeHandler) {\r\n            clearTimeout(this.resizeHandler);\r\n            this.resizeHandler = null;\r\n        }\r\n\r\n        this.resizing = true;\r\n        this.resizeCanvas();\r\n        this.resizeHandler = setTimeout(() => {\r\n            this.resizing = false;\r\n            this.invokeDraw();\r\n        }, 250);\r\n    }\r\n\r\n    resizeCanvas() {\r\n        const topBar = document.getElementById('top-bar');\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.right = topBar.offsetWidth * this.scale;\r\n\r\n        this.forceUpdate();\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.focused = true;\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.focused = false;\r\n    }\r\n\r\n    invokeDraw = () => {\r\n        if (this.raf) return;\r\n\r\n        this.draw();\r\n    }\r\n\r\n    draw = (force = false) => {\r\n        this.raf = null;\r\n        if (!this.mounted) {\r\n            return;\r\n        }\r\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\r\n        if (!focused && !resizing && this.progressToState >= 1.0) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\r\n\r\n        const newTime = new Date();\r\n        let dt = (newTime - this.lastUpdateTime);\r\n        if (dt > 20) {\r\n            dt = 17;\r\n        }\r\n\r\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\r\n        if (this.animateToAmplitude !== this.amplitude) {\r\n            this.amplitude += this.animateAmplitudeDiff * dt;\r\n            if (this.animateAmplitudeDiff > 0) {\r\n                if (this.amplitude > this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude < this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.animateToAmplitude !== this.amplitude2) {\r\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\r\n            if (this.animateAmplitudeDiff2 > 0) {\r\n                if (this.amplitude2 > this.animateToAmplitude) {\r\n                    this.amplitude2 = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude2 < this.animateToAmplitude) {\r\n                    this.amplitude2 = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousState) {\r\n            this.progressToState += dt / 250;\r\n            if (this.progressToState > 1) {\r\n                this.progressToState = 1;\r\n                this.previousState = null;\r\n            }\r\n        }\r\n\r\n        const top1 = 6 * this.amplitude2 * scale;\r\n        const top2 = 6 * this.amplitude2 * scale;\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        lbd.minRadius = 0;\r\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\r\n        lbd1.minRadius = 0;\r\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\r\n        lbd2.minRadius = 0;\r\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\r\n\r\n        lbd.update(this.amplitude, 0.3);\r\n        lbd1.update(this.amplitude, 0.7);\r\n        lbd2.update(this.amplitude, 0.7);\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            if (i === 0 && !previousState) {\r\n                continue;\r\n            }\r\n\r\n            let alpha = 1;\r\n            let state = null;\r\n            if (i === 0) {\r\n                alpha = 1 - this.progressToState;\r\n                state = previousState;\r\n                // previousState.setToPaint(paint);\r\n            } else {\r\n                alpha = previousState ? this.progressToState : 1;\r\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\r\n                state = currentState;\r\n                // currentState.setToPaint(paint);\r\n            }\r\n\r\n            const paint1 = ctx => {\r\n                ctx.globalAlpha = 0.3 * alpha;\r\n                state.shader(ctx, left, top, right, bottom);\r\n            };\r\n            const paint = ctx => {\r\n                ctx.globalAlpha = i === 0? 1 : alpha;\r\n                state.shader(ctx, left, top, right, bottom);\r\n            };\r\n\r\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\r\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\r\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\r\n        }\r\n\r\n        if (!force) {\r\n            this.raf = requestAnimationFrame(() => this.draw());\r\n        }\r\n    };\r\n\r\n    setCurrentState = (stateId, animated) => {\r\n        const { currentState, states } = this;\r\n\r\n        if (currentState && currentState.id === stateId) {\r\n            return;\r\n        }\r\n\r\n        this.previousState = animated ? currentState : null;\r\n        this.currentState = states[stateId];\r\n        this.progressToState = this.previousState ? 0.0 : 1.0;\r\n    };\r\n\r\n    setAmplitude(value) {\r\n        this.animateToAmplitude = value;\r\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\r\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\r\n    }\r\n\r\n    render() {\r\n        const { left, right, top, bottom, scale } = this;\r\n\r\n        return(\r\n            <div id='top-bar' className='top-bar'>\r\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTopBar.propTypes = {};\r\n\r\nexport default TopBar;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport { openGroupCallPanel } from '../../Actions/Call';\r\nimport { showSnackbar } from '../../Actions/Client';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallTopPanel.css';\r\n\r\nclass GroupCallTopPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.topBarRef = React.createRef();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected,\r\n            animated: CallStore.animated\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { call, status, connected, animated } = this.state;\r\n\r\n        if (nextState.call !== call) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.status !== status) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.connected !== connected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.animated !== animated) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.switchButtonState(false);\r\n\r\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    switchButtonState(animated = true) {\r\n        const { connected, status } = this.state;\r\n\r\n        let stateId = MUTE_BUTTON_STATE_MUTE;\r\n        if (!connected) {\r\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\r\n        } else {\r\n            if (status === 'forceMuted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\r\n            } else if (status === 'unmuted') {\r\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\r\n            } else if (status === 'muted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTE;\r\n            }\r\n        }\r\n\r\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\r\n    }\r\n\r\n    onClientUpdateGroupCallAmplitudeChange = update => {\r\n        const { amplitudes, type } = update;\r\n        if (!amplitudes.length) return;\r\n\r\n        let max = 0;\r\n        for (let i = 0; i < amplitudes.length; i++) {\r\n            const { type, value } = amplitudes[i];\r\n            max = value > max ? value : max;\r\n        }\r\n\r\n        if (type !== 'input') {\r\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\r\n        }\r\n    };\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id } = participant;\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status\r\n        }, () => {\r\n            this.switchButtonState(true);\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.saveMessagesScrollPosition();\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.restoreMessagesScrollPosition(Boolean(call));\r\n            this.switchButtonState(true);\r\n        });\r\n    };\r\n\r\n    saveMessagesScrollPosition() {\r\n        const elements = document.getElementsByClassName('messages-list-wrapper');\r\n        if (!elements.length) return;\r\n\r\n        [...elements].forEach(x => {\r\n            const list = x;\r\n            if (!list) return;\r\n\r\n            const prevOffsetHeight = list.offsetHeight;\r\n            const prevScrollTop = list.scrollTop;\r\n\r\n            list.prevOffsetHeight = prevOffsetHeight;\r\n            list.prevScrollTop = prevScrollTop;\r\n        });\r\n    }\r\n\r\n    restoreMessagesScrollPosition(openPanel = true) {\r\n        const elements = document.getElementsByClassName('messages-list-wrapper');\r\n        if (!elements.length) return;\r\n\r\n        [...elements].forEach(x => {\r\n            const list = x;\r\n            if (!list) return;\r\n\r\n            const { prevScrollTop, prevOffsetHeight } = list;\r\n            if (list.scrollTop === prevScrollTop) {\r\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\r\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleMicrophone = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { call, status } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId, stream } = call;\r\n\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (!groupCall) return;\r\n\r\n        if (!groupCall.can_unmute_self) {\r\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\r\n                return (\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className='notification-close-button'\r\n                        onClick={() => { closeSnackbar(snackKey); }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )\r\n            });\r\n        } else {\r\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\r\n        }\r\n    };\r\n\r\n    handleLeave = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        await CallStore.leaveGroupCall(chatId, groupCallId);\r\n    };\r\n\r\n    handleOpenGroupCall = () => {\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        openGroupCallPanel();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { call, status, connected, animated } = this.state;\r\n        if (!call) return null;\r\n\r\n        const { chatId } = call;\r\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\r\n\r\n        return (\r\n            <div className='group-call-top-panel-wrapper'>\r\n                { animated ? (\r\n                    <TopBar ref={this.topBarRef}/>\r\n                    ) : (\r\n                    <div className={classNames('group-call-top-panel',\r\n                        {\r\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\r\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\r\n                            'group-call-top-panel-connecting': !connected,\r\n\r\n                        })}\r\n                    />\r\n                )}\r\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\r\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\r\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\r\n                    </IconButton>\r\n                    <div className='group-call-top-panel-title'>\r\n                        {title}\r\n                    </div>\r\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\r\n                        <CallEndIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nGroupCallTopPanel.propTypes = {};\r\n\r\nexport default withTranslation()(GroupCallTopPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\r\n    'PlaylistEdit'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\r\n    'Block'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\r\n    'Broom'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\r\n    'Phone'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport BlockIcon from '../../Assets/Icons/Block';\r\nimport BroomIcon from '../../Assets/Icons/Broom';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MoreVertIcon from '../../Assets/Icons/More';\r\nimport PhoneIcon from '../../Assets/Icons/Phone';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport {\r\n    canClearHistory,\r\n    canDeleteChat,\r\n    getViewInfoTitle,\r\n    isPrivateChat,\r\n    getDeleteChatTitle,\r\n    hasOnePinnedMessage,\r\n    canSwitchBlocked,\r\n    getChatSender,\r\n    canManageVoiceChats,\r\n    canBeReported, getChatUserId, canBeCalled\r\n} from '../../Utils/Chat';\r\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\r\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\r\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: null\r\n        };\r\n    }\r\n\r\n    handleButtonClick = async event => {\r\n        const { currentTarget: anchorEl } = event;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\r\n        ChatStore.set(chat);\r\n\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleChatInfo = () => {\r\n        this.handleMenuClose();\r\n        setTimeout(() => this.props.openChatDetails(), 150);\r\n    };\r\n\r\n    handleClearHistory = () => {\r\n        this.handleMenuClose();\r\n\r\n        clearHistory(AppStore.getChatId());\r\n    };\r\n\r\n    handleDeleteChat = () => {\r\n        this.handleMenuClose();\r\n\r\n        leaveChat(AppStore.getChatId());\r\n    };\r\n\r\n    handleUnpin = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return false;\r\n\r\n        const { pinned } = media;\r\n        if (!pinned) return false;\r\n        if (pinned.length !== 1) return false;\r\n\r\n        requestUnpinMessage(chatId, pinned[0].id);\r\n    };\r\n\r\n    handleSwitchBlocked = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const sender = getChatSender(chatId);\r\n        const { is_blocked } = chat;\r\n        if (is_blocked) {\r\n            unblockSender(sender);\r\n        } else {\r\n            requestBlockSender(sender);\r\n        }\r\n    };\r\n\r\n    handleStartGroupCall = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        showAlert({\r\n            title: LStore.getString('StartVoipChatTitle'),\r\n            message: LStore.getString('StartVoipChatAlertText'),\r\n            ok: LStore.getString('Start'),\r\n            cancel: LStore.getString('Cancel'),\r\n            onResult: async result => {\r\n                if (result){\r\n                    await CallStore.startGroupCall(chatId);\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    handleStartP2PCall = () => {\r\n        this.handleMenuClose();\r\n\r\n        const userId = getChatUserId(AppStore.getChatId());\r\n\r\n        CallStore.p2pStartCall(userId, false);\r\n    };\r\n\r\n    handleReport = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openReportChat(chatId, []);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { is_blocked, voice_chat_group_call_id } = chat;\r\n\r\n        const clearHistory = canClearHistory(chatId);\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n        const unpinMessage = hasOnePinnedMessage(chatId);\r\n        const switchBlocked = canSwitchBlocked(chatId);\r\n        const manageVoiceChats = canManageVoiceChats(chatId);\r\n        const reported = canBeReported(chatId);\r\n        const called = canBeCalled(chatId);\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleButtonClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    { CallStore.p2pCallsEnabled && called && (\r\n                        <MenuItem onClick={this.handleStartP2PCall}>\r\n                            <ListItemIcon>\r\n                                <CallOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Call')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\r\n                        <MenuItem onClick={this.handleStartGroupCall}>\r\n                            <ListItemIcon>\r\n                                <PhoneIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('StartVoipChat')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleChatInfo}>\r\n                        <ListItemIcon>\r\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                    </MenuItem>\r\n                    {clearHistory && (\r\n                        <MenuItem onClick={this.handleClearHistory}>\r\n                            <ListItemIcon>\r\n                                <BroomIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ClearHistory')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {deleteChat && deleteChatTitle && (\r\n                        <MenuItem onClick={this.handleDeleteChat}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={deleteChatTitle} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {unpinMessage && (\r\n                        <MenuItem onClick={this.handleUnpin}>\r\n                            <ListItemIcon>\r\n                                <UnpinIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {switchBlocked && (\r\n                        <MenuItem onClick={this.handleSwitchBlocked}>\r\n                            <ListItemIcon>\r\n                                <BlockIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {reported && (\r\n                        <MenuItem onClick={this.handleReport}>\r\n                            <ListItemIcon>\r\n                                <ReportOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ReportChat')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './HeaderChatSubtitle.css';\r\n\r\nclass HeaderChatSubtitle extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateChatOnlineMemberCount = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserChatAction = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        this.forceUpdate();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n\r\n        const subtitle = getChatSubtitle(chatId, true);\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n\r\n        return (\r\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChatSubtitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChatSubtitle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\r\nimport './HeaderChat.css';\r\n\r\nclass HeaderChat extends React.Component {\r\n    render() {\r\n        const { className, chatId, onClick } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('header-chat', className)} onClick={onClick}>\r\n                <ChatTile chatId={chatId} size={44} />\r\n                <div className='header-chat-content'>\r\n                    <DialogTitle chatId={chatId} />\r\n                    <HeaderChatSubtitle chatId={chatId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AnimatedItem.css';\r\n\r\nclass AnimatedItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.containerRef = React.createRef();\r\n        this.item1Ref = React.createRef();\r\n        this.item2Ref = React.createRef();\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return nextProps.item !== this.props.item;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { item } = props;\r\n        const { to, prevItem } = state;\r\n\r\n        if (item !== prevItem) {\r\n            return {\r\n                prevItem: item,\r\n                from: to,\r\n                to: item,\r\n                scrollDown: item > to\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { scrollDown, animateOnMount } = this.props;\r\n        const { to } = this.state;\r\n\r\n        this.animate('', to, scrollDown, animateOnMount);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { item, scrollDown } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        if (prevProps.item !== item) {\r\n            this.animate(from, to, scrollDown);\r\n        }\r\n    }\r\n\r\n    animate = (from, to, scrollDown, animate = true) => {\r\n        const { height } = this.props;\r\n\r\n        const container = this.containerRef.current;\r\n        const item1 = this.item1Ref.current;\r\n        const item2 = this.item2Ref.current;\r\n\r\n        if (!container || !item1 || !item2) return;\r\n\r\n        const duration = !animate ? '0ms' : '250ms';\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        if (scrollDown) {\r\n            container.style.cssText = `transform: translateY(-${height}px)`;\r\n            item1.style.cssText = 'opacity: 0';\r\n            item2.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        } else {\r\n            container.style.cssText = 'transform: translateY(0px)';\r\n            item1.style.cssText = 'opacity: 1';\r\n            item2.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { scrollDown, height, getItemTemplate } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        return (\r\n            <div className='animated-item' style={{ height }}>\r\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\r\n                <div ref={this.containerRef} className='animated-item-wrapper'>\r\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\r\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedItem.propTypes = {\r\n    item: PropTypes.string,\r\n    getItemTemplate: PropTypes.func,\r\n    scrollDown: PropTypes.bool,\r\n    height: PropTypes.number,\r\n    animateOnMount: PropTypes.bool\r\n};\r\n\r\nAnimatedItem.defaultProps = {\r\n    item: null,\r\n    getItemTemplate: x => x,\r\n    scrollDown: true,\r\n    height: 21,\r\n    animateOnMount: true\r\n}\r\n\r\nexport default AnimatedItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnimatedItem from './AnimatedItem';\r\nimport './AnimatedCounter.css';\r\n\r\nclass AnimatedCounter extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { counter } = props;\r\n        const { prevCounter } = state;\r\n\r\n        if (counter !== prevCounter) {\r\n            return {\r\n                prevCounter: counter,\r\n\r\n                scrollDown: counter > prevCounter\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { counter, height, reverse } = this.props;\r\n        const { scrollDown } = this.state;\r\n        if (!counter) return null;\r\n\r\n        const counterStr = counter + '';\r\n\r\n        return (\r\n            <div className='animated-counter' style={{ height }}>\r\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedCounter.propTypes = {\r\n    counter: PropTypes.number,\r\n    height: PropTypes.number,\r\n    reverse: PropTypes.bool\r\n};\r\n\r\nAnimatedCounter.defaultProps = {\r\n    counter: 0,\r\n    height: 21,\r\n    reverse: false\r\n}\r\n\r\nexport default AnimatedCounter;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './HeaderCommand.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport { canBeReported } from '../../Utils/Chat';\r\nimport { openReportChat } from '../../Actions/Chat';\r\n\r\nclass HeaderCommand extends React.Component {\r\n    handleCancel = () => {\r\n        clearSelection();\r\n    };\r\n\r\n    handleDelete = () => {\r\n        let id = 0;\r\n        let messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        deleteMessages(id, messageIds);\r\n    };\r\n\r\n    handleForward = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        forwardMessages(id, messageIds);\r\n    };\r\n\r\n    handleGetText = () => { \r\n\r\n        const messages = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) continue;\r\n            console.log(message.content.text.text);\r\n            messages.push(message.content.text.text);\r\n        }\r\n        if ( window.location !== window.parent.location ) { \r\n            window.parent.postMessage(messages, \"*\")\r\n        } else {\r\n            console.log(messages);\r\n        }\r\n\r\n    };\r\n    \r\n    handleReport = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        openReportChat(id, messageIds);\r\n    };\r\n\r\n    render() {\r\n        const { t, count } = this.props;\r\n\r\n        let canBeDeleted = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let canBeForwarded = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_forwarded) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        const items = Array.from(MessageStore.selectedItems.values());\r\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\r\n\r\n        return (\r\n            <div className='header-command'>\r\n                {canBeForwarded && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\r\n                        {t('Forward')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canBeDeleted && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\r\n                        {t('Delete')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canReport && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\r\n                        {t('ReportChat')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                <div className='header-command-space' />\r\n                <Button color='primary' className='header-command-button' onClick={this.handleGetText}>\r\n                    {t('Get Text')}\r\n                </Button>\r\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderCommand.propTypes = {\r\n    count: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(HeaderCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './PinnedMessageBorder.css';\r\n\r\nclass PinnedMessageBorder extends React.Component {\r\n\r\n    drawRect = (x, y, width, height, radius) => {\r\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\r\n    };\r\n\r\n    getClipPath = (id, barHeight, count) => {\r\n        const radius = 1;\r\n\r\n        let d = '';\r\n        if (count === 3) {\r\n            d = this.drawRect(0, 0, 2, barHeight, radius)\r\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\r\n                + this.drawRect(0, 23, 2, barHeight, radius);\r\n        } else {\r\n            for (let i = 0; i < count; i++) {\r\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <clipPath id={id}>\r\n                <path d={d}/>\r\n            </clipPath>\r\n        );\r\n    };\r\n\r\n    getBarHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = index === 1 ? 10 : 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkTranslateY = (index, barHeight, count) => {\r\n        if (count === 1) {\r\n            return 0;\r\n        } else if (count === 2) {\r\n            return index === 0 ? 0 : barHeight + 2;\r\n        }\r\n\r\n        if (count === 3) {\r\n            if (index === 0) {\r\n                return 0;\r\n            } else if (index === 1) {\r\n                return 11;\r\n            }\r\n\r\n            return 23;\r\n        } else {\r\n            return (barHeight + 2) * index;\r\n        }\r\n    };\r\n\r\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\r\n        if (count <= 4) {\r\n            return 0;\r\n        }\r\n\r\n        if (index <= 1) {\r\n            return 0;\r\n        } else if (index >= count - 2) {\r\n            return trackHeight - 32;\r\n        }\r\n\r\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\r\n    };\r\n\r\n    getTrackHeight = (count, barHeight) => {\r\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\r\n    };\r\n\r\n    render() {\r\n        const { count, index } = this.props;\r\n        if (count === 1) {\r\n            return (\r\n                <div className='pinned-message-border'>\r\n                    <div className='pinned-message-border-wrapper-1'/>\r\n                </div>);\r\n        }\r\n\r\n        const barHeight = this.getBarHeight(count, index);\r\n        const markHeight = this.getMarkHeight(count, index);\r\n        const trackHeight = this.getTrackHeight(count, barHeight);\r\n\r\n        const clipPathId = `clipPath_${count}`;\r\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\r\n\r\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\r\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\r\n\r\n        return (\r\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\r\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\r\n                    <svg height='0' width='0'>\r\n                        <defs>{clipPath}</defs>\r\n                    </svg>\r\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessageBorder.propTypes = {\r\n    count: PropTypes.number,\r\n    index: PropTypes.number\r\n};\r\n\r\nexport default PinnedMessageBorder;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\r\nimport { openChat } from '../../Actions/Client';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PinnedMessage.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport PinnedMessageBorder from './PinnedMessageBorder';\r\n\r\nclass PinnedMessage extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevPropsChatId } = state;\r\n        const { chatId } = props;\r\n\r\n        if (prevPropsChatId !== chatId) {\r\n            const media = MessageStore.getMedia(chatId);\r\n\r\n            const pinned = media ? media.pinned : [];\r\n\r\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\r\n            const thumbnail = getReplyThumbnail(chatId, messageId);\r\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n            return {\r\n                prevPropsChatId: chatId,\r\n                clientData: ChatStore.getClientData(chatId),\r\n                pinned,\r\n                prevMessageId: 0,\r\n                messageId,\r\n                minithumbnail,\r\n                thumbnail,\r\n                lastPhoto: {\r\n                    messageId,\r\n                    minithumbnail,\r\n                    thumbnail\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { clientData, pinned, messageId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clientData !== clientData) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinned !== pinned) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        const { prevMessageId, messageId } = this.state;\r\n\r\n        if (prevProps.chatId !== chatId) {\r\n            this.animateText(messageId, prevMessageId, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onClientUpdateCurrentPinnedMessage = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chatId) {\r\n            return;\r\n        }\r\n\r\n        this.scrollToMessageId(update.messageId);\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n        if (!message.is_pinned) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        const messageIds = new Map(message_ids.map(x => [x, x]));\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => messageIds.has(x.id))) {\r\n            return;\r\n        }\r\n        if (!is_permanent) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, message_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => x.id === message_id)) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    animateText = (messageId, prevMessageId, duration = 250) => {\r\n        const textElement = document.getElementById('pinned-message-animated-text');\r\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\r\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\r\n        if (!textElement || !text1Element || !text2Element) return;\r\n\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n        if (scrollDown) {\r\n            textElement.style.cssText = 'transform: translateY(-19px)';\r\n            text1Element.style.cssText = 'opacity: 0';\r\n            text2Element.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        } else {\r\n            textElement.style.cssText = 'transform: translateY(0px)';\r\n            text1Element.style.cssText = 'opacity: 1';\r\n            text2Element.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        }\r\n    };\r\n\r\n    setPinnedState = () => {\r\n        const { chatId } = this.props;\r\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\r\n\r\n        const clientData = ChatStore.getClientData(chatId);\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\r\n        if (!messageId && pinned.length > 0) {\r\n            messageId = pinned[0].id;\r\n        }\r\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\r\n\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            clientData,\r\n            pinned,\r\n            prevMessageId,\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail,\r\n            lastPhoto: {\r\n                messageId,\r\n                thumbnail,\r\n                minithumbnail\r\n            }\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (currentMessageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateSetChatClientData = update => {\r\n        const { chatId, clientData } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.setState({ clientData });\r\n    };\r\n\r\n    scrollToMessageId = nextMessageId => {\r\n        const { chatId } = this.props;\r\n        const { messageId, thumbnail, minithumbnail } = this.state;\r\n\r\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\r\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\r\n\r\n        const lastPhoto = nextThumbnail ? {\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail\r\n        } : {\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail\r\n        }\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            prevMessageId: messageId,\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail,\r\n            lastPhoto\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (messageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    handleClick = event => {\r\n        const { chatId } = this.props;\r\n        const { pinned, messageId } = this.state;\r\n        if (!pinned.length) return;\r\n\r\n        if (!messageId) return;\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        MessageStore.clickedPinned = { chatId, id: messageId };\r\n\r\n        openChat(chatId, messageId);\r\n\r\n        const index = pinned.findIndex(x => x.id === messageId);\r\n        if (index === -1) return;\r\n\r\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\r\n\r\n        this.scrollToMessageId(pinned[nextIndex].id);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleEditClick = event => {\r\n        const { chatId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\r\n\r\n        if (!chatId) return null;\r\n\r\n        if (clientData) {\r\n            const { unpinned } = clientData;\r\n            if (unpinned) return null;\r\n        }\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\r\n\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        if (isDeletedMessage(message)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\r\n        if (isDeletedMessage(prevMessage)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let index = 0;\r\n        let caption = t('PinnedMessage');\r\n        if (pinned && pinned.length > 1) {\r\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\r\n            if (pinned.length === 2) {\r\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\r\n            } else {\r\n                caption = (\r\n                    <>\r\n                        {t('PinnedMessage')}\r\n                        {index > 0 && (\r\n                            <>\r\n                                {' #'}\r\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\r\n                            </>)\r\n                        }\r\n                    </>);\r\n            }\r\n        }\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\r\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\r\n                    <CSSTransition\r\n                        in={!!thumbnail}\r\n                        classNames='pinned-message-tile'\r\n                        timeout={250}\r\n                        mountOnEnter={true}\r\n                        unmountOnExit={true}>\r\n                        <div>\r\n                            <ReplyTile\r\n                                chatId={chatId}\r\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\r\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\r\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\r\n                            />\r\n                        </div>\r\n                    </CSSTransition>\r\n                    <div className='pinned-message-content'>\r\n                        <div className='pinned-message-title'>{caption}</div>\r\n                        <div className='pinned-message-subtitle'>\r\n                            <div id='pinned-message-animated-text'>\r\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\r\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport HeaderChat from '../Tile/HeaderChat';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport HeaderProgress from './HeaderProgress';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport {\r\n    getChatSubtitle,\r\n    getChatTitle,\r\n    isAccentChatSubtitle\r\n} from '../../Utils/Chat';\r\nimport { openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.state = {\r\n            chatId,\r\n            pinned,\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            connectionState: AppStore.getConnectionState()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.state;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    setPinnedState() {\r\n        const { chatId } = this.state;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.setState({ pinned });\r\n    }\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const chatId = AppStore.getChatId();\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.setState({\r\n            chatId,\r\n            pinned\r\n        });\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        this.setState({ connectionState: update.state });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    openChatDetails = () => {\r\n        const { chatId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        if (isSmallWidth) {\r\n            openChat(chatId, null, true);\r\n        } else {\r\n            changeChatDetailsVisibility(true);\r\n        }\r\n    };\r\n\r\n    handleSearchChat = () => {\r\n        const { chatId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        searchChat(chatId);\r\n    };\r\n\r\n    localize = str => {\r\n        const { t } = this.props;\r\n\r\n        return t(str)\r\n            .replace('...', '')\r\n            .replace('…', '');\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handlePinClick = () => {\r\n        const { chatId } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            pinned,\r\n            authorizationState,\r\n            connectionState,\r\n            selectionCount,\r\n        } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        let title = getChatTitle(chatId, true, t);\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let showProgressAnimation = false;\r\n\r\n        if (connectionState) {\r\n            switch (connectionState['@type']) {\r\n                case 'connectionStateConnecting':\r\n                    title = this.localize('Connecting');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateConnectingToProxy':\r\n                    title = this.localize('Connecting to proxy');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateReady':\r\n                    break;\r\n                case 'connectionStateUpdating':\r\n                    title = this.localize('Updating');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateWaitingForNetwork':\r\n                    title = this.localize('Waiting for network');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else if (authorizationState) {\r\n            switch (authorizationState['@type']) {\r\n                case 'authorizationStateClosed':\r\n                    break;\r\n                case ' authorizationStateClosing':\r\n                    break;\r\n                case 'authorizationStateLoggingOut':\r\n                    title = this.localize('Logging out');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateReady':\r\n                    break;\r\n                case 'authorizationStateWaitCode':\r\n                    break;\r\n                case 'authorizationStateWaitEncryptionKey':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateWaitPassword':\r\n                    break;\r\n                case 'authorizationStateWaitPhoneNumber':\r\n                    break;\r\n                case 'authorizationStateWaitTdlibParameters':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else {\r\n            title = this.localize('Loading');\r\n            subtitle = '';\r\n            showProgressAnimation = true;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectionCount} />\r\n                    <div className='header-details-row'>\r\n                        {showProgressAnimation ? (\r\n                            <div\r\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\r\n                                onClick={this.openChatDetails}>\r\n                                <span className='header-status-content'>{title}</span>\r\n                                <HeaderProgress />\r\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\r\n                                    {subtitle}\r\n                                </span>\r\n                                <span className='header-status-tail' />\r\n                            </div>\r\n                        ) : (\r\n                            <HeaderChat\r\n                                className={classNames('grow', 'cursor-pointer')}\r\n                                chatId={chatId}\r\n                                onClick={this.openChatDetails}\r\n                            />\r\n                        )}\r\n                        <PinnedMessage chatId={chatId} />\r\n                        {chat && (\r\n                            <div className='header-right-buttons'>\r\n                                { pinned.length > 1 && (\r\n                                    <IconButton\r\n                                        aria-label='Pins'\r\n                                        onClick={this.handlePinClick}\r\n                                        onMouseDown={this.handleMouseDown}>\r\n                                        <PlaylistEditIcon />\r\n                                    </IconButton>\r\n                                )}\r\n                                <IconButton\r\n                                    aria-label='Search'\r\n                                    onClick={this.handleSearchChat}>\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Header);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './VolumeButton.css';\r\n\r\nclass VolumeButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        value: PlayerStore.volume,\r\n        prevValue: PlayerStore.volume,\r\n        dragging: false,\r\n        buttonOver: false,\r\n        popupOver: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume, prevVolume } = update;\r\n\r\n        if (prevVolume === undefined) {\r\n            this.setState({ value: volume });\r\n        } else {\r\n            this.setState({ value: volume, prevValue: prevVolume });\r\n        }\r\n    };\r\n\r\n    handlePopoverOpen = anchorEl => {\r\n        this.setState({ anchorEl: anchorEl });\r\n    };\r\n\r\n    handlePopoverClose = () => {\r\n        const { dragging, buttonOver, popupOver } = this.state;\r\n\r\n        if (dragging) return;\r\n        if (buttonOver) return;\r\n        if (popupOver) return;\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleMouseEnter = (event, openPopover) => {\r\n        this.setState({ buttonOver: true });\r\n\r\n        if (openPopover) {\r\n            this.handlePopoverOpen(event.currentTarget);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ buttonOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handlePopupMouseLeave = () => {\r\n        this.setState({ popupOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handleVoiceClick = () => {\r\n        const { value, prevValue } = this.state;\r\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaVolume',\r\n            volume: nextValue\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { dragging, prevValue } = this.state;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                volume: value\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                prevVolume: value > 0 ? value : prevValue,\r\n                volume: value\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDragStart = () => {\r\n        const { value } = this.state;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            prevValue: value\r\n        });\r\n    };\r\n\r\n    handleDragEnd = () => {\r\n        const { value, prevValue } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                dragging: false,\r\n                prevValue: value > 0 ? value : prevValue\r\n            },\r\n            () => {\r\n                this.handlePopoverClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    getVolumeIcon = value => {\r\n        if (value === 0) {\r\n            return <VolumeOffIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.25) {\r\n            return <VolumeMuteIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.5) {\r\n            return <VolumeDownIcon fontSize='small' />;\r\n        }\r\n\r\n        return <VolumeUpIcon fontSize='small' />;\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl, value } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\r\n                onMouseLeave={this.handleMouseLeave}\r\n                style={{\r\n                    position: 'relative',\r\n                    background: 'transparent'\r\n                }}>\r\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\r\n                    {this.getVolumeIcon(value)}\r\n                </IconButton>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        background: 'transparent',\r\n                        visibility: open ? 'visible' : 'hidden',\r\n                        zIndex: 1\r\n                    }}\r\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\r\n                    onMouseLeave={this.handlePopupMouseLeave}>\r\n                    <div className='volume-button-panel'>\r\n                        <Slider\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.01}\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            onDragStart={this.handleDragStart}\r\n                            onDragEnd={this.handleDragEnd}\r\n                            orientation='vertical'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VolumeButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass RepeatButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { repeat } = PlayerStore;\r\n\r\n        this.state = {\r\n            repeat\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    onClientUpdateMediaRepeat = update => {\r\n        const { repeat } = update;\r\n\r\n        this.setState({ repeat });\r\n    };\r\n\r\n    handleRepeat = () => {\r\n        const { repeat } = this.state;\r\n\r\n        let nextRepeat = repeat;\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                nextRepeat = RepeatEnum.REPEAT;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                nextRepeat = RepeatEnum.REPEAT_ONE;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                nextRepeat = RepeatEnum.NONE;\r\n                break;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaRepeat',\r\n            repeat: nextRepeat\r\n        });\r\n    };\r\n\r\n    getIcon = repeat => {\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                return <RepeatOneIcon fontSize='small' />;\r\n            }\r\n            default: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { repeat } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\r\n                onClick={this.handleRepeat}>\r\n                {this.getIcon(repeat)}\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepeatButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShuffleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { shuffle } = PlayerStore;\r\n\r\n        this.state = {\r\n            shuffle\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    onClientUpdateMediaShuffle = update => {\r\n        const { shuffle } = update;\r\n\r\n        this.setState({ shuffle });\r\n    };\r\n\r\n    handleShuffle = () => {\r\n        const { shuffle } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaShuffle',\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { shuffle } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={!shuffle ? 'default' : 'primary'}\r\n                onClick={this.handleShuffle}>\r\n                <ShuffleIcon fontSize='small' />\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShuffleButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass PlaybackRateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\r\n\r\n        this.state = {\r\n            audioPlaybackRate,\r\n            playbackRate\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        this.setState({ playbackRate });\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        this.setState({ audioPlaybackRate });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\r\n            ? PLAYER_PLAYBACKRATE_FAST\r\n            : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        if (audio) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\r\n                audioPlaybackRate: nextRate\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaybackRate',\r\n                playbackRate: nextRate\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\r\n                onClick={this.handlePlaybackRate}>\r\n                <div className='header-player-playback-icon'>2X</div>\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nPlaybackRateButton.defaultProps = {\r\n    audio: false\r\n}\r\n\r\nPlaybackRateButton.propTypes = {\r\n    audio: PropTypes.bool\r\n}\r\n\r\nexport default PlaybackRateButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport './Time.css';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { duration } = this.props;\r\n\r\n        const currentTime = 0;\r\n        const reverse = false;\r\n\r\n        this.state = {\r\n            reverse,\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(currentTime, duration, reverse),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { currentTime, duration } = update;\r\n        const { reverse } = this.state;\r\n\r\n        this.setState({\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\r\n        });\r\n    };\r\n\r\n    handleReverse = event => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const { currentTime, duration, reverse } = this.state;\r\n\r\n        this.setState({\r\n            reverse: !reverse,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { currentTimeString } = this.state;\r\n\r\n        return (\r\n            <div className='header-player-time' onClick={this.handleReverse}>\r\n                {currentTimeString}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport MediaAudio from '../Message/Media/Audio';\r\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openInstantViewMedia } from '../../Utils/InstantView';\r\nimport { SCROLL_PRECISION } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Playlist.css';\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemRefMap = new Map();\r\n\r\n        const { message, block, playlist } = PlayerStore;\r\n        this.state = {\r\n            message,\r\n            block,\r\n            playlist,\r\n\r\n            open: false,\r\n            titleMouseOver: false,\r\n            playlistMouseOver: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.state;\r\n\r\n        if (!prevState.open && open) {\r\n            this.scrollToActive();\r\n        }\r\n    }\r\n\r\n    scrollToActive = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { playlist, message, block } = this.state;\r\n        if (!message && !block) return;\r\n        if (!playlist) return;\r\n\r\n        const index = [...playlist.items]\r\n            .reverse()\r\n            .findIndex(x => playlistItemEquals(x, message || block));\r\n        if (index === -1) return;\r\n\r\n        const item = this.itemRefMap.get(index);\r\n        if (!item) return;\r\n\r\n        const node = ReactDOM.findDOMNode(item);\r\n        if (!node) return;\r\n\r\n        list.scrollTop = node.offsetTop - 15;\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    onClientUpdateMediaTitleMouseOver = update => {\r\n        const { over } = update;\r\n\r\n        if (over) {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryOpen();\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryClose();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n\r\n        switch (source['@type']) {\r\n            case 'message': {\r\n\r\n                this.setState({\r\n                    message: source,\r\n                    block: null\r\n                })\r\n                break;\r\n            }\r\n            case 'instantViewSource': {\r\n\r\n                this.setState({\r\n                    message: null,\r\n                    block: source.block\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylistLoading = update => {\r\n        const { message, block } = this.state;\r\n        const { source } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist: null\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { message, block } = this.state;\r\n        const { source, playlist } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist\r\n            });\r\n        }\r\n    };\r\n\r\n    tryOpen = () => {\r\n        clearTimeout(this.openTimeout);\r\n\r\n        this.openTimeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    tryClose = () => {\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        this.setState({\r\n            playlistMouseOver: true,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState(\r\n            {\r\n                playlistMouseOver: false\r\n            },\r\n            () => {\r\n                this.tryClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistNext'\r\n            });\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistPrev'\r\n            });\r\n        }\r\n    };\r\n\r\n    getPageBlock(block, instantView) {\r\n        if (!block) return null;\r\n\r\n        let element = null;\r\n        switch (block['@type']) {\r\n            case 'pageBlockAudio': {\r\n                element = (\r\n                    <MediaAudio\r\n                        block={block}\r\n                        audio={block.audio}\r\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n            case 'pageBlockVoiceNote': {\r\n                element = (\r\n                    <MediaVoiceNote\r\n                        block={block}\r\n                        voiceNote={block.voice_note}\r\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    render() {\r\n        const { open, playlist } = this.state;\r\n\r\n        if (!open) return null;\r\n        if (!playlist) return null;\r\n\r\n        const { items } = playlist;\r\n        if (!items) return null;\r\n        if (items.length <= 1) return null;\r\n\r\n        this.itemRefMap.clear();\r\n\r\n        let iv = null;\r\n        if (items[0]['@type'] === 'instantViewSource') {\r\n            iv = playlist.source.instantView;\r\n        }\r\n\r\n        const getMediaFunc = items[0]['@type'] === 'message'\r\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\r\n            : x => this.getPageBlock(x, iv)\r\n\r\n        return (\r\n            <div className='playlist'>\r\n                <div className='playlist-wrapper'>\r\n                    <div\r\n                        ref={this.listRef}\r\n                        className='playlist-items'\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        onScroll={this.handleScroll}>\r\n                        {[...items]\r\n                            .reverse()\r\n                            .map((x, index) => (\r\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\r\n                                    {getMediaFunc(x)}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPlaylist.propTypes = {\r\n\r\n};\r\n\r\nexport default Playlist;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { loadInstantViewContent } from '../Utils/File';\r\nimport { setInstantViewContent } from './Client';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function openMediaInstantView(instantView, block) {\r\n    const url = urlCache.get(instantView);\r\n    if (!url) return;\r\n\r\n    console.log('[IV] open', instantView);\r\n    loadInstantViewContent(instantView);\r\n    setInstantViewContent({ instantView, block, url });\r\n}\r\n\r\nlet timestamp = null;\r\n\r\nconst ivCache = new Map();\r\nconst urlCache = new Map();\r\n\r\nexport async function openInstantView(url) {\r\n    try {\r\n        let result = null;\r\n        if (ivCache.has(url)) {\r\n            result = ivCache.get(url);\r\n        } else {\r\n            const now = (timestamp = new Date());\r\n            result = await TdLibController.send({\r\n                '@type': 'getWebPageInstantView',\r\n                url,\r\n                force_full: true\r\n            });\r\n            ivCache.set(url, result);\r\n            urlCache.set(result, url);\r\n            if (timestamp !== now) return;\r\n        }\r\n\r\n        console.log('[IV] open', result);\r\n        loadInstantViewContent(result);\r\n        setInstantViewContent({ instantView: result, url });\r\n    } catch {\r\n        const newWindow = window.open();\r\n        newWindow.opener = null;\r\n        newWindow.location = url;\r\n    }\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeButton from '../Player/VolumeButton';\r\nimport RepeatButton from '../Player/RepeatButton';\r\nimport ShuffleButton from '../Player/ShuffleButton';\r\nimport PlaybackRateButton from './PlaybackRateButton';\r\nimport Time from '../Player/Time';\r\nimport Playlist from '../Player/Playlist';\r\nimport { supportsStreaming } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\r\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openMediaInstantView } from '../../Actions/InstantView';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderPlayer.css';\r\n\r\nclass HeaderPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { message, block, instantView, playlist } = PlayerStore;\r\n        const { currentTime, duration } = getCurrentTime(message);\r\n\r\n        this.state = {\r\n            currentTime,\r\n            duration,\r\n            message,\r\n            block,\r\n            instantView,\r\n            playlist,\r\n            playing: false,\r\n            src: getMediaSrc(message),\r\n            mimeType: getMediaMimeType(message)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { message, block, playlist, src, playing } = this.state;\r\n\r\n        if (nextState.block !== block) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.message !== message) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playlist !== playlist) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addMediaSessionHandlers();\r\n\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeMediaSessionHandlers();\r\n\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    addMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try {\r\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\r\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\r\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\r\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\r\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleSeekForward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekBackward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekTo = event => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(event.seekTime);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n    };\r\n\r\n    removeMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try{\r\n            mediaSession.setActionHandler('nexttrack', null);\r\n            mediaSession.setActionHandler('previoustrack', null);\r\n            mediaSession.setActionHandler('seekforward', null);\r\n            mediaSession.setActionHandler('seekbackward', null);\r\n            mediaSession.setActionHandler('seekto', null);\r\n        }catch {\r\n\r\n        }\r\n    }\r\n\r\n    fadeOutVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.pause();\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    fadeInVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        player.volume = 0;\r\n        player.play();\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / totalIterations * (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    onClientUpdateRecordStart = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (!player.paused) {\r\n            this.fadeOutVolume(250);\r\n            this.pausedForRecord = true;\r\n        }\r\n    };\r\n\r\n    onClientUpdateRecordStop = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (player.paused && this.pausedForRecord) {\r\n            this.fadeInVolume(250);\r\n            this.pausedForRecord = false;\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const audio = hasAudio(message || block);\r\n        if (audio) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = playbackRate;\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!hasAudio(message || block)) return;\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = audioPlaybackRate;\r\n    };\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.volume = volume;\r\n    };\r\n\r\n    onClientUpdateMediaSeek = update => {\r\n        const { source, value, duration } = update;\r\n        const { message, block } = this.state;\r\n\r\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n        if (!player.duration) {\r\n            this.currentValue = { value, duration };\r\n            return;\r\n        }\r\n\r\n        player.currentTime = value * player.duration;\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n    };\r\n\r\n    onClientUpdateMediaViewerEnded = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPause = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPlay = update => {\r\n        this.playingMediaViewer = true;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        this.fadeOutVolume(250);\r\n    };\r\n\r\n    startPlayingFile = source => {\r\n        if (!source) return;\r\n\r\n        const { playlist } = PlayerStore;\r\n        const { src: prevSrc } = this.state;\r\n\r\n        const src = getMediaSrc(source);\r\n        const mimeType = getMediaMimeType(source);\r\n        const { currentTime, duration } = getCurrentTime(source);\r\n        const playing = Boolean(src);\r\n\r\n        const srcSource = source['@type'] === 'instantViewSource'\r\n            ? { message: null, block: source.block, instantView: source.instantView }\r\n            : { message: source, block: null, instantView: null };\r\n\r\n        this.setState(\r\n            {\r\n                currentTime,\r\n                duration,\r\n                playlist,\r\n                playing,\r\n                src,\r\n                ...srcSource,\r\n                mimeType\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                if (prevSrc !== src) {\r\n                    player.load();\r\n                    if (this.currentValue) {\r\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\r\n                        this.currentValue = null;\r\n                    } else {\r\n                        player.currentTime = currentTime;\r\n                    }\r\n                }\r\n\r\n                if (this.playingMediaViewer) {\r\n                    player.pause();\r\n\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateMediaPause',\r\n                        source\r\n                    });\r\n                } else if (player.paused) {\r\n                    player.play();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, fileId } = update;\r\n        const { message, block, instantView } = this.state;\r\n\r\n        if (message) {\r\n            const { chat_id, id, content } = message;\r\n            if (!content) return;\r\n            if (chatId !== chat_id || messageId !== id) return;\r\n\r\n            let startPlaying = false;\r\n            switch (content['@type']) {\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (web_page) {\r\n                        const { audio, voice_note, video_note } = web_page;\r\n\r\n                        if (audio) {\r\n                            if (supportsStreaming()) return;\r\n\r\n                            const { audio: file } = audio;\r\n                            if (file) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (voice_note) {\r\n                            const { voice } = voice_note;\r\n                            if (voice) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (video_note) {\r\n                            const { video } = video_note;\r\n                            if (video) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVoiceNote': {\r\n                    const { voice_note } = content;\r\n                    if (voice_note) {\r\n                        const { voice } = voice_note;\r\n                        if (voice) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n                    if (video_note) {\r\n                        const { video } = video_note;\r\n                        if (video) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile(message);\r\n            }\r\n        } else if (block) {\r\n            let startPlaying = false;\r\n            switch (block['@type']) {\r\n                case 'pageBlockAudio': {\r\n                    const { audio } = block;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVoiceNote': {\r\n                    const { voice_note } = block;\r\n                    if (voice_note) {\r\n                        const { voice: file } = voice_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVideoNote': {\r\n                    const { video_note } = block;\r\n                    if (video_note) {\r\n                        const { video: file } = video_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { playlist, source } = update;\r\n        const { message, block } = this.state;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({ playlist });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaClose = update => {\r\n        this.setState({\r\n            message: null,\r\n            block: null,\r\n            instantView: null,\r\n            playlist: null,\r\n            playing: false,\r\n            src: null,\r\n            mimeType: null\r\n        }, () => {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n        const { message, block, src } = this.state;\r\n\r\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\r\n            if (!src) return;\r\n\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            this.pausedForRecord = false;\r\n            if (player.paused) {\r\n                player.play();\r\n            } else {\r\n                player.pause();\r\n            }\r\n        } else {\r\n            this.startPlayingFile(source);\r\n        }\r\n    };\r\n\r\n    handlePrev = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPrev'\r\n        });\r\n    };\r\n\r\n    handlePlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaActive',\r\n            source\r\n        });\r\n    };\r\n\r\n    handleNext = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaNext'\r\n        });\r\n    };\r\n\r\n    handleEnded = (moveNext = true) => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaEnding',\r\n            source,\r\n            moveNext\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                //playing: false,\r\n                //message: null,\r\n                //src: null\r\n            },\r\n            () => {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateMediaEnd',\r\n                    source,\r\n                    moveNext\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleVideoEnded = () => {\r\n        const video = this.videoRef.current;\r\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\r\n\r\n        this.handleEnded(true);\r\n    };\r\n\r\n    handleClose = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            player.pause();\r\n        }\r\n\r\n        this.handleEnded(false);\r\n    };\r\n\r\n    handleLoadedMetadata = () => {\r\n        let { message, block, instantView, currentTime } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const voiceNote = hasVoice(message || block);\r\n\r\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\r\n        if (voiceNote) {\r\n            rate = playbackRate;\r\n        } else if (audio && useAudioPlaybackRate(message || block)) {\r\n            rate = audioPlaybackRate;\r\n        }\r\n\r\n        player.playbackRate = rate;\r\n        player.volume = volume;\r\n        player.muted = false;\r\n        if (this.currentValue) {\r\n            player.currentTime = player.duration * this.currentValue.value;\r\n            this.currentValue = null;\r\n        } else {\r\n            player.currentTime = currentTime;\r\n        }\r\n\r\n        player.play();\r\n\r\n        const { buffered, duration, videoWidth, videoHeight } = player;\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaLoadedMetadata',\r\n            source,\r\n            buffered,\r\n            duration,\r\n            videoWidth,\r\n            videoHeight\r\n        });\r\n\r\n        if (audio) {\r\n            return;\r\n        }\r\n        if (voiceNote) {\r\n            return;\r\n        }\r\n\r\n        let stream = null;\r\n        if ('captureStream' in player) {\r\n            stream = player.captureStream();\r\n        } else if ('mozCaptureStream' in player) {\r\n            stream = player.mozCaptureStream();\r\n        }\r\n\r\n        if (!stream) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaCaptureStream',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            stream: stream\r\n        });\r\n    };\r\n\r\n    handleProgress = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { buffered } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaProgress',\r\n            source,\r\n            buffered\r\n        });\r\n    }\r\n\r\n    handleTimeUpdate = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, buffered, duration } = player;\r\n\r\n        this.setState({ currentTime });\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTime',\r\n            source,\r\n            duration,\r\n            currentTime,\r\n            buffered,\r\n            timestamp: Date.now()\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n\r\n    };\r\n\r\n    handleVideoPlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({ playing: true });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, duration } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlay',\r\n            source,\r\n            currentTime,\r\n            duration,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleVideoPause = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({\r\n            playing: false\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPause',\r\n            source\r\n        });\r\n    };\r\n\r\n    hasPrev = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index + 1 < playlist.items.length;\r\n    };\r\n\r\n    hasNext = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index - 1 >= 0;\r\n    };\r\n\r\n    handleTitleMouseEnter = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: true\r\n        });\r\n    };\r\n\r\n    handleTitleMouseLeave = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: false\r\n        });\r\n    };\r\n\r\n    handleTitleClick = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (message) {\r\n            openChat(message.chat_id, message.id);\r\n            return;\r\n        }\r\n\r\n        if (block && instantView) {\r\n            openMediaInstantView(instantView, block);\r\n            return;\r\n        }\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const audio = getMessageAudio(message.chat_id, message.id);\r\n        if (!audio) return;\r\n\r\n        const { audio: file } = audio;\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const useAudioRate = useAudioPlaybackRate(message || block);\r\n\r\n        const date = message ? message.date : null;\r\n\r\n        const title = getMediaTitle(message || block, t);\r\n        const dateHintStr = getDateHint(date);\r\n        const dateStr = getDate(date);\r\n        const showDate = false; //!audio;\r\n        const showPlaybackRate = !audio || useAudioRate;\r\n        const showRepeat = audio;\r\n        const showShuffle = audio;\r\n        const hasPrev = this.hasPrev(message || block, playlist);\r\n        const hasNext = this.hasNext(message || block, playlist);\r\n\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <video\r\n                    className='header-player-video'\r\n                    ref={this.videoRef}\r\n                    autoPlay={true}\r\n                    controls={false}\r\n                    width={44}\r\n                    height={44}\r\n                    disablePictureInPicture={true}\r\n                    onLoadedMetadata={this.handleLoadedMetadata}\r\n                    onCanPlay={this.handleCanPlay}\r\n                    onPlay={this.handleVideoPlay}\r\n                    onPause={this.handleVideoPause}\r\n                    onEnded={this.handleVideoEnded}\r\n                    onTimeUpdate={this.handleTimeUpdate}\r\n                    onProgress={this.handleProgress}\r\n                >\r\n                    {source}\r\n                </video>\r\n                {(message || block) && (\r\n                    <div className='header-player'>\r\n                        <IconButton\r\n                            disabled={!hasPrev}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handlePrev}>\r\n                            <SkipPreviousIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            disabled={!src}\r\n                            onClick={this.handlePlay}>\r\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            disabled={!hasNext}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handleNext}>\r\n                            <SkipNextIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <Playlist />\r\n                        <div\r\n                            className='header-player-content'\r\n                            onMouseEnter={this.handleTitleMouseEnter}\r\n                            onMouseLeave={this.handleTitleMouseLeave}\r\n                            onClick={this.handleTitleClick}>\r\n                            <div className='header-player-title'>\r\n                                {title}\r\n                                {showDate && (\r\n                                    <span title={dateHintStr}>\r\n                                        &nbsp;\r\n                                        {dateStr}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            &nbsp;\r\n                        </div>\r\n                        <Time duration={duration}/>\r\n                        <VolumeButton />\r\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\r\n                        {showRepeat && <RepeatButton />}\r\n                        {showShuffle && <ShuffleButton />}\r\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(HeaderPlayer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\r\nimport { requestBlockSender } from '../../Actions/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ActionBar.css';\r\n\r\nclass ActionBar extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    onUpdateChatActionBar = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'removeChatActionBar',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleReportSpam = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleReportUnrelatedLocation = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleSharePhoneNumber = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'sharePhoneNumber',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    handleAddContact = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        const { user_id, phone_number, first_name, last_name } = user;\r\n\r\n        TdLibController.send({\r\n            '@type': 'addContact',\r\n            contact: {\r\n                '@type': 'contact',\r\n                phone_number,\r\n                first_name,\r\n                last_name,\r\n                vcard: '',\r\n                user_id\r\n            },\r\n            share_phone_number: false\r\n        });\r\n    };\r\n\r\n    handleBlockUser = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { action_bar } = chat;\r\n        if (!action_bar) return null;\r\n\r\n        let content = null;\r\n        switch (action_bar['@type']) {\r\n            case 'chatActionBarSharePhoneNumber': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\r\n                        {t('ShareMyPhone')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarAddContact': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                        {t('AddContactChat')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportAddBlock': {\r\n                content = (\r\n                    <>\r\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                            {t('AddContactChat')}\r\n                        </Button>\r\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\r\n                            {t('ReportSpamUser')}\r\n                        </Button>\r\n                    </>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarUnrelatedLocation': {\r\n                content = (\r\n                    <Button\r\n                        color='secondary'\r\n                        className='header-command-button'\r\n                        onClick={this.handleReportUnrelatedLocation}>\r\n                        {t('ReportSpamLocation')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportSpam': {\r\n                content = (\r\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\r\n                        {t('ReportSpam')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarInviteMembers': {\r\n                break;\r\n            }\r\n        }\r\n        if (!content) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className='action-bar' onMouseDown={this.handleClick}>\r\n                <div className='action-bar-content'>{content}</div>\r\n                <div className='action-bar-close-button'>\r\n                    <IconButton onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nActionBar.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(ActionBar);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\r\n    'Copy'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\r\n    'FrameCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\r\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\r\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\r\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\r\n    </g>,\r\n    'RemoveCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CopyIcon from '../../Assets/Icons/Copy';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\r\nimport EditIcon from '../../Assets/Icons/Edit';\r\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\r\nimport ShareIcon from '../../Assets/Icons/Share';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\r\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\r\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\r\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\r\nimport { copy } from '../../Utils/Text';\r\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\r\nimport { saveBlob } from '../../Utils/File';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessageMenu.css';\r\n\r\nclass MessageMenu extends React.PureComponent {\r\n    state = {\r\n        confirmStopPoll: false\r\n    };\r\n\r\n    handleConfirmStopPoll = event => {\r\n        const { dialog } = this.state;\r\n        if (dialog) return;\r\n\r\n        this.setState({\r\n            confirmStopPoll: true,\r\n            contextMenu: false\r\n        });\r\n    };\r\n\r\n    handleCloseConfirm = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ confirmStopPoll: false });\r\n    };\r\n\r\n    handleStopPoll = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n\r\n        if (confirmStopPoll) {\r\n            this.setState({ confirmStopPoll: false });\r\n        }\r\n\r\n        stopPoll(chatId, messageId);\r\n    };\r\n\r\n    handleUnvote = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        cancelPollAnswer(chatId, messageId);\r\n    };\r\n\r\n    handleCopyLink = event => {\r\n        const { onClose, copyLink, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleCopyPublicMessageLink = async event => {\r\n        const { onClose, chatId, messageId, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        const httpUrl = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageId,\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        if (!httpUrl) return;\r\n        const { link: copyLink } = httpUrl;\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleReply = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        replyMessage(chatId, messageId);\r\n    };\r\n\r\n    handlePin = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n\r\n        if (isMessagePinned(chatId, messageId)) {\r\n            requestUnpinMessage(chatId, messageId);\r\n        } else {\r\n            requestPinMessage(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleEdit = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        editMessage(chatId, messageId);\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n        onClose(event);\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDownload = event => {\r\n        const { chatId, messageId } = this.props;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { sticker } = content;\r\n        if (!sticker) return;\r\n\r\n        const { sticker: file } = sticker;\r\n        if (!file) return;\r\n\r\n        const blob = FileStore.getBlob(file.id);\r\n        if (!blob) return;\r\n\r\n        saveBlob(blob, 'sticker.tgs');\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n        if (!confirmStopPoll && !open) return null;\r\n\r\n        const isPinned = isMessagePinned(chatId, messageId);\r\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\r\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\r\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\r\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\r\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\r\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canCopyLink = Boolean(copyLink);\r\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\r\n\r\n        const hasItems =\r\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\r\n        if (!hasItems) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Popover\r\n                    open={true}\r\n                    onClose={onClose}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={anchorPosition}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <CopyIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('Download')} />*/}\r\n                        {/*</MenuItem>*/}\r\n                        {canBeSelected && (\r\n                            <MenuItem onClick={this.handleSelect}>\r\n                                <ListItemIcon>\r\n                                    <FrameCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Select')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyPublicMessageLink && (\r\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyMessageLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyLink && (\r\n                            <MenuItem onClick={this.handleCopyLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeReplied && (\r\n                            <MenuItem onClick={this.handleReply}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Reply')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBePinned && (\r\n                            <MenuItem onClick={this.handlePin}>\r\n                                {isPinned ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnpinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('UnpinMessage')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <PinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('PinMessage')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeForwarded && (\r\n                            <MenuItem onClick={this.handleForward}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Forward')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeEdited && (\r\n                            <MenuItem onClick={this.handleEdit}>\r\n                                <ListItemIcon>\r\n                                    <EditIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Edit')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeDeleted && (\r\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                                <ListItemIcon>\r\n                                    <DeleteIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Delete')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeUnvoted && (\r\n                            <MenuItem onClick={this.handleUnvote}>\r\n                                <ListItemIcon>\r\n                                    <RemoveCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Unvote')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeClosed && (\r\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\r\n                                <ListItemIcon>\r\n                                    <StopIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('StopPoll')} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={confirmStopPoll}\r\n                    onClose={this.handleCloseConfirm}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleStopPoll} color='primary'>\r\n                            {t('Stop')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMessageMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    copyLink: PropTypes.string\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(MessageMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\r\n    'PinFilled'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PinIcon from '../../Assets/Icons/PinFilled';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Status from './Status';\r\nimport { albumHistoryEquals } from '../../Utils/Common';\r\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Meta.css';\r\n\r\nclass Meta extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, messageIds } = props;\r\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\r\n\r\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\r\n\r\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n            const id = ids[ids.length - 1];\r\n\r\n            const message = MessageStore.get(chatId, id);\r\n            if (!message) return null;\r\n\r\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                prevMessageIds: messageIds,\r\n\r\n                message,\r\n                date,\r\n                editDate,\r\n                interactionInfo,\r\n                isOutgoing,\r\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId, messageIds } = this.props;\r\n\r\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!ids.some(x => x === message_id)) return;\r\n\r\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id, edit_date: editDate } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ editDate });\r\n    };\r\n\r\n    onUpdateMessageInteractionInfo = update => {\r\n        const { chat_id, message_id, interaction_info } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ interactionInfo: interaction_info });\r\n    };\r\n\r\n    render() {\r\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\r\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\r\n\r\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\r\n\r\n        const dateStr = getDate(date);\r\n        const dateHintStr = getDateHint(date);\r\n        const viewsStr = getViews(views);\r\n\r\n        const isCall = isCallMessage(chatId, messageId);\r\n\r\n        return (\r\n            <div className={classNames('meta', className)} style={style}>\r\n                <span>&ensp;</span>\r\n                {views > 0 && (\r\n                    <>\r\n                        <VisibilityIcon className='meta-views-icon' />\r\n                        <span className='meta-views' title={views}>\r\n                            &nbsp;\r\n                            {viewsStr}\r\n                            &nbsp; &nbsp;\r\n                        </span>\r\n                    </>\r\n                )}\r\n                {isPinned && (\r\n                    <>\r\n                        <PinIcon className='meta-pin-icon' />\r\n                        <span>&nbsp;</span>\r\n                    </>\r\n                )}\r\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\r\n                <a onClick={onDateClick}>\r\n                    <span title={dateHintStr}>{dateStr}</span>\r\n                </a>\r\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMeta.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number),\r\n    onDateClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Meta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport Audio from '../Media/Audio';\r\nimport Document from '../Media/Document';\r\nimport MessageMenu from '../MessageMenu';\r\nimport Meta from '../Meta';\r\nimport Photo from '../Media/Photo';\r\nimport Video from '../Media/Video';\r\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './AlbumItem.css';\r\n\r\nclass AlbumItem extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false\r\n    };\r\n\r\n    getAlbumItem = (message, displaySize) => {\r\n        const { chat_id, id, content } = message;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageAudio': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Audio\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            audio={content.audio}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n            case 'messagePhoto': {\r\n                return (\r\n                    <Photo\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                    );\r\n            }\r\n            case 'messageVideo': {\r\n                return (\r\n                    <Video\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        video={content.video}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                );\r\n            }\r\n            case 'messageDocument': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Document\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            document={content.document}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { message } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (MessageStore.selectedItems.size > 0) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { message } = this.props;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        openMedia(chat_id, id);\r\n    };\r\n\r\n    handleSelection = event => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        if (MessageStore.selectedItems.size === 0) return;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { message, position, displaySize, source } = this.props;\r\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        let style = {};\r\n        let className = 'album-document-item';\r\n        if (position) {\r\n            style = { width: position.width, height: position.height * displaySize };\r\n            className = 'album-item'\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\r\n                    onClick={this.handleSelection}\r\n                    onContextMenu={this.handleOpenContextMenu}\r\n                    style={style}>\r\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\r\n                    {(selected || highlighted) && (\r\n                        <div className='album-item-selection'>\r\n                            <div className='album-item-selection-mark'>\r\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAlbumItem.propTypes = {\r\n    message: PropTypes.object,\r\n    position: PropTypes.object,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nexport default AlbumItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './DayMeta.css';\r\n\r\nclass DayMeta extends React.Component {\r\n    componentDidMount() {\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    onClientUpdateLanguage = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { date, i18n } = this.props;\r\n\r\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\r\n        const options = showYear\r\n            ? {\r\n                  day: 'numeric',\r\n                  month: 'long',\r\n                  year: 'numeric'\r\n              }\r\n            : {\r\n                  day: 'numeric',\r\n                  month: 'long'\r\n              };\r\n\r\n        return (\r\n            <div className='day-meta'>\r\n                <div className='day-meta-wrapper'>\r\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDayMeta.propTypes = {\r\n    date: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(DayMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\r\nimport { openUser, openChat } from '../../Actions/Client';\r\nimport './Forward.css';\r\n\r\nclass Forward extends React.Component {\r\n    state = {\r\n        arrowRef: null\r\n    };\r\n\r\n    handleArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        });\r\n    };\r\n\r\n    openForward = event => {\r\n        event.stopPropagation();\r\n\r\n        const { forwardInfo } = this.props;\r\n        if (!forwardInfo) return null;\r\n\r\n        const { origin } = forwardInfo;\r\n\r\n        switch (origin['@type']) {\r\n            case 'messageForwardOriginUser': {\r\n                const { sender_user_id } = origin;\r\n\r\n                openUser(sender_user_id, true);\r\n                break;\r\n            }\r\n            case 'messageForwardOriginHiddenUser': {\r\n                break;\r\n            }\r\n            case 'messageForwardOriginChannel': {\r\n                const { chat_id, message_id } = origin;\r\n\r\n                openChat(chat_id, message_id);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, forwardInfo } = this.props;\r\n        const { arrowRef } = this.state;\r\n\r\n        const title = getForwardTitle(forwardInfo, t);\r\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\r\n            <>\r\n                {t('HidAccount')}\r\n                <span className='forward-arrow' ref={this.handleArrowRef} />\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('message-author', 'forward')}>\r\n                <div>{t('ForwardedMessage')}</div>\r\n                <div className='forward-subtitle'>\r\n                    {t('From') + ' '}\r\n                    {/*<Tooltip*/}\r\n                    {/*    title={tooltip}*/}\r\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\r\n                    {/*    PopperProps={{*/}\r\n                    {/*        popperOptions: {*/}\r\n                    {/*            modifiers: {*/}\r\n                    {/*                arrow: {*/}\r\n                    {/*                    enabled: Boolean(arrowRef),*/}\r\n                    {/*                    element: arrowRef*/}\r\n                    {/*                }*/}\r\n                    {/*            }*/}\r\n                    {/*        }*/}\r\n                    {/*    }}*/}\r\n                    {/*    placement='top'>*/}\r\n                        <a onClick={this.openForward}>{title}</a>\r\n                    {/*</Tooltip>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForward.propTypes = {\r\n    forwardInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(Forward);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\r\n\r\nconst POSITION_FLAG_LEFT = 1;\r\nconst POSITION_FLAG_RIGHT = 2;\r\nconst POSITION_FLAG_TOP = 4;\r\nconst POSITION_FLAG_BOTTOM = 8;\r\n\r\nclass MessageGroupedLayoutAttempt {\r\n    constructor(lineCounts, heights) {\r\n        this.lineCounts = lineCounts;\r\n        this.heights = heights;\r\n    }\r\n}\r\n\r\nclass GroupedMessagePosition {\r\n    aspectRatio;\r\n    isEdge;\r\n    flags;\r\n    isLast;\r\n    leftSpanOffset;\r\n    minX;\r\n    maxX;\r\n    minY;\r\n    maxY;\r\n    height;\r\n    width;\r\n    siblingHeights;\r\n    spanSize;\r\n\r\n    set(minX, maxX, minY, maxY, w, h, flags) {\r\n        this.minX = minX;\r\n        this.maxX = maxX;\r\n        this.minY = minY;\r\n        this.maxY = maxY;\r\n        this.spanSize = w;\r\n        this.width = w;\r\n        this.height = h;\r\n        this.flags = flags;\r\n    }\r\n\r\n    getInfo() {\r\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\r\n    }\r\n}\r\n\r\nclass GroupedMessages {\r\n\r\n    constructor() {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.maxSizeWidth = 800;\r\n        this.hasSibling = false;\r\n        this.scale = 1.0;\r\n    }\r\n\r\n    multiHeight(array, start, end) {\r\n        let sum = 0.0;\r\n        for (let i = start; i < end; i++) {\r\n            sum += array[i];\r\n        }\r\n\r\n        return 800.0 * this.scale / sum;\r\n    }\r\n\r\n    calculate(messages, desiredWidth) {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.messages = messages;\r\n\r\n        if (!messages) return;\r\n        const { length } = messages;\r\n        if (length <= 1) {\r\n            return;\r\n        }\r\n\r\n        this.totalWidth = 0;\r\n        this.totalHeight = 0.0;\r\n\r\n        this.scale = desiredWidth / this.maxSizeWidth;\r\n        this.maxSizeWidth = desiredWidth;\r\n\r\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\r\n        const minHeight = Math.trunc(120 * this.scale);\r\n        const minWidth = Math.trunc(96 * this.scale);\r\n        const paddingsWidth = Math.trunc(32 * this.scale);\r\n        const maxSizeHeight = 814.0 * this.scale;\r\n        let averageAspectRatio = 1.0;\r\n        let proportions = '';\r\n        const isOut = false;\r\n        let maxX = 0;\r\n        let forceCalc = false;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const message = messages[i];\r\n            const { w, h } = GroupedMessages.getWidthHeight(message);\r\n\r\n            const position = new GroupedMessagePosition();\r\n            position.isLast = i === messages.length - 1;\r\n            position.aspectRatio = w / h;\r\n            if (position.aspectRatio > 1.2) {\r\n                proportions += 'w';\r\n            } else if (position.aspectRatio < 0.8) {\r\n                proportions += 'n';\r\n            } else {\r\n                proportions += 'q';\r\n            }\r\n\r\n            averageAspectRatio += position.aspectRatio;\r\n            if (position.aspectRatio > 2.0) {\r\n                forceCalc = true;\r\n            }\r\n\r\n            this.positions.set(message, position);\r\n            this.posArray.push(position);\r\n        }\r\n\r\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\r\n        averageAspectRatio = averageAspectRatio / length;\r\n\r\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\r\n            switch (length) {\r\n                case 2: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n\r\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\r\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = height * 2;\r\n                    } else if (proportions === 'ww' || proportions === 'qq') {\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = width + width;\r\n                        this.totalHeight = height;\r\n                    } else {\r\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\r\n                        let firstWidth = this.maxSizeWidth - secondWidth;\r\n                        if (firstWidth < minWidth) {\r\n                            const diff = minWidth - firstWidth;\r\n                            firstWidth = minWidth;\r\n                            secondWidth -= diff;\r\n                        }\r\n\r\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = firstWidth + secondWidth;\r\n                        this.totalHeight = height;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    if (proportions[0] === 'n')\r\n                    {\r\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\r\n                        const secondHeight = maxSizeHeight - thirdHeight;\r\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\r\n\r\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\r\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n\r\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\r\n                            position3.leftSpanOffset = leftWidth;\r\n                        }\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = leftWidth + rightWidth;\r\n                        this.totalHeight = 1.0;\r\n                    }\r\n                    else\r\n                    {\r\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = firstHeight + secondHeight;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 4: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    const position4 = this.posArray[3];\r\n                    if (proportions[0] === 'w') {\r\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\r\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\r\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\r\n                        const w1 = this.maxSizeWidth - w0 - w2;\r\n                        h = Math.min(maxSizeHeight - h0, h);\r\n                        h /= maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\r\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 2;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = h0 + h;\r\n                    } else {\r\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\r\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\r\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\r\n                        const h2 = 1.0 - h0 - h1;\r\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\r\n\r\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\r\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position4.spanSize = this.maxSizeWidth;\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - w;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - w0;\r\n                            position3.leftSpanOffset = w0;\r\n                            position4.leftSpanOffset = w0;\r\n                        }\r\n                        position1.siblingHeights = [ h0, h1, h2 ];\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = w + w0;\r\n                        this.totalHeight = h0 + h1 + h2;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            const croppedRatios = new Array(this.posArray.length);\r\n            for (let i = 0; i < length; i++) {\r\n                if (averageAspectRatio > 1.1) {\r\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\r\n                } else {\r\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\r\n                }\r\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\r\n            }\r\n\r\n            let firstLine;\r\n            let secondLine;\r\n            let thirdLine;\r\n            let fourthLine;\r\n            const attempts = [];\r\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\r\n                secondLine = croppedRatios.length - firstLine;\r\n                if (firstLine > 3 || secondLine > 3) {\r\n                    continue;\r\n                }\r\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\r\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\r\n                        continue;\r\n                    }\r\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\r\n                }\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\r\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\r\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\r\n                            continue;\r\n                        }\r\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\r\n                    }\r\n                }\r\n            }\r\n\r\n            let optimal = null;\r\n            let optimalDiff = 0.0;\r\n            let maxHeight = this.maxSizeWidth / 3 * 4;\r\n            for (let i = 0; i < attempts.length; i++) {\r\n                const attempt = attempts[i];\r\n                let height = 0;\r\n                let minLineHeight = Number.MAX_VALUE;\r\n                for (let j = 0; j < attempt.heights.length; j++) {\r\n                    height += attempt.heights[j];\r\n                    if (attempt.heights[j] < minLineHeight) {\r\n                        minLineHeight = attempt.heights[j];\r\n                    }\r\n                }\r\n\r\n                let diff = Math.abs(height - maxHeight);\r\n                if (attempt.lineCounts.length > 1) {\r\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\r\n                        diff *= 1.5;\r\n                    }\r\n                }\r\n\r\n                if (minLineHeight < minWidth) {\r\n                    diff *= 1.5;\r\n                }\r\n\r\n                if (optimal === null || diff < optimalDiff) {\r\n                    optimal = attempt;\r\n                    optimalDiff = diff;\r\n                }\r\n            }\r\n\r\n            if (optimal === null) {\r\n                return;\r\n            }\r\n\r\n            let index = 0;\r\n            let y = 0.0;\r\n\r\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\r\n                let c = optimal.lineCounts[i];\r\n                let lineHeight = optimal.heights[i];\r\n                let spanLeft = this.maxSizeWidth;\r\n                let posToFix = null;\r\n                maxX = Math.max(maxX, c - 1);\r\n                for (let j = 0; j < c; j++) {\r\n                    let ratio = croppedRatios[index];\r\n                    let width = Math.trunc(ratio * lineHeight);\r\n                    spanLeft -= width;\r\n                    let pos = this.posArray[index];\r\n                    let flags = 0;\r\n                    if (i === 0) {\r\n                        flags |= POSITION_FLAG_TOP;\r\n                    }\r\n                    if (i === optimal.lineCounts.length - 1) {\r\n                        flags |= POSITION_FLAG_BOTTOM;\r\n                    }\r\n                    if (j === 0) {\r\n                        flags |= POSITION_FLAG_LEFT;\r\n                        if (isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    if (j === c - 1) {\r\n                        flags |= POSITION_FLAG_RIGHT;\r\n                        if (!isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\r\n                    index++;\r\n                }\r\n                posToFix.width += spanLeft;\r\n                posToFix.spanSize += spanLeft;\r\n                y += lineHeight;\r\n            }\r\n\r\n            this.totalWidth = this.maxSizeWidth;\r\n            this.totalHeight = y / maxSizeHeight;\r\n        }\r\n    }\r\n\r\n    static getWidthHeight(message) {\r\n        let w = 0;\r\n        let h = 0;\r\n        let sizes = [];\r\n        switch (message.content['@type']){\r\n            case 'messagePhoto': {\r\n                const { photo, minithumbnail } = message.content;\r\n                if (photo) {\r\n                    sizes = photo.sizes;\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video, thumbnail, minithumbnail } = message.content;\r\n                if (video) {\r\n                    const { width, height } = video;\r\n                    sizes.push({ width, height });\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { thumbnail, minithumbnail } = message.content;\r\n                if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                } else {\r\n                    sizes.push({ width: 90, height: 90 });\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\r\n        if (photoSize) {\r\n            w = photoSize.width;\r\n            h = photoSize.height;\r\n        }\r\n\r\n        return { w, h };\r\n    }\r\n\r\n    static getPhotoSize(sizes, side, byMinSize) {\r\n        if (!sizes || !sizes.length) return null;\r\n\r\n        let lastSide = 0;\r\n        let lastSize = null;\r\n        for (let i = 0; i < sizes.length; i++) {\r\n            const { width: w, height: h } = sizes[i];\r\n\r\n            if (byMinSize) {\r\n                const currentSide = h >= w ? w : h;\r\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n\r\n            } else {\r\n                const currentSide = w >= h ? w : h;\r\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return lastSize;\r\n    }\r\n}\r\n\r\nexport default GroupedMessages;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './UnreadSeparator.css';\r\n\r\nfunction UnreadSeparator(props) {\r\n    const { t } = props;\r\n\r\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\r\n}\r\n\r\nexport default withTranslation()(UnreadSeparator);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './EmptyTile.css';\r\n\r\nfunction EmptyTile(props) {\r\n    const { dialog, small, big, style } = props;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'chat-tile',\r\n                { 'tile-dialog': dialog },\r\n                { 'tile-small': small },\r\n                { 'tile-big': big }\r\n            )}\r\n            style={style}/>\r\n    );\r\n}\r\n\r\nEmptyTile.propTypes = {};\r\n\r\nexport default EmptyTile;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport GroupedMessages from './GroupedMessages';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './Album.css';\r\n\r\nclass Album extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, selected, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n            const grouped = new GroupedMessages();\r\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n            return {\r\n                grouped,\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const grouped = new GroupedMessages();\r\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches, grouped });\r\n        } else {\r\n            this.setState({ grouped });\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n        const { grouped } = this.state;\r\n        if (!grouped) {\r\n            return null;\r\n        }\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': !hasCaption\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender_id.user_id) {\r\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = { width: grouped.totalWidth - 2 - 2 };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = grouped.messages.map(x => (\r\n            <AlbumItem\r\n                key={x.id}\r\n                message={x}\r\n                position={grouped.positions.get(x)}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                    'message-bubble': withBubble,\r\n                                    'message-bubble-out': withBubble && isOutgoing\r\n                                })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    { 'album-caption': hasCaption },\r\n                                    { 'album-title': hasTitle }\r\n                                    )}>\r\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className={classNames('message-text', {\r\n                                        'message-text-1emoji': emojiMatches === 1,\r\n                                        'message-text-2emoji': emojiMatches === 2,\r\n                                        'message-text-3emoji': emojiMatches === 3\r\n                                    })}>\r\n                                    {text}\r\n                                </div>\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default Album;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './DocumentAlbum.css';\r\n\r\nclass DocumentAlbum extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastSelected !== lastSelected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastHighlighted !== lastHighlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n\r\n            return {\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({\r\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\r\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        this.setState({ selected: false, lastSelected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            lastSelected,\r\n            highlighted,\r\n            lastHighlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': false\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = {  };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\r\n            <AlbumItem\r\n                key={m.id}\r\n                message={m}\r\n                position={null}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', 'message-document-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-album-last-selected': lastSelected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-album-last-highlighted': lastHighlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    'document-album',\r\n                                    { 'album-caption': false },\r\n                                    { 'album-title': hasTitle }\r\n                                )}>\r\n                                    <div className='album-wrapper'>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                {/*<div*/}\r\n                                {/*    className={classNames('message-text', {*/}\r\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\r\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\r\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\r\n                                {/*    })}>*/}\r\n                                {/*    {text}*/}\r\n                                {/*</div>*/}\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nDocumentAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default DocumentAlbum;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './FilesDropTarget.css';\r\n\r\nclass FilesDropTarget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { dragParams } = AppStore;\r\n\r\n        this.state = { dragParams };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    onClientUpdateDragging = update => {\r\n        const { dragParams } = AppStore;\r\n\r\n        this.setState({ dragParams });\r\n    };\r\n\r\n    handleDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrop = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n\r\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragLeave = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n    };\r\n\r\n    handleAttachDocumentComplete = files => {\r\n        if (files.length === 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSendFiles',\r\n            files\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dragParams } = this.state;\r\n        if (!dragParams) return null;\r\n\r\n        return (\r\n            <div\r\n                className='files-drop-target'\r\n                onDragEnter={this.handleDragEnter}\r\n                onDragLeave={this.handleDragLeave}\r\n                onDrop={this.handleDrop}>\r\n                <div className='files-drop-target-wrapper'>\r\n                    <div className='files-drop-target-text'>\r\n                        <div className='files-drop-target-title'>Drop files here</div>\r\n                        <div className='files-drop-target-subtitle'>to send them</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilesDropTarget;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './GroupCallJoinPanelSubtitle.css';\r\n\r\nclass GroupCallJoinPanelSubtitle extends React.Component {\r\n    state = {\r\n        participantCount: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participantCount } = this.state;\r\n\r\n        if (nextState.participantCount !== participantCount) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId } = props;\r\n        const { prevGroupCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            let participantCount = 0;\r\n            const groupCall = CallStore.get(groupCallId);\r\n            if (groupCall) {\r\n                const { participant_count } = groupCall;\r\n                participantCount = participant_count;\r\n            }\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                participantCount\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call } = update;\r\n\r\n        if (group_call && group_call.id !== groupCallId) return;\r\n\r\n        let participantCount = 0;\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (groupCall) {\r\n            const { participant_count } = groupCall;\r\n            participantCount = participant_count;\r\n        }\r\n\r\n        this.setState({ participantCount });\r\n    };\r\n\r\n    render() {\r\n        const { t, participantsOnly } = this.props;\r\n        const { participantCount } = this.state;\r\n        // console.log('[call][GroupCallPanelSubtitle] render');\r\n\r\n        return (\r\n            <div className='group-call-join-panel-subtitle'>\r\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nGroupCallJoinPanelSubtitle.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    participantsOnly: PropTypes.bool\r\n};\r\n\r\nGroupCallJoinPanelSubtitle.defaultProps = {\r\n    participantsOnly: false\r\n}\r\n\r\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserTile from '../Tile/UserTile';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './GroupCallRecentParticipants.css';\r\n\r\nfunction speakersEquals(lhs, rhs) {\r\n    if (lhs.length !== rhs.length) return false;\r\n\r\n    for (let i = 0; i < lhs.length; i++) {\r\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\r\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nclass GroupCallRecentParticipants extends React.Component {\r\n    state = {\r\n        speakers: []\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { speakers } = this.state;\r\n\r\n        if (!speakersEquals(nextState.speakers, speakers)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { id } = props;\r\n        const { prevId } = state;\r\n\r\n        if (prevId !== id) {\r\n            let speakers = [];\r\n            const groupCall = CallStore.get(id);\r\n            if (groupCall) {\r\n                const { recent_speakers } = groupCall;\r\n                speakers = recent_speakers;\r\n            }\r\n\r\n            return {\r\n                prevId: id,\r\n                speakers\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    loadContent(speakers) {\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, speakers.map(x => x.user_id));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.speakers);\r\n\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { id } = this.props;\r\n        const { group_call } = update;\r\n\r\n        if (group_call && group_call.id !== id) return;\r\n\r\n        let speakers = [];\r\n        const groupCall = CallStore.get(id);\r\n        if (groupCall) {\r\n            const { recent_speakers } = groupCall;\r\n            speakers = recent_speakers;\r\n        }\r\n\r\n        clearTimeout(this.timeout);\r\n        if (!speakers.length) {\r\n            this.setState({ speakers: [] });\r\n        } else {\r\n            this.loadContent(speakers);\r\n\r\n            this.timeout = setTimeout(() => {\r\n                this.updateSpeakers();\r\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\r\n        }\r\n    };\r\n\r\n    updateSpeakers() {\r\n        const { id } = this.props;\r\n\r\n        let speakers = [];\r\n        const groupCall = CallStore.get(id);\r\n        if (groupCall) {\r\n            const { recent_speakers } = groupCall;\r\n            speakers = recent_speakers;\r\n        }\r\n\r\n        this.setState({ speakers });\r\n    }\r\n\r\n    render() {\r\n        const { speakers } = this.state;\r\n        if (!speakers) return null;\r\n        if (!speakers.length) return null;\r\n\r\n        return (\r\n            <div className='group-call-recent-participants'>\r\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallRecentParticipants.propTypes = {\r\n    id: PropTypes.number\r\n};\r\n\r\nexport default GroupCallRecentParticipants;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\r\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './GroupCallJoinPanel.css';\r\n\r\nclass GroupCallJoinPanel extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n\r\n            let groupCallId = 0;\r\n            if (chat) {\r\n                const { voice_chat_group_call_id } = chat;\r\n                groupCallId = voice_chat_group_call_id;\r\n            }\r\n\r\n            const { currentGroupCall } = CallStore;\r\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                groupCallId,\r\n                isCurrent\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { isCurrent, groupCallId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.groupCallId !== groupCallId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isCurrent !== isCurrent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\r\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\r\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\r\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\r\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\r\n    }\r\n\r\n    handleUpdateChatVoiceChat = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if ( chatId !== chat_id) return;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n\r\n        this.setState({\r\n            groupCallId: voice_chat_group_call_id\r\n        });\r\n    }\r\n\r\n    handleUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\r\n\r\n        this.setState({\r\n            groupCallId: group_call ? group_call.id : 0\r\n        });\r\n    };\r\n\r\n    handleClientUpdateGroupCall = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\r\n\r\n        this.setState({ isCurrent });\r\n    };\r\n\r\n    handleJoin = async () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n        const groupCall = CallStore.get(voice_chat_group_call_id);\r\n        console.log('[call] handleJoin', groupCall);\r\n        if (groupCall && groupCall.is_joined) return;\r\n\r\n        const muted = true;\r\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const { groupCallId, isCurrent } = this.state;\r\n        if (!groupCallId) return null;\r\n        if (isCurrent) return null;\r\n\r\n        return (\r\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\r\n                <div className='group-call-join-panel-content'>\r\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\r\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\r\n                </div>\r\n                <GroupCallRecentParticipants id={groupCallId}/>\r\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\r\n                    {t('VoipChatJoin')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallJoinPanel.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallJoinPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDisplayName } from '../../Utils/HOC';\r\n\r\nconst MessageContext = React.createContext({\r\n    chatId: 0,\r\n    messageId: 0\r\n});\r\n\r\nexport default MessageContext;\r\n\r\nexport function withMessage(Component) {\r\n    class MessageComponent extends React.Component {\r\n        render() {\r\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\r\n        }\r\n    }\r\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\r\n\r\n    return MessageComponent;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem } from '@material-ui/core';\r\nimport User from '../Tile/User';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './InputBoxHints.css'\r\n\r\nclass InputBoxHints extends React.Component {\r\n    state = {\r\n        local: [],\r\n        global: [],\r\n        id: null\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { local, global, id } = this.state;\r\n\r\n        if (nextState.local !== local) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.global !== global) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.id !== id) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    onClientUpdateHintsClose = update => {\r\n        this.setState({\r\n            id: null,\r\n            local: [],\r\n            global: []\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsGlobal = update => {\r\n        const { id, global } = update;\r\n        if (this.state.id !== id) return;\r\n\r\n        this.setState({\r\n            id,\r\n            global\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsLocal = update => {\r\n        const { id, local } = update;\r\n\r\n        this.setState({\r\n            id,\r\n            local,\r\n            global: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { local, global } = this.state;\r\n\r\n        const results = (local || []).concat(global || []);\r\n\r\n        // console.log('[hints] render', local, global, results);\r\n        if (!results.length) return null;\r\n\r\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nInputBoxHints.propTypes = {};\r\n\r\nexport default InputBoxHints;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\r\n    'ArrowTopRight'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\r\n    'ShareFilled'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withMessage } from '../MessageContext';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport PendingIcon from '../../../Assets/Icons/Pending';\r\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\r\nimport { getUserFullName } from '../../../Utils/User';\r\nimport { getChatTitle } from '../../../Utils/Chat';\r\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\r\nimport { openChatSelect } from '../../../Actions/Message';\r\nimport LStore from '../../../Stores/LocalizationStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './KeyboardButton.css';\r\n\r\nclass KeyboardButton extends React.Component {\r\n    state = {\r\n        loading: false\r\n    }\r\n\r\n    handleCallbackQueryAnswer = (type, result, message) => {\r\n        const { chatId } = this.props;\r\n        const { sender_id, content, via_bot_user_id } = message;\r\n        const { text, show_alert, url } = result;\r\n        const { game } = content;\r\n\r\n        let title = '';\r\n        if (message) {\r\n            if (via_bot_user_id) {\r\n                title = getUserFullName(via_bot_user_id, null);\r\n            } else {\r\n                title = getChatTitle(chatId, false);\r\n            }\r\n        }\r\n        title = title || LStore.getString('Bot');\r\n\r\n        if (text) {\r\n            if (show_alert) {\r\n                showAlert({\r\n                    title,\r\n                    message: text,\r\n                    ok: LStore.getString('OK')\r\n                });\r\n            } else {\r\n                showSnackbar(text, closeSnackbar => snackKey => {\r\n                    return (\r\n                        <IconButton\r\n                            key='close'\r\n                            aria-label='Close'\r\n                            color='inherit'\r\n                            className='notification-close-button'\r\n                            onClick={() => { closeSnackbar(snackKey); }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    )\r\n                });\r\n            }\r\n        } else if (url) {\r\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                const userId = via_bot_user_id ? via_bot_user_id : sender_id.user_id;\r\n                const user = UserStore.get(userId);\r\n\r\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\r\n            } else {\r\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, type } = this.props;\r\n\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                showAlert({\r\n                    title: LStore.getString('AppName'),\r\n                    message: LStore.getString('PaymentsNotSupported'),\r\n                    ok: LStore.getString('OK')\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                /// gamee, querty_bot\r\n\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender_id, content, via_bot_user_id } = message;\r\n                if (!content) break;\r\n\r\n                let payload = null;\r\n                let game = null;\r\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                    game = content.game;\r\n                    if (!game) break;\r\n\r\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\r\n                } else {\r\n                    payload = { '@type': 'callbackQueryPayloadData', data };\r\n                }\r\n\r\n                this.setState({ loading: true });\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getCallbackQueryAnswer',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    payload\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                this.handleCallbackQueryAnswer(type, result, message);\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                /// BotFather + transfer bot\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                this.setState({ loading: true });\r\n                const passwordState = await TdLibController.send({\r\n                    '@type': 'getPasswordState'\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                const { has_password } = passwordState;\r\n                if (!has_password) break;\r\n\r\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\r\n                    console.log('[pwd] onPassword', password);\r\n                    this.setState({ loading: true });\r\n                    let error = null;\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'getCallbackQueryAnswer',\r\n                        chat_id: chatId,\r\n                        message_id: messageId,\r\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\r\n                    }).catch(e => {\r\n                        error = e;\r\n                    }).finally(() => {\r\n                        this.setState({ loading: false });\r\n                    });\r\n\r\n                    if (error) {\r\n                        console.log('[pwd] onPassword error', error);\r\n                        onError && onError(error);\r\n                    } else if (result) {\r\n                        console.log('[pwd] onPassword result', result);\r\n                        onCloseDialog && onCloseDialog();\r\n                        this.handleCallbackQueryAnswer(type, result, message);\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                const { url, id, forward_text } = type;\r\n\r\n                this.setState({ loading: true });\r\n                let hasError = false;\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getLoginUrlInfo',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    button_id: id\r\n                }).catch(e => {\r\n                    hasError = true;\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                if (hasError) {\r\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                } else {\r\n                    switch (result['@type']) {\r\n                        case 'loginUrlInfoOpen': {\r\n                            const { url, skip_confirm } = result;\r\n\r\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\r\n                            break;\r\n                        }\r\n                        case 'loginUrlInfoRequestConfirmation': {\r\n                            const { url } = result;\r\n\r\n\r\n                            console.log('[login] result', result);\r\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                /// youtube\r\n                const { in_current_chat, query } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender_id, via_bot_user_id } = message;\r\n                let userId = sender_id.user_id;\r\n                if (via_bot_user_id !== 0) {\r\n                    userId = via_bot_user_id;\r\n                }\r\n\r\n                const user = UserStore.get(userId);\r\n                if (!user) break;\r\n\r\n                const inline = `@${user.username} ${query}`;\r\n\r\n                if (in_current_chat){\r\n                    setText(inline);\r\n                } else {\r\n                    openChatSelect({ switchInline: inline });\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                /// qwerty_bot\r\n                const { url } = type;\r\n\r\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    getIcon(type) {\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                const { in_current_chat } = type;\r\n\r\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { text, type } = this.props;\r\n        const { loading } = this.state;\r\n\r\n        const icon = this.getIcon(type);\r\n\r\n        return (\r\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\r\n                {text}\r\n                {icon}\r\n                {loading && (\r\n                    <PendingIcon\r\n                        className='keyboard-button-progress'\r\n                        viewBox='0 0 14 14'\r\n                    />\r\n                )}\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nKeyboardButton.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    type: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withMessage(KeyboardButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardButton from './KeyboardButton';\r\nimport './KeyboardRow.css';\r\n\r\nclass KeyboardRow extends React.Component {\r\n    render() {\r\n        const { row } = this.props;\r\n        if (!row) return null;\r\n        if (!row.length) return null;\r\n\r\n        return (\r\n            <div className='keyboard-row'>\r\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nKeyboardRow.propTypes = {\r\n    row: PropTypes.array\r\n};\r\n\r\nexport default KeyboardRow;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardRow from './KeyboardRow';\r\nimport MessageContext from '../MessageContext';\r\nimport './ReplyMarkup.css';\r\n\r\nclass ReplyMarkup extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId, prevMessageId } = state;\r\n        const { chatId, messageId } = props;\r\n\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                message: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { markup } = this.props;\r\n        const { message } = this.state;\r\n\r\n        if (!markup) return null;\r\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\r\n\r\n        const { rows } = markup;\r\n        if (!rows.length) return null;\r\n\r\n        return (\r\n            <div className='reply-markup'>\r\n                <MessageContext.Provider value={message}>\r\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\r\n                </MessageContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyMarkup.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    markup: PropTypes.object\r\n};\r\n\r\nexport default ReplyMarkup;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Animation from './Animation';\r\nimport Audio from './Audio';\r\nimport Document from './Document';\r\nimport Photo from './Photo';\r\nimport Sticker, { StickerSourceEnum } from './Sticker';\r\nimport Video from './Video';\r\nimport VideoNote from './VideoNote';\r\nimport VoiceNote from './VoiceNote';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { openInstantView } from '../../../Actions/InstantView';\r\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\r\nimport {\r\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\r\n    PHOTO_DISPLAY_SIZE,\r\n    PHOTO_DISPLAY_SMALL_SIZE,\r\n    PHOTO_SIZE\r\n} from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './WebPage.css';\r\n\r\nclass WebPage extends React.Component {\r\n    getMedia = () => {\r\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const {\r\n            site_name,\r\n            title,\r\n            description,\r\n            url,\r\n            photo,\r\n            animation,\r\n            video,\r\n            audio,\r\n            document,\r\n            voice_note,\r\n            video_note,\r\n            sticker,\r\n            type\r\n        } = web_page;\r\n\r\n        if (sticker) {\r\n            return [\r\n                null,\r\n                <Sticker\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    sticker={sticker}\r\n                    openMedia={openMedia}\r\n                    source={StickerSourceEnum.MESSAGE}\r\n                />\r\n            ];\r\n        }\r\n\r\n        if (voice_note) {\r\n            return [\r\n                null,\r\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (video_note) {\r\n            return [\r\n                null,\r\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (audio) {\r\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (document) {\r\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return [\r\n                    null,\r\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\r\n                ];\r\n            }\r\n        }\r\n\r\n        if (video) {\r\n            if (video.thumbnail) {\r\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, size);\r\n            const smallPhoto =\r\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\r\n                (site_name || title || description && description.text.length > 0) &&\r\n                photoSize &&\r\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\r\n            let totalLength = 0;\r\n            if (site_name) {\r\n                totalLength += site_name.length;\r\n            }\r\n            if (title) {\r\n                totalLength += title.length;\r\n            }\r\n            if (description) {\r\n                totalLength += description.text.length;\r\n            }\r\n\r\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\r\n\r\n            const style =\r\n                smallPhoto || extraSmallPhoto\r\n                    ? {\r\n                          float: 'right',\r\n                          marginLeft: 6\r\n                      }\r\n                    : {};\r\n\r\n            return [\r\n                smallPhoto ? (\r\n                    <Photo\r\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\r\n                        style={style}\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        photo={photo}\r\n                        openMedia={openMedia}\r\n                    />\r\n                ) : null,\r\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\r\n            ];\r\n        }\r\n\r\n        return [null, null];\r\n    };\r\n\r\n    handleInstantViewClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { url } = web_page;\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    getWebPage() {\r\n        const { chatId, messageId, t } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { instant_view_version, site_name } = web_page;\r\n        let { description, title } = web_page;\r\n\r\n        if (description['@type'] === 'formattedText') {\r\n            description = getFormattedText(description);\r\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\r\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\r\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\r\n\r\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\r\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\r\n        }\r\n\r\n        const webPageContent = (\r\n            <>\r\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\r\n                {title && <div className='web-page-title'>{title}</div>}\r\n                {description && <div className='web-page-description'>{description}</div>}\r\n            </>\r\n        );\r\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\r\n        const webPageInstantView = instant_view_version > 0 && (\r\n            <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                classes={{\r\n                    outlinedPrimary: 'message-control',\r\n                    disabled: 'message-control-disabled'\r\n                }}\r\n                fullWidth\r\n                onClick={this.handleInstantViewClick}\r\n                className='web-page-button'>\r\n                <SvgIcon>\r\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\r\n                </SvgIcon>\r\n                {t('InstantView')}\r\n            </Button>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {webPageMediaTop}\r\n                {webPageContent}\r\n                {webPageMediaBottom}\r\n                {webPageInstantView}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { meta } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='web-page'>\r\n                    <div className='border' />\r\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\r\n                </div>\r\n                {meta}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nWebPage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    displaySmallSize: PropTypes.number,\r\n    displayExtraSmallSize: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nWebPage.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\r\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\r\n};\r\n\r\nexport default withTranslation()(WebPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport DayMeta from './DayMeta';\r\nimport Reply from './Reply';\r\nimport ReplyMarkup from './Markup/ReplyMarkup';\r\nimport Forward from './Forward';\r\nimport Meta from './Meta';\r\nimport MessageAuthor from './MessageAuthor';\r\nimport MessageMenu from './MessageMenu';\r\nimport UserTile from '../Tile/UserTile';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport EmptyTile from '../Tile/EmptyTile';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport WebPage from './Media/WebPage';\r\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\r\nimport {\r\n    getEmojiMatches,\r\n    getText,\r\n    getWebPage,\r\n    openMedia,\r\n    showMessageForward,\r\n    isMetaBubble,\r\n    canMessageBeForwarded,\r\n    getMessageStyle,\r\n    isEmptySelection\r\n} from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport {\r\n    openUser,\r\n    openChat,\r\n    selectMessage,\r\n    openReply,\r\n    replyMessage,\r\n    forwardMessages\r\n} from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Message.css';\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            emojiMatches: getEmojiMatches(chatId, messageId),\r\n            selected: false,\r\n            highlighted: false,\r\n            shook: false,\r\n\r\n            contextMenu: false,\r\n            copyLink: null,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\r\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('Message.shouldComponentUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('Message.shouldComponentUpdate true messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            // console.log('Message.shouldComponentUpdate true sendingState');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTail !== showTail) {\r\n            // console.log('Message.shouldComponentUpdate true showTail');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTitle !== showTitle) {\r\n            // console.log('Message.shouldComponentUpdate true showTitle');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('Message.shouldComponentUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            // console.log('Message.shouldComponentUpdate true selected');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            // console.log('Message.shouldComponentUpdate true highlighted');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            // console.log('Message.shouldComponentUpdate true shook');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\r\n            return true;\r\n        }\r\n\r\n        // console.log('Message.shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (shook) {\r\n                this.setState({ shook: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ shook: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ shook: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageContent = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageEdited = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    handleUpdateMessageContentAndEditedOnce = () => {\r\n        const { updateMessageContent, updateMessageEdited } = this;\r\n        this.updateMessageContent = null;\r\n        this.updateMessageEdited = null;\r\n\r\n        if (!updateMessageContent && !updateMessageEdited) return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        let handled = false;\r\n        if (updateMessageContent) {\r\n            const { emojiMatches } = this.state;\r\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\r\n            if (newEmojiMatches !== emojiMatches) {\r\n                handled = true;\r\n                this.setState({ emojiMatches: newEmojiMatches });\r\n            }\r\n        }\r\n\r\n        if (handled) return;\r\n\r\n        startMessageEditing(chatId, messageId);\r\n        this.forceUpdate(() => {\r\n            stopMessageEditing(chatId, messageId);\r\n        });\r\n    };\r\n\r\n    handleSelectUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    handleSelectChat = chatId => {\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleSelection = () => {\r\n        if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDateClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const canBeReplied = canSendMessages(chatId);\r\n        if (canBeReplied) {\r\n            replyMessage(chatId, messageId);\r\n\r\n            return;\r\n        }\r\n\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        if (canBeForwarded) {\r\n            forwardMessages(chatId, [messageId]);\r\n        }\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n    };\r\n\r\n    handleMouseOver = () => {\r\n        this.mouseDown = false;\r\n    };\r\n\r\n    handleMouseOut = () => {\r\n        this.mouseOut = false;\r\n    };\r\n\r\n    handleReplyClick = () => {\r\n        const { chatId, messageId } = this.props;\r\n        openReply(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        let { showTail } = this.props;\r\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        // console.log('Message.render', messageId);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id, reply_markup } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n            />\r\n        );\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': isMetaBubble(chatId, messageId)\r\n                })}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const webPage = getWebPage(message);\r\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender_id.user_id) {\r\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = getMessageStyle(chatId, messageId);\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded =\r\n            !hasCaption  && (\r\n                content['@type'] === 'messageAnimation' ||\r\n                content['@type'] === 'messageVideo' ||\r\n                content['@type'] === 'messagePhoto' ||\r\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\r\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\r\n\r\n\r\n        // console.log('[p] m.render id=' + message.id);\r\n\r\n        // return (\r\n        //     <StubMessage>\r\n        //         {text}\r\n        //         {media}\r\n        //         <WebPage\r\n        //             chatId={chatId}\r\n        //             messageId={messageId}\r\n        //             openMedia={this.openMedia}\r\n        //             meta={inlineMeta}\r\n        //         />\r\n        //     </StubMessage>\r\n        // );\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div>\r\n                                <div\r\n                                    className={classNames('message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                    style={style}>\r\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                        <div className='message-title'>\r\n                                            {showTitle && !showForward && (\r\n                                                <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser/>\r\n                                            )}\r\n                                            {showForward && <Forward forwardInfo={forward_info} />}\r\n                                        </div>\r\n                                    )}\r\n                                    {showReply && (\r\n                                        <Reply\r\n                                            chatId={chatId}\r\n                                            messageId={reply_to_message_id}\r\n                                            onClick={this.handleReplyClick}\r\n                                        />\r\n                                    )}\r\n                                    {media}\r\n                                    <div\r\n                                        className={classNames('message-text', {\r\n                                            'message-text-1emoji': emojiMatches === 1,\r\n                                            'message-text-2emoji': emojiMatches === 2,\r\n                                            'message-text-3emoji': emojiMatches === 3\r\n                                        })}>\r\n                                        {text}\r\n                                    </div>\r\n                                    {webPage && (\r\n                                        <WebPage\r\n                                            chatId={chatId}\r\n                                            messageId={messageId}\r\n                                            openMedia={this.openMedia}\r\n                                            meta={inlineMeta}\r\n                                        />\r\n                                    )}\r\n                                    {showMeta && meta}\r\n                                </div>\r\n                                {reply_markup && (\r\n                                    <ReplyMarkup\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        markup={reply_markup}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    sendingState: PropTypes.object,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n}\r\n\r\nMessage.defaultProps = {\r\n    sendingState: null,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showDate: false\r\n}\r\n\r\n// const enhance = compose(\r\n//     withSaveRef(),\r\n//     withTranslation(),\r\n//     withRestoreRef()\r\n// );\r\n\r\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\r\n\r\nexport default message;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport DayMeta from './DayMeta';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport Photo from './Media/Photo';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './ServiceMessage.css';\r\nimport MessageMenu from './MessageMenu';\r\n\r\nconst chatPhotoStyle = {\r\n    width: 96,\r\n    height: 96,\r\n    borderRadius: '50%',\r\n    margin: '0 auto 5px'\r\n};\r\n\r\nclass ServiceMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            highlighted: false,\r\n            contextMenu: false,\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\r\n        const { highlighted, contextMenu } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\r\n        const { highlighted, contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content, date } = message;\r\n        if (!content) return null;\r\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\r\n\r\n        const { photo } = content;\r\n\r\n        const text = getServiceMessageContent(message, true);\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='service-message-wrapper'>\r\n                        <div className='service-message-content'>\r\n                            <div>{text}</div>\r\n                        </div>\r\n                    </div>\r\n                    {photo && (\r\n                        <Photo\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photo={photo}\r\n                            displaySize={96}\r\n                            style={chatPhotoStyle}\r\n                            openMedia={this.openMedia}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={null}\r\n                    source={'chat'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nServiceMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showUnreadSeparator: PropTypes.bool\r\n}\r\n\r\nServiceMessage.defaultProps = {\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ServiceMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './Placeholder.css';\r\n\r\nclass Placeholder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\r\n        this.state = {\r\n            chatId,\r\n            dialogsReady,\r\n            cacheLoaded\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextState.chatId !== this.state.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { cacheLoaded } = AppStore;\r\n\r\n        this.setState({ cacheLoaded });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId: chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { dialogsReady } = AppStore;\r\n\r\n        this.setState({ dialogsReady });\r\n    };\r\n\r\n    render() {\r\n        const { t, force } = this.props;\r\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\r\n        if (chatId) return null;\r\n        // if (!dialogsReady && !cacheLoaded) return null;\r\n\r\n        return (\r\n            <div className='placeholder'>\r\n                <div className='placeholder-wrapper'>\r\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\r\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Placeholder);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './ScrollDownButton.css';\r\n\r\nclass ScrollDownButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='scroll-down-button'>\r\n                <IconButton disableRipple={true} onMouseDown={onClick}>\r\n                    <ArrowDownwardIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScrollDownButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollDownButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from './StickerPreview';\r\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\r\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersHint.css';\r\n\r\nclass StickersHint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hintsRef = React.createRef();\r\n\r\n        this.state = {\r\n            hint: null,\r\n            items: [],\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    onClientUpdateRemoteStickersHint = update => {\r\n        const { hint } = update;\r\n        const { hint: currentHint } = this.state;\r\n\r\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\r\n\r\n        this.setState({\r\n            hint: StickerStore.hint,\r\n            items: this.getItems(StickerStore.hint)\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    onClientUpdateLocalStickersHint = update => {\r\n        const { hint } = update;\r\n\r\n        this.setState({\r\n            hint,\r\n            items: this.getItems(hint),\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        });\r\n\r\n        if (!hint) return;\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    handleSend = sticker => {\r\n        const { cancelSend } = this.state;\r\n        if (cancelSend) return;\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { items } = this.state;\r\n\r\n        const sticker = items.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        let stickersPerRow = 8;\r\n        if (this.hintsRef && this.hintsRef.current) {\r\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\r\n        }\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const row = Math.floor(index / stickersPerRow);\r\n        const column = index % stickersPerRow;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * prevRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * prevRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(stickersPerRow * row + prevColumn);\r\n        }\r\n        if (nextColumn < stickersPerRow) {\r\n            indexes.push(stickersPerRow * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * nextRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * nextRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true });\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateStickerPreview',\r\n                    sticker\r\n                });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker, timestamp: 0, showPreview: false });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    getItems = hint => {\r\n        const items = [];\r\n        if (!hint) return items;\r\n\r\n        const dict = new Map();\r\n        const { stickers, foundStickers } = hint;\r\n        if (stickers) {\r\n            stickers.stickers.forEach(x => {\r\n                items.push(x);\r\n                dict.set(x.sticker.id, x.sticker.id);\r\n            });\r\n        }\r\n        if (foundStickers) {\r\n            foundStickers.stickers.forEach(x => {\r\n                if (!dict.has(x.sticker.id)) {\r\n                    items.push(x);\r\n                    dict.set(x.sticker.id, x.sticker.id);\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    getSticker(stickerId) {\r\n        const { items } = this.state;\r\n\r\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\r\n    }\r\n\r\n    render() {\r\n        const { hint, items, sticker, showPreview } = this.state;\r\n        if (!hint) return null;\r\n        if (!items) return null;\r\n        if (!items.length) return null;\r\n\r\n        const controls = items.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\r\n                onClick={() => this.handleSend(x)}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.HINTS}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StickersHint;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport ActionBar from './ActionBar';\r\nimport Album from '../Message/Album/Album';\r\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\r\nimport FilesDropTarget from './FilesDropTarget';\r\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\r\nimport InputBoxHints from './InputBoxHints';\r\nimport Message from '../Message/Message';\r\nimport ServiceMessage from '../Message/ServiceMessage';\r\nimport Placeholder from './Placeholder';\r\nimport ScrollDownButton from './ScrollDownButton';\r\nimport StickersHint from './StickersHint';\r\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\r\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\r\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\r\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\r\nimport { sendBotStartMessage } from '../../Actions/Message';\r\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessagesList.css';\r\n\r\nconst ScrollBehaviorEnum = Object.freeze({\r\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\r\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\r\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\r\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\r\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\r\n    NONE: 'NONE'\r\n});\r\n\r\nclass MessagesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lastRequests = new Map();\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n\r\n        this.state = {\r\n            prevChatId: 0,\r\n            prevMessageId: null,\r\n            playerOpened: false,\r\n            history: [],\r\n            clearHistory: false,\r\n            selectionActive: false,\r\n            separatorMessageId: 0,\r\n            scrollDownVisible: false,\r\n            replyHistory: []\r\n        };\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemsRef = React.createRef();\r\n        this.scrollDownButtonRef = React.createRef();\r\n\r\n        this.defferedActions = [];\r\n        this.itemsMap = new Map();\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\r\n    }\r\n\r\n    hasLastMessage() {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return false;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return true;\r\n\r\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                prevMessageId: props.messageId,\r\n                clearHistory: false,\r\n                selectionActive: false,\r\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\r\n                scrollDownVisible:\r\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\r\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const list = this.listRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        this.snapshot = snapshot;\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollDownVisible } = this.state;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] componentDidUpdate\r\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\r\n        //     scrollDownVisible=${scrollDownVisible}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[ml] shouldComponentUpdate chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('[ml] shouldComponentUpdate messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\r\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playerOpened !== playerOpened) {\r\n            // console.log('[ml] shouldComponentUpdate playerOpened');\r\n            return true;\r\n        }\r\n\r\n        if (!historyEquals(nextState.history, history)) {\r\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dragging !== dragging) {\r\n            // console.log('[ml] shouldComponentUpdate dragging');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            // console.log('[ml] shouldComponentUpdate clearHistory');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selectionActive !== selectionActive) {\r\n            // console.log('[ml] shouldComponentUpdate selectionActive');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[ml] shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId, messageId } = this.props;\r\n        this.handleSelectChat(chatId, null, messageId, null);\r\n\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateStartMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { history } = this.state;\r\n        if (!history.length) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\r\n            return;\r\n        }\r\n\r\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\r\n\r\n        this.scrollBottomAfterEditing = {\r\n            chatId,\r\n            messageId\r\n        };\r\n    };\r\n\r\n    onClientUpdateStopMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { scrollBottomAfterEditing } = this;\r\n        if (!scrollBottomAfterEditing) return;\r\n\r\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\r\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n        this.scrollBottomAfterEditing = null;\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id, is_pinned } = update;\r\n        const { chatId, filter } = this.props;\r\n        if (chatId !== chat_id) return;\r\n        if (!filter) return;\r\n\r\n        if (is_pinned) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n\r\n            const list = this.listRef.current;\r\n\r\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            }\r\n\r\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n            const history = [message];\r\n            this.scrollBehaviorNone = true;\r\n            this.insert(history, newState, () => {\r\n                this.scrollBehaviorNone = false;\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, history);\r\n            this.viewMessages(history);\r\n        } else {\r\n            this.deleteHistory([message_id]);\r\n\r\n            const media = MessageStore.getMedia(chatId);\r\n            if (media && !media.pinned.length) {\r\n                closePinned();\r\n            }\r\n        }\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        // if (event.keyCode === 27) {\r\n        //     if (MessageStore.selectedItems.size > 0) {\r\n        //         console.log('[k] messagesList onKeyDown');\r\n        //         clearSelection();\r\n        //         event.stopPropagation();\r\n        //         event.preventDefault();\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    onClientUpdateTryEditMessage = async update => {\r\n        if (this.hasLastMessage()) {\r\n            const { history } = this.state;\r\n\r\n            for (let i = history.length - 1; i >= 0; i--) {\r\n                const message = history[i];\r\n                if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                    editMessage(message.chat_id, message.id);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: this.props.chatId,\r\n            query: '',\r\n            sender_user_id: UserStore.getMyId(),\r\n            from_message_id: 0,\r\n            offset: 0,\r\n            limit: 100,\r\n            filter: { '@type': 'searchMessagesFilterEmpty' }\r\n        });\r\n\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            const message = result.messages[i];\r\n            if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                editMessage(message.chat_id, message.id);\r\n\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogsReady = async update => {\r\n        const { list } = update;\r\n        if (!list) return;\r\n        if (list['@type'] !== 'chatListMain') return;\r\n\r\n        const { history } = this.state;\r\n        if (history && history.length > 0) return;\r\n\r\n        await FileStore.initDB(async () => {\r\n            const { chatId, messageId } = this.props;\r\n            if (chatId) {\r\n                const chat = ChatStore.get(chatId);\r\n                if (chat) {\r\n                    const { type } = chat;\r\n                    switch (type['@type']) {\r\n                        case 'chatTypePrivate':\r\n                        case 'chatTypeSecret': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createPrivateChat',\r\n                                user_id: type.user_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeBasicGroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createBasicGroupChat',\r\n                                basic_group_id: type.basic_group_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeSupergroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createSupergroupChat',\r\n                                supergroup_id: type.supergroup_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.handleSelectChat(chatId, 0, messageId, 0);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) {\r\n            this.defferedActions.forEach(x => x());\r\n            this.defferedActions = [];\r\n        }\r\n    };\r\n\r\n    onClientUpdateOpenReply = update => {\r\n        const { chatId, messageId } = update;\r\n        const { replyHistory } = this.state;\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\r\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\r\n            return;\r\n        }\r\n\r\n        replyHistory.push({ chatId, messageId });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const list = this.listRef.current;\r\n\r\n        const prevOffsetHeight = list.offsetHeight;\r\n        const prevScrollTop = list.scrollTop;\r\n        this.setState({ playerOpened: true }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaEnding = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        this.prevOffsetHeight = list.offsetHeight;\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    onClientUpdateMediaEnd = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        const { prevScrollTop, prevOffsetHeight } = this;\r\n        this.setState({ playerOpened: false }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateSelection = update => {\r\n        this.setState({\r\n            selectionActive: MessageStore.selectedItems.size > 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.setState({ clearHistory: update.inProgress });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (history.findIndex(x => x.id === message_id) !== -1) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n            if (!message) return;\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, [message]);\r\n        }\r\n    };\r\n\r\n    onUpdateMessageSendSucceeded = update => {\r\n        const { message, old_message_id } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        // let handleSendSucceeded = false;\r\n        // const { content } = message;\r\n        // switch (content['@type']) {\r\n        //     case 'messagePoll': {\r\n        //         handleSendSucceeded = true;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        //\r\n        // if (!handleSendSucceeded) return;\r\n\r\n        const scrollBehavior = message.is_outgoing\r\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\r\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\r\n\r\n        this.replaceMessage(old_message_id, message, () => {\r\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            }\r\n\r\n            this.updateItemsInView();\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n        this.viewMessages([message]);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        if (!this.hasLastMessage()) return;\r\n\r\n        const { message } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        const { date } = message;\r\n        if (date === 0) return;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n\r\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n        const history = [message];\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(history, newState, () => {\r\n            this.scrollBehaviorNone = false;\r\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, history);\r\n        this.viewMessages(history);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (!is_permanent) return;\r\n\r\n        this.deleteHistory(message_ids);\r\n    };\r\n\r\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\r\n        const chat = ChatStore.get(chatId);\r\n        const previousChat = ChatStore.get(previousChatId);\r\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n        const { sessionId } = this;\r\n\r\n        this.prevScrollTop = null;\r\n        this.defferedActions = [];\r\n\r\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\r\n\r\n        if (chat) {\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                TdLibController.send({\r\n                    '@type': 'openChat',\r\n                    chat_id: chatId\r\n                });\r\n            }\r\n\r\n            const unread = !messageId && chat.unread_count > 1;\r\n            let fromMessageId = 0;\r\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\r\n                fromMessageId = chat.last_read_inbox_message_id;\r\n            } else if (messageId) {\r\n                fromMessageId = messageId;\r\n            } else if (scrollPosition) {\r\n                fromMessageId = scrollPosition.messageId;\r\n            }\r\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\r\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\r\n\r\n            sessionId.loading = true;\r\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\r\n            .catch(error => {\r\n                return {\r\n                    '@type': 'messages',\r\n                    messages: [],\r\n                    total_count: 0\r\n                };\r\n            }).finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            MessageStore.setItems(result.messages);\r\n            result.messages.reverse();\r\n\r\n            let separatorMessageId = this.state.separatorMessageId;\r\n            if (chatId !== previousChatId) {\r\n                separatorMessageId = Number.MAX_VALUE;\r\n                if (chat && chat.unread_count > 1) {\r\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\r\n                        const { id } = result.messages[i];\r\n                        if (\r\n                            !result.messages[i].is_outgoing &&\r\n                            id > chat.last_read_inbox_message_id &&\r\n                            id < separatorMessageId\r\n                        ) {\r\n                            separatorMessageId = id;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\r\n            }\r\n\r\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            if (messageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\r\n            } else if (unread && separatorMessageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\r\n            } else if (scrollPosition) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\r\n            }\r\n\r\n            this.cancelUpdatePinnedMessage = true;\r\n            this.replace(separatorMessageId, result.messages, () => {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\r\n                if (messageId) {\r\n                    highlightMessage(chatId, messageId);\r\n                }\r\n                requestAnimationFrame(() => {\r\n                    this.cancelUpdatePinnedMessage = false;\r\n                });\r\n\r\n                this.loadIncompleteHistory(result, limit);\r\n            });\r\n\r\n            // load files\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, result.messages);\r\n            this.viewMessages(result.messages);\r\n\r\n            loadChatsContent(store, [chatId]);\r\n            loadDraftContent(store, chatId);\r\n\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                // getChatFullInfo(chatId);\r\n                getChatMedia(chatId);\r\n                if (this.props.options) {\r\n                    const { botStartMessage } = this.props.options;\r\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\r\n                        const { botUserId, parameter } = botStartMessage;\r\n\r\n                        await sendBotStartMessage(chatId, botUserId, parameter);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            sessionId.loading = true;\r\n            this.replace(0, [], () => {\r\n                sessionId.loading = false;\r\n            });\r\n        }\r\n\r\n        if (previousChatId !== chatId && !this.props.filter) {\r\n            if (previousChat) {\r\n                TdLibController.send({\r\n                    '@type': 'closeChat',\r\n                    chat_id: previousChatId\r\n                });\r\n\r\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\r\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\r\n                const message = this.messages[scrollMessage.index];\r\n                if (message) {\r\n                    const { chatId, messageId } = message.props;\r\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\r\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    viewMessages(messages) {\r\n        if (!messages) return;\r\n        if (messages.length === 0) return;\r\n        if (!messages[0].chat_id) return;\r\n\r\n        const viewAction = () => {\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: messages[0].chat_id,\r\n                message_ids: messages.map(x => x.id)\r\n            });\r\n        };\r\n\r\n        if (window.hasFocus) {\r\n            viewAction();\r\n        } else {\r\n            this.defferedActions.push(viewAction);\r\n        }\r\n    }\r\n\r\n    cancelLoadMessageContents(messages) {\r\n        //return;\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n            let message = messages[i];\r\n            if (message && message.content) {\r\n                switch (message.content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        let [id, pid] = this.getMessagePhoto(message);\r\n                        if (pid) {\r\n                            let obj = getPhotoSize(message.content.photo.sizes);\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        let [id, pid] = this.getMessageSticker(message);\r\n                        if (pid) {\r\n                            let obj = message.content.sticker.sticker;\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadIncompleteHistory = async (result, limit) => {\r\n        const MAX_ITERATIONS = 5;\r\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n\r\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\r\n            result = await this.onLoadNext();\r\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n        }\r\n    };\r\n\r\n    isCompleteHistory = (result, limit) => {\r\n        if (!result) return false;\r\n        if (!result.messages.length) return true;   // end of the history\r\n\r\n        return result.messages.length >= limit;\r\n    };\r\n\r\n    onLoadNext = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n        if (sessionId.loading) return;\r\n\r\n        if (sessionId.loadMigratedHistory) {\r\n            return await this.onLoadMigratedHistory();\r\n        }\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        let result = null;\r\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\r\n        if (this.lastRequests.has(lastRequestKey)) {\r\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\r\n        } else {\r\n            sessionId.loading = true;\r\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\r\n                .finally(() => {\r\n                    sessionId.loading = false;\r\n                });\r\n        }\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (!result.messages.length) {\r\n            this.lastRequests.set(lastRequestKey, result);\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\r\n                        });\r\n                    }\r\n                }, 100);\r\n            }\r\n            if (!result.messages.length) {\r\n                this.onLoadMigratedHistory();\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadMigratedHistory = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (!supergroupId) return;\r\n\r\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\r\n        if (!fullInfo) {\r\n            fullInfo = await getChatFullInfo(chatId);\r\n        }\r\n        if (!fullInfo.upgraded_from_basic_group_id) {\r\n            return;\r\n        }\r\n\r\n        sessionId.loadMigratedHistory = true;\r\n\r\n        const basicGroupChat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\r\n        });\r\n\r\n        if (!basicGroupChat) return;\r\n        if (sessionId.loading) return;\r\n\r\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\r\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\r\n        .finally(() => {\r\n            sessionId.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n            }\r\n\r\n            this.loadIncompleteHistory(result, limit);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n        if (sessionId.loading) return;\r\n        if (this.hasLastMessage()) return;\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\r\n            .finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.state.history);\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(result.messages, {}, () => {\r\n            this.scrollBehaviorNone = false;\r\n            if (result.messages.length > 0) {\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\r\n                        }, () => {\r\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                        });\r\n                    }\r\n                }, 0);\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    replace(separatorMessageId, history, callback) {\r\n        this.setState({ separatorMessageId, history }, callback);\r\n    }\r\n\r\n    replaceMessage(oldMessageId, message, callback) {\r\n        if (!message) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        let history = [...this.state.history];\r\n        const index = history.findIndex(x => x.id === oldMessageId);\r\n        if (index !== -1) {\r\n            history.splice(index, 1, message);\r\n        } else {\r\n            history = this.state.history;\r\n        }\r\n\r\n        this.setState({ history }, callback);\r\n    }\r\n\r\n    insert(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history).sort((a, b) => {\r\n                if (a.id < b.id) {\r\n                    return -1;\r\n                } else if (a.id > b.id) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            })\r\n        }, callback);\r\n    }\r\n\r\n    insertNext(history, callback) {\r\n        if (history.length === 0) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history)//.slice(0, 100)\r\n        }, callback);\r\n    }\r\n\r\n    insertPrevious(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: this.state.history.concat(history),\r\n            ...newState\r\n        }, callback);\r\n    }\r\n\r\n    deleteHistory(message_ids, callback) {\r\n        const { history } = this.state;\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\r\n    }\r\n\r\n    updateItemsInView = () => {\r\n        if (!this.messages) return null;\r\n\r\n        const messages = [];\r\n        const messagesMap = new Map();\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    const key = `${chatId}_${messageId}`;\r\n                    messagesMap.set(key, key);\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        const key = `${chatId}_${messageIds[j]}`;\r\n                        messagesMap.set(key, key);\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mapEquals(this.inViewMap, messagesMap)) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\r\n\r\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\r\n            this.inViewMap = messagesMap;\r\n\r\n            return messages;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    updatePinnedMessage = scrollToNext => {\r\n        const { chatId, filter } = this.props;\r\n        if (filter) return;\r\n\r\n        const { prevScrollTop } = this;\r\n        if (prevScrollTop === null) {\r\n            // console.log('[pin] handleScroll 3.1');\r\n            return;\r\n        }\r\n        // const { prevScrollTop } = this;\r\n        // if (prevScrollTop === null) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return;\r\n        if (!media.pinned) return;\r\n        if (media.pinned.length <= 1) return;\r\n\r\n        const messages = [];\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!messages) return;\r\n        if (messages.length <= 1) return;\r\n\r\n        const minId = messages[0].messageId;\r\n        const maxId = messages[messages.length - 1].messageId;\r\n\r\n        let id = 0;\r\n        for (let i = 0; i < media.pinned.length; i++) {\r\n            const pinned = media.pinned[i];\r\n            if (pinned.id >= minId && pinned.id <= maxId) {\r\n                id = pinned.id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!id) {\r\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\r\n            const pinnedMaxId = media.pinned[0].id\r\n\r\n            if (pinnedMaxId < minId) {\r\n                id = pinnedMaxId;\r\n            } else if (pinnedMinId > maxId) {\r\n                id = pinnedMinId;\r\n            }\r\n        }\r\n\r\n        const { clickedPinned, currentPinned } = MessageStore;\r\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\r\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\r\n\r\n\r\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\r\n                // console.log('[pin] handleScroll 3.2');\r\n                return;\r\n            }\r\n\r\n            // console.log('[pin] handleScroll 4', { chatId, id });\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\r\n        } else {\r\n            // console.log('[pin] handleScroll 3.3');\r\n        }\r\n    };\r\n\r\n    updateScrollDownVisibility = () => {\r\n        const { scrollDownVisible, replyHistory, history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (this.hasLastMessage() && scrollDownVisible) {\r\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\r\n                    this.setState({\r\n                        scrollDownVisible: false,\r\n                        replyHistory: []\r\n                    });\r\n                } else if (!replyHistory.length) {\r\n                    this.setState({\r\n                        scrollDownVisible: false\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (!scrollDownVisible) {\r\n                this.setState({ scrollDownVisible: true });\r\n            }\r\n        }\r\n\r\n        this.prevHistory = history;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] handleScroll\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\r\n\r\n        this.updateItemsInView();\r\n\r\n        if (!this.cancelUpdatePinnedMessage) {\r\n            this.updatePinnedMessage(scrollToNext);\r\n        }\r\n\r\n        this.updateScrollDownVisibility();\r\n\r\n        if (this.prevScrollTop !== null) {\r\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\r\n                this.onLoadNext();\r\n            }\r\n\r\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\r\n                this.onLoadPrevious();\r\n            }\r\n        }\r\n\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\r\n            scrollTop: 0,\r\n            scrollHeight: 0,\r\n            offsetHeight: 0\r\n        };\r\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\r\n\r\n        // console.log(\r\n        //     `[ml] handleScrollBehavior\r\n        //     scrollBehavior=${scrollBehavior}\r\n        //     snapshot.scrollTop=${scrollTop}\r\n        //     snapshot.offsetHeight=${offsetHeight}\r\n        //     snapshot.scrollHeight=${scrollHeight}`\r\n        // );\r\n\r\n        switch (scrollBehavior) {\r\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\r\n                this.scrollToBottom();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\r\n                this.scrollToMessage();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\r\n                this.scrollToUnread();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\r\n                this.scrollToPosition(position);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\r\n                this.keepScrollPosition(snapshot);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.NONE: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    keepScrollPosition = snapshot => {\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition before\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     snapshot.scrollTop=${snapshot.scrollTop}\r\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\r\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\r\n        // );\r\n\r\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition after\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n    };\r\n\r\n    scrollToUnread = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            let itemComponent = this.itemsMap.get(i);\r\n            let item = ReactDOM.findDOMNode(itemComponent);\r\n            if (item) {\r\n                if (itemComponent.props.showUnreadSeparator) {\r\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        if (!scrolled) {\r\n            this.scrollToBottom();\r\n        }\r\n    };\r\n\r\n    scrollToPosition = position => {\r\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\r\n        const { messageId, offset } = position;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId) {\r\n                    list.scrollTop = node.offsetTop - offset;\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`,\r\n        //     this.itemsMap\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId\r\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\r\n                    if (list.offsetHeight < node.offsetHeight) {\r\n                        // scroll to the message top\r\n                        list.scrollTop = node.offsetTop;\r\n                    } else {\r\n                        // scroll message to the center of screen\r\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\r\n                    }\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!scrolled) {\r\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        // if (!scrolled) {\r\n        //     this.scrollToBottom();\r\n        // }\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToBottom before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\r\n        if (nextScrollTop !== list.scrollTop) {\r\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after (no changes)\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        }\r\n    };\r\n\r\n    getRequest = (chatId, fromMessageId, offset, limit) => {\r\n        const { filter } = this.props;\r\n\r\n        if (filter) {\r\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\r\n                const media = MessageStore.getMedia(chatId);\r\n                if (media && media.pinned && media.pinned.length > 0) {\r\n                    return Promise.resolve({\r\n                        '@type': 'messages',\r\n                        messages: [...media.pinned]\r\n                    });\r\n                }\r\n            }\r\n\r\n            return TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                from_message_id: fromMessageId,\r\n                offset,\r\n                limit,\r\n                filter,\r\n                sender_user_id: null,\r\n                query: null\r\n            });\r\n        }\r\n\r\n        return TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset,\r\n            limit\r\n        });\r\n    };\r\n\r\n    scrollToStart = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\r\n        if (hasLastMessage) {\r\n            this.scrollToBottom();\r\n        } else {\r\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\r\n        }\r\n    };\r\n\r\n    handleListDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSendMediaMessages(chatId)) return;\r\n\r\n        if (!event.dataTransfer) return;\r\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: true,\r\n            dataTransfer: event.dataTransfer\r\n        });\r\n    };\r\n\r\n    handleScrollDownClick = event => {\r\n        const { replyHistory } = this.state;\r\n\r\n        if (replyHistory.length > 0) {\r\n            const lastReply = replyHistory.pop();\r\n            if (lastReply) {\r\n                const { chatId, messageId } = lastReply;\r\n                if (chatId === this.props.chatId) {\r\n                    openChat(chatId, messageId);\r\n                }\r\n            }\r\n        } else {\r\n            this.scrollToStart();\r\n        }\r\n    };\r\n\r\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\r\n        if (!message) return false;\r\n\r\n        const { chat_id, date, is_outgoing, sender_id, content, forward_info } = message;\r\n\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        if (isFirstUnread) {\r\n            return true;\r\n        }\r\n\r\n        if (isChannelChat(chat_id)) {\r\n            return true;\r\n        }\r\n\r\n        return (\r\n            prevMessage &&\r\n            (isServiceMessage(prevMessage) ||\r\n                prevMessage.content['@type'] === 'messageSticker' ||\r\n                prevMessage.content['@type'] === 'messageVideoNote' ||\r\n                !senderEquals(sender_id, prevMessage.sender_id) ||\r\n                is_outgoing !== prevMessage.is_outgoing ||\r\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\r\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\r\n        );\r\n    }\r\n\r\n    showMessageDate(message, prevMessage, isFirst) {\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        const date = new Date(message.date * 1000);\r\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\r\n\r\n        if (\r\n            date.getFullYear() !== prevDate.getFullYear() ||\r\n            date.getMonth() !== prevDate.getMonth() ||\r\n            date.getDate() !== prevDate.getDate()\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, filter } = this.props;\r\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        // console.log('[ml] render ', history);\r\n\r\n        this.itemsMap.clear();\r\n\r\n        if (clearHistory) {\r\n            this.messages = null;\r\n        } else {\r\n            this.messages = [];\r\n            for (let i = 0; i < history.length; i++) {\r\n                const message = history[i];\r\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\r\n                let albumAdded = false;\r\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <Album\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <DocumentAlbum\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                }\r\n\r\n                if (!albumAdded) {\r\n                    /// history[4] id=5 prev\r\n                    /// history[5] id=6 current\r\n                    /// history[6] id=7 next\r\n                    /// ...\r\n                    /// history[9] id=10\r\n\r\n                    const x = message;\r\n                    const prevMessage = i > 0 ? history[i - 1] : null;\r\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\r\n\r\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                    let m = null;\r\n                    if (isServiceMessage(x)) {\r\n                        m = (\r\n                            <ServiceMessage\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\r\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        m = (\r\n                            <Message\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                sendingState={x.sending_state}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    this.messages.push(m);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('messages-list', {\r\n                    'messages-list-selection-active': selectionActive\r\n                })}\r\n                onDragEnter={this.handleListDragEnter}>\r\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\r\n                    <div className='messages-list-top' />\r\n                    <div ref={this.itemsRef} className='messages-list-items'>\r\n                        {this.messages}\r\n                    </div>\r\n                </div>\r\n                <div className='messages-list-top-panel'>\r\n                    <GroupCallJoinPanel chatId={chatId}/>\r\n                    <ActionBar chatId={chatId} />\r\n                </div>\r\n                <Placeholder />\r\n                {scrollDownVisible && (\r\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\r\n                )}\r\n                <FilesDropTarget />\r\n                <StickersHint />\r\n                {/*<InputBoxHints />*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessagesList.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    options: PropTypes.object,\r\n    filter: PropTypes.object\r\n};\r\n\r\nexport default MessagesList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport { clearSelection, closePinned } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessagesHeader.css'\r\n\r\nclass PinnedMessagesHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const media = MessageStore.getMedia(props.chatId);\r\n\r\n        this.state = {\r\n            selectedCount: MessageStore.selectedItems.size,\r\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinnedCount !== pinnedCount) {\r\n            return true;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({\r\n            selectedCount: MessageStore.selectedItems.size\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { selectedCount } = this.state;\r\n        if (selectedCount > 0) {\r\n            clearSelection();\r\n        }\r\n\r\n        closePinned();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        let title = t('PinnedMessages');\r\n        if (pinnedCount === 1) {\r\n            title = t('PinnedMessage');\r\n        } else if (pinnedCount > 1) {\r\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\r\n                <IconButton\r\n                    className='header-left-button main-menu-button'\r\n                    onClick={this.handleClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectedCount}/>\r\n                    <div className={classNames('header-status', 'grow')}>\r\n                        <span className='header-status-content'>{title}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nPinnedMessagesHeader.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(PinnedMessagesHeader);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\r\nimport { requestUnpinMessage } from '../../Actions/Client';\r\nimport { canPinMessages } from '../../Utils/Chat';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessages.css';\r\n\r\nclass PinnedMessages extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId } = state;\r\n        const { chatId } = props;\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                opened: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    onClientUpdateOpenPinned = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n\r\n        if (currentChatId !== chatId) return;\r\n\r\n        this.setState({\r\n            opened: true\r\n        });\r\n    };\r\n\r\n    onClientUpdateClosePinned = update => {\r\n        this.setState({\r\n            opened: false\r\n        });\r\n    };\r\n\r\n    handleUnpinAll = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestUnpinMessage(chatId, null);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { opened } = this.state;\r\n        if (!opened) return null;\r\n\r\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\r\n\r\n        return (\r\n            <div className='pinned-messages'>\r\n                <div className='pinned-messages-wrapper'>\r\n                    <div className='dialog-background'/>\r\n                    <div className='dialog-details-wrapper'>\r\n                        <PinnedMessagesHeader chatId={chatId} />\r\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\r\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        // return (\r\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\r\n        //\r\n        //     </SidebarPage>\r\n        // );\r\n    }\r\n}\r\n\r\nPinnedMessages.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessages);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { copy } from '../../Utils/Text';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport MoreIcon from '../../Assets/Icons/More';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { forward } from '../../Actions/Client';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShareStickerSetButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.handleOpen(event.currentTarget);\r\n    };\r\n\r\n    handleOpen = anchorEl => {\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        this.handleClose();\r\n\r\n        const { t } = this.props;\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        copy(link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    getStickersLink = stickerSet => {\r\n        if (!stickerSet) return '';\r\n\r\n        const { name } = stickerSet;\r\n        if (!name) return '';\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n\r\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleShare = () => {\r\n        this.handleClose();\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessageText',\r\n            text: {\r\n                '@type': 'formattedText',\r\n                text: link,\r\n                entities: null\r\n            },\r\n            disable_web_page_preview: false,\r\n            clear_draft: false\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    render() {\r\n        const { t, className } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={className}\r\n                    aria-label='Share'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='sticker-set-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableEnforceFocus={true}\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.handleCopyLink}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('CopyLink')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleShare}>\r\n                        <ListItemIcon>\r\n                            <ShareIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('StickersShare')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nShareStickerSetButton.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ShareStickerSetButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ShareStickerSetButton from './ShareStickerSetButton';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerSetDialog.css';\r\n\r\nclass StickerSetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.contentRef = React.createRef();\r\n\r\n        this.state = {\r\n            stickerSet: StickerStore.stickerSet,\r\n            stickerId: 0,\r\n            scroll: false,\r\n            scrollTop: false,\r\n            scrollBottom: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n\r\n        if (stickerSet !== nextState.stickerSet) {\r\n            return true;\r\n        }\r\n\r\n        if (sticker !== nextState.sticker) {\r\n            return true;\r\n        }\r\n\r\n        if (scroll !== nextState.scroll) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollTop !== nextState.scrollTop) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollBottom !== nextState.scrollBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    handleUpdateInstalledStickerSets = update => {\r\n        const { stickerSet } = StickerStore;\r\n\r\n        this.setState({ stickerSet });\r\n    };\r\n\r\n    handleClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.setState({ stickerSet }, () => {\r\n            setTimeout(() => {\r\n                this.handleScroll();\r\n            }, 0);\r\n        });\r\n\r\n        if (stickerSet) {\r\n            const store = FileStore.getStore();\r\n            loadStickerSetContent(store, stickerSet);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return;\r\n\r\n        const { is_installed } = stickerSet;\r\n\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: stickerSet.id,\r\n            is_installed: !is_installed\r\n        });\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        const { stickers } = stickerSet;\r\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return [];\r\n\r\n        const { stickers } = stickerSet;\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const STICKERS_PER_ROW = 5;\r\n        const row = Math.floor(index / STICKERS_PER_ROW);\r\n        const column = index % STICKERS_PER_ROW;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\r\n        }\r\n        if (nextColumn < STICKERS_PER_ROW) {\r\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    // handleMouseOver = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     if (!this.mouseDown) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    // };\r\n\r\n    // handleMouseDown = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    //\r\n    //     this.mouseDown = true;\r\n    //     document.addEventListener('mouseup', this.handleMouseUp);\r\n    //\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     return false;\r\n    // };\r\n\r\n    getSticker(stickerId) {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { stickers } = stickerSet;\r\n\r\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\r\n    }\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const content = this.contentRef.current;\r\n        if (!content) {\r\n            return;\r\n        }\r\n\r\n        const hasScroll = content.scrollHeight > content.offsetHeight;\r\n        const scrollTop = hasScroll && content.scrollTop === 0;\r\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\r\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\r\n\r\n        this.setState({\r\n            scrollTop,\r\n            scrollBottom,\r\n            scroll\r\n        });\r\n    }\r\n\r\n    handleInViewport = (fileId, elementRect) => {\r\n        const { current } = this.contentRef;\r\n        if (!current) return false;\r\n\r\n        const contentRect = current.getBoundingClientRect();\r\n        const top = elementRect.top - contentRect.top;\r\n        const bottom = elementRect.bottom - contentRect.bottom;\r\n        // below bottom edge\r\n        if (top > contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n        // upper top edge\r\n        if (bottom < - contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n\r\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { title, stickers, is_installed } = stickerSet;\r\n\r\n        const items = stickers.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={true}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.STICKER_SET}\r\n                    inViewportFunc={this.handleInViewport}\r\n                />\r\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                className={classNames(\r\n                    'sticker-set-dialog',\r\n                    { 'sticker-set-dialog-scroll': scroll },\r\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\r\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\r\n                )}\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='sticker-set-dialog-title-text'\r\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\r\n                <DialogTitle\r\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\r\n                    disableTypography>\r\n                    <IconButton\r\n                        aria-label='Close'\r\n                        onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <ShareStickerSetButton />\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    ref={this.contentRef}\r\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onScroll={this.handleScroll}>\r\n                    {items}\r\n                </DialogContent>\r\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\r\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\r\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\r\n                    </Button>\r\n                </DialogActions>\r\n                {<StickerPreview sticker={sticker} />}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSetDialog.propTypes = {};\r\n\r\nexport default withTranslation()(StickerSetDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { closeChatSelect } from '../../Actions/Message';\r\nimport './SelectChatPlaceholder.css';\r\n\r\nclass SelectChatPlaceholder extends React.Component {\r\n\r\n    handleClick = () => {\r\n        closeChatSelect();\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        return (\r\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\r\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSelectChatPlaceholder.propTypes = {};\r\n\r\nexport default withTranslation()(SelectChatPlaceholder);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\r\nimport Footer from './Footer';\r\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\r\nimport Header from './Header';\r\nimport HeaderPlayer from '../Player/HeaderPlayer';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessages from './PinnedMessages';\r\nimport StickerSetDialog from '../Popup/StickerSetDialog';\r\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\r\nimport { getSrc } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './DialogDetails.css';\r\n\r\nclass DialogDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatId: AppStore.getChatId(),\r\n            messageId: AppStore.getMessageId(),\r\n            selectedCount: 0,\r\n            wallpaper: null,\r\n            wallpaperSrc: null,\r\n            chatSelectOptions: null,\r\n            chatOpenOptions: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n        if (nextState.wallpaper !== wallpaper) {\r\n            return true;\r\n        }\r\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\r\n            return true;\r\n        }\r\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateClearOpenChatOptions = update => {\r\n        this.setState({\r\n            chatOpenOptions: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatSelect = update => {\r\n        const { options } = update;\r\n\r\n        this.setState({\r\n            chatSelectOptions: options\r\n        });\r\n    };\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { document: file } = document;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        if (this.thumbnailTime) {\r\n            if (this.thumbnailTime.wallpaper === wallpaper) {\r\n                const diff = new Date() - this.thumbnailTime.time;\r\n                if (diff < 250) {\r\n                    setTimeout(() => {\r\n                        this.forceUpdate();\r\n                    }, 250);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBackground = update => {\r\n        const { wallpaper } = update;\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.setState({\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatSelectOptions } = this.state;\r\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\r\n\r\n        this.setState({\r\n            chatId,\r\n            messageId,\r\n            chatOpenOptions,\r\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\r\n        });\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesList.scrollToBottom();\r\n    };\r\n\r\n    scrollToStart = () => {\r\n        this.messagesList.scrollToStart();\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        this.messagesList.scrollToMessage();\r\n    };\r\n\r\n    render() {\r\n        /*let groups = [];\r\n        if (this.props.history.length > 0){\r\n            let currentGroup = {\r\n                key: this.props.history[0].id,\r\n                date: this.props.history[0].date,\r\n                senderUserId: this.props.history[0].sender_user_id,\r\n                messages: [this.props.history[0]]\r\n            };\r\n\r\n            for (let i = 1; i < this.props.history.length; i++){\r\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\r\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\r\n                    && i % 20 !== 0){\r\n                    currentGroup.key += '_' + this.props.history[i].id;\r\n                    currentGroup.messages.push(this.props.history[i]);\r\n                }\r\n                else {\r\n                    groups.push(currentGroup);\r\n                    currentGroup = {\r\n                        key: this.props.history[i].id,\r\n                        date: this.props.history[i].date,\r\n                        senderUserId: this.props.history[i].sender_user_id,\r\n                        messages: [this.props.history[i]]\r\n                    };\r\n                }\r\n            }\r\n            groups.push(currentGroup);\r\n        }\r\n\r\n        this.groups = groups.map(x => {\r\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\r\n        });*/\r\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\r\n\r\n        let style = null;\r\n        let src = null;\r\n        if (wallpaper) {\r\n            const { document } = wallpaper;\r\n            if (document) {\r\n                const { thumbnail, document: file } = document;\r\n                if (file) {\r\n                    src = getSrc(file);\r\n                }\r\n\r\n                if (!src && thumbnail) {\r\n                    src = getSrc(thumbnail.file);\r\n                }\r\n            }\r\n\r\n            style = {\r\n                backgroundImage: src ? `url(${src})` : null\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='dialog-details' style={style}>\r\n                <div className='dialog-background'/>\r\n                <div className='dialog-details-wrapper'>\r\n                    <GroupCallTopPanel/>\r\n                    <HeaderPlayer />\r\n                    <Header chatId={chatId} />\r\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\r\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\r\n                </div>\r\n                {chatSelectOptions && <SelectChatPlaceholder/>}\r\n                <PinnedMessages chatId={chatId}/>\r\n                <StickerSetDialog />\r\n                <ChatInfoDialog />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogDetails;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ForwardTargetChat.css';\r\n\r\nclass ForwardTargetChat extends React.Component {\r\n    render() {\r\n        const { chatId, selected, onSelect, t } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, true, t);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\r\n                onClick={onSelect}>\r\n                <div className='forward-target-chat-tile'>\r\n                    <div className='forward-target-chat-tile-wrapper'>\r\n                        <ChatTile chatId={chatId} />\r\n                    </div>\r\n                    {selected && <div className='forward-target-chat-selection' />}\r\n                    <div\r\n                        className={classNames(\r\n                            'forward-target-chat-mark',\r\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\r\n                        )}\r\n                    />\r\n                    <div className='forward-target-chat-mark-icon' />\r\n                </div>\r\n                <div className='forward-target-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForwardTargetChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    selected: PropTypes.bool,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(ForwardTargetChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\r\nimport { clearSelection, forward } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ForwardDialog.css';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\n\r\nclass ForwardDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: [],\r\n            savedMessages: null\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n\r\n        this.targetChats = new Map();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        this.setSearchFocus();\r\n    }\r\n\r\n    loadContent = async () => {\r\n        this.getPublicMessageLink();\r\n\r\n        const promises = [];\r\n        const getChatsPromise = TdLibController.send({\r\n            '@type': 'getChats',\r\n            limit: 100\r\n        });\r\n        promises.push(getChatsPromise);\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        promises.push(savedMessagesPromise);\r\n\r\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\r\n\r\n        this.setState({\r\n            chatIds: chats.chat_ids,\r\n            savedMessages: savedMessages\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats.chat_ids);\r\n    };\r\n\r\n    getPublicMessageLink = async () => {\r\n        const { chatId, messageIds } = this.props;\r\n        if (!chatId) return;\r\n        if (!messageIds) return;\r\n        if (messageIds.length > 1) return;\r\n        if (!isSupergroup(chatId)) return;\r\n        if (!getChatUsername(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageIds[0],\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        this.setState({\r\n            publicMessageLink: result\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        forward(null);\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { publicMessageLink } = this.state;\r\n\r\n        if (!publicMessageLink) return;\r\n        if (!publicMessageLink.link) return;\r\n\r\n        copy(publicMessageLink.link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    getForwardPhotoSize = (chatId, messageIds) => {\r\n        if (messageIds.length !== 1) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageIds[0]);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const { sizes } = photo;\r\n            if (sizes && sizes.length) {\r\n                return sizes[sizes.length - 1];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSend = () => {\r\n        this.handleClose();\r\n        clearSelection();\r\n\r\n        const { chatId, messageIds, inputMessageContent } = this.props;\r\n        if (!chatId && !messageIds && !inputMessageContent) return;\r\n\r\n        const text = this.getInnerText(this.messageRef.current);\r\n\r\n        messageIds.sort();\r\n\r\n        this.targetChats.forEach(async targetChatId => {\r\n            if (inputMessageContent) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                if (text) {\r\n                    if ('caption' in inputMessageContent) {\r\n                        inputMessageContent.caption = {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        };\r\n                    } else {\r\n                        TdLibController.send({\r\n                            '@type': 'sendMessage',\r\n                            chat_id: targetChatId,\r\n                            reply_to_message_id: 0,\r\n                            disable_notifications: false,\r\n                            from_background: false,\r\n                            reply_markup: null,\r\n                            input_message_content: {\r\n                                '@type': 'inputMessageText',\r\n                                text: {\r\n                                    '@type': 'formattedText',\r\n                                    text,\r\n                                    entities: null\r\n                                },\r\n                                disable_web_page_preview: false,\r\n                                clear_draft: false\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: inputMessageContent\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const size = this.getForwardPhotoSize(chatId, messageIds);\r\n            if (size) {\r\n                const { width, height, photo } = size;\r\n\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: {\r\n                            '@type': 'inputFileId',\r\n                            id: photo.id\r\n                        },\r\n                        thumbnail: null,\r\n                        added_sticker_file_ids: [],\r\n                        width: width,\r\n                        height: height,\r\n                        caption: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        ttl: 0\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (text) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: false,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'forwardMessages',\r\n                chat_id: targetChatId,\r\n                from_chat_id: chatId,\r\n                message_ids: messageIds,\r\n                disable_notifications: false,\r\n                from_background: false,\r\n                as_album: false\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeSelection = chatId => {\r\n        if (this.targetChats.has(chatId)) {\r\n            this.targetChats.delete(chatId);\r\n        } else {\r\n            this.targetChats.set(chatId, chatId);\r\n        }\r\n\r\n        // console.log(this.targetChats);\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getInnerText = element => {\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        return innerText;\r\n    };\r\n\r\n    handleSearchKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleSearchKeyUp = async () => {\r\n        const { chatIds, savedMessages } = this.state;\r\n\r\n        const element = this.searchRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n\r\n        const innerText = this.getInnerText(element).trim();\r\n        if (!innerText) {\r\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\r\n            return;\r\n        }\r\n\r\n        const latinText = getLatinInput(innerText);\r\n        const cyrillicText = getCyrillicInput(innerText);\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const searchResults = chatsSource.filter(\r\n            x =>\r\n                this.hasSearchText(x, innerText) ||\r\n                (latinText && this.hasSearchText(x, latinText)) ||\r\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\r\n        );\r\n\r\n        this.setState({ searchText: innerText, searchResults });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatsOnServer',\r\n            query: innerText,\r\n            limit: 100\r\n        });\r\n\r\n        if (this.state.searchText !== innerText) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            globalSearchResults: result.chat_ids\r\n        });\r\n    };\r\n\r\n    handleSearchPaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleMessageKeyUp = () => {\r\n        const element = this.messageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handleMessagePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    hasSearchText = (chatId, searchText) => {\r\n        const { t } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (savedMessages && chatId === savedMessages.id) {\r\n            const title = getChatTitle(chatId, true, t) || '';\r\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const title1 = getChatTitle(chatId, false, t) || '';\r\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        const username = getChatUsername(chatId) || '';\r\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setSearchFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.searchRef.current) {\r\n                const element = this.searchRef.current;\r\n\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatIds,\r\n            searchText,\r\n            searchResults,\r\n            globalSearchResults,\r\n            savedMessages,\r\n            publicMessageLink\r\n        } = this.state;\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const chats = chatsSource.map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\r\n        const filteredResults = (globalSearchResults || []).filter(\r\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\r\n        );\r\n\r\n        const foundChats = (searchResults || [])\r\n            .concat(filteredResults)\r\n            .map(x => (\r\n                <ForwardTargetChat\r\n                    key={x}\r\n                    chatId={x}\r\n                    selected={this.targetChats.has(x)}\r\n                    onSelect={() => this.handleChangeSelection(x)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='forward-dialog-title'\r\n                aria-describedby='forward-dialog-description'\r\n                className='forward-dialog'>\r\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\r\n                <div\r\n                    ref={this.searchRef}\r\n                    id='forward-dialog-search'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Search')}\r\n                    onKeyDown={this.handleSearchKeyDown}\r\n                    onKeyUp={this.handleSearchKeyUp}\r\n                    onPaste={this.handleSearchPaste}\r\n                />\r\n                <div className='forward-dialog-content'>\r\n                    <div className='forward-dialog-list'>{chats}</div>\r\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\r\n                </div>\r\n                {this.targetChats.size > 0 && (\r\n                    <div\r\n                        ref={this.messageRef}\r\n                        id='forward-dialog-message'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('ShareComment')}\r\n                        onKeyUp={this.handleMessageKeyUp}\r\n                        onPaste={this.handleMessagePaste}\r\n                    />\r\n                )}\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    {this.targetChats.size > 0 && (\r\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\r\n                            {t('Send')}\r\n                        </Button>\r\n                    )}\r\n                    {!this.targetChats.size && publicMessageLink && (\r\n                        <Button onClick={this.handleCopyLink} color='primary'>\r\n                            {t('CopyLink')}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nForwardDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    inputMessageContent: PropTypes.object\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ForwardDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BlobDrawable, {\r\n    AMPLITUDE_SPEED,\r\n    FORM_BIG_MAX,\r\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\r\n    SCALE_BIG,\r\n    SCALE_BIG_MIN,\r\n    SCALE_SMALL,\r\n    SCALE_SMALL_MIN\r\n} from './BlobDrawable';\r\nimport {\r\n    MUTE_BUTTON_STATE_CONNECTING,\r\n    MUTE_BUTTON_STATE_MUTE,\r\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\r\n    MUTE_BUTTON_STATE_UNMUTE\r\n} from './TopBar';\r\nimport { stopPropagation } from '../../Utils/Message';\r\n\r\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\r\nclass OvershootInterpolator {\r\n    constructor(tension) {\r\n        this.mTension = tension;\r\n    }\r\n\r\n    getInterpolation(t) {\r\n        // _o(t) = t * t * ((tension + 1) * t + tension)\r\n        // o(t) = _o(t - 1) + 1\r\n        t -= 1.0;\r\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\r\n    }\r\n}\r\n\r\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\r\nclass DecelerateInterpolator {\r\n    constructor(factor) {\r\n        this.mFactor = factor || 1.0;\r\n    }\r\n\r\n    getInterpolation(input) {\r\n        let result;\r\n        if (this.mFactor === 1.0) {\r\n            result = 1.0 - (1.0 - input) * (1.0 - input);\r\n        } else {\r\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\r\nclass AccelerateInterpolator {\r\n    constructor(factor) {\r\n        this.mFactor = factor || 1.0;\r\n        this.mDoubleFactor = 2 * this.mFactor;\r\n    }\r\n\r\n    getInterpolation(input) {\r\n        if (this.mFactor === 1.0) {\r\n            return input * input;\r\n        }\r\n\r\n        return Math.pow(input, this.mDoubleFactor);\r\n    }\r\n}\r\n\r\nclass WeavingState {\r\n    constructor(stateId) {\r\n        this.stateId = stateId;\r\n        this.shader = (ctx, left, top, right, bottom) => { };\r\n        this.createGradient(stateId);\r\n    }\r\n\r\n    createGradient(stateId) {\r\n        this.shader = (ctx, left, top, right, bottom) => {\r\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\r\n        };\r\n    }\r\n\r\n    update(top, left, size, dt) {\r\n        // TODO: move gradient here\r\n    }\r\n\r\n    // Android colors\r\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\r\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\r\n\r\n            gradient.addColorStop(0, '#57A4FE');\r\n            gradient.addColorStop(.3, '#766EE9');\r\n            gradient.addColorStop(1, '#F05459');\r\n\r\n            return gradient;\r\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\r\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\r\n\r\n            gradient.addColorStop(0, '#77E55C');\r\n            gradient.addColorStop(1, '#56C7FE');\r\n\r\n            return gradient;\r\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\r\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\r\n\r\n            gradient.addColorStop(0, '#66D4FB');\r\n            gradient.addColorStop(1, '#539EF8');\r\n\r\n            return gradient;\r\n        } else {\r\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\r\n\r\n            gradient.addColorStop(0, '#2B333E');\r\n            gradient.addColorStop(1, '#2B333E');\r\n\r\n            return gradient;\r\n        }\r\n    }\r\n}\r\n\r\nclass RadialProgressView {\r\n    constructor() {\r\n        this.decelerateInterpolator = new DecelerateInterpolator();\r\n        this.accelerateInterpolator = new AccelerateInterpolator();\r\n\r\n        this.lineCap = 'round';\r\n        this.lineWidth = 3;\r\n        this.progressColor = '#1C93E3';\r\n        this.updateProgressPaint();\r\n\r\n        this.lastUpdateTime = 0;\r\n        this.radOffset = 0;\r\n        this.currentCircleLength = 0;\r\n        this.risingCircleLength = false;\r\n        this.currentProgressTime = 0;\r\n        this.useSelfAlpha = false;\r\n        this.drawingCircleLength = 0;\r\n\r\n        this.rotationTime = 2000;\r\n        this.risingTime = 500;\r\n        this.size = 0;\r\n\r\n        this.currentProgress = 0;\r\n        this.progressAnimationStart = 0;\r\n        this.progressTime = 0;\r\n        this.animatedProgress = 0;\r\n        this.circle = false;\r\n        this.circleProgress = 0;\r\n        this.noProgress = true;\r\n    }\r\n\r\n    setUseSelfAlpha = value => {\r\n        this.useSelfAlpha = value;\r\n    };\r\n\r\n    setAlpha = alpha => {\r\n        console.log('[rpv] setAlpha', alpha);\r\n    };\r\n\r\n    setNoProgress = value => {\r\n        this.noProgress = value;\r\n    };\r\n\r\n    setProgress = value => {\r\n        this.currentProgress = value;\r\n        if (this.animatedProgress > value) {\r\n            this.animatedProgress = value;\r\n        }\r\n\r\n        this.progressAnimationStart = this.animatedProgress;\r\n        this.progressTime = 0;\r\n    };\r\n\r\n    updateAnimation = () => {\r\n        const newTime = new Date();\r\n        let dt = newTime - this.lastUpdateTime;\r\n        if (dt > 17) {\r\n            dt = 17;\r\n        }\r\n        this.lastUpdateTime = newTime;\r\n\r\n        this.radOffset += 360 * dt / this.rotationTime;\r\n        let count = Math.trunc(this.radOffset / 360);\r\n        this.radOffset -= count * 360;\r\n\r\n        if (this.circle && this.circleProgress !== 1.0) {\r\n            this.circleProgress += 16 / 220;\r\n            if (this.circleProgress > 1.0) {\r\n                this.circleProgress = 1.0;\r\n            }\r\n        } else if (!this.circle && this.circleProgress !== 0.0) {\r\n            this.circleProgress -= 16 / 400;\r\n            if (this.circleProgress < 0) {\r\n                this.circleProgress = 0;\r\n            }\r\n        }\r\n\r\n        if (this.noProgress) {\r\n            if (this.circleProgress === 0) {\r\n                this.currentProgressTime += dt;\r\n                if (this.currentProgressTime >= this.risingTime) {\r\n                    this.currentProgressTime = this.risingTime;\r\n                }\r\n                if (this.risingCircleLength) {\r\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\r\n                } else {\r\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\r\n                }\r\n\r\n                if (this.currentProgressTime === this.risingTime) {\r\n                    if (this.risingCircleLength) {\r\n                        this.radOffset += 270;\r\n                        this.currentCircleLength = -266;\r\n                    }\r\n\r\n                    this.risingCircleLength = !this.risingCircleLength;\r\n                    this.currentProgressTime = 0;\r\n                }\r\n            } else {\r\n                if (this.risingCircleLength) {\r\n                    const old = this.currentCircleLength;\r\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\r\n                    this.currentCircleLength += 360 * this.circleProgress;\r\n                    const dx = old - this.currentCircleLength;\r\n                    if (dx > 0) {\r\n                        this.radOffset += old - this.currentCircleLength;\r\n                    }\r\n                } else {\r\n                    const old = this.currentCircleLength;\r\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\r\n                    this.currentCircleLength -= 364 * this.circleProgress;\r\n                    const dx = old - this.currentCircleLength;\r\n                    if (dx > 0) {\r\n                        this.radOffset += old - this.currentCircleLength;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\r\n            if (progressDiff > 0) {\r\n                progressDiff += dt;\r\n                if (this.progressTime >= 200) {\r\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\r\n                    this.progressTime = 0;\r\n                } else {\r\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\r\n                }\r\n            }\r\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\r\n        }\r\n    };\r\n\r\n    setSize = size => {\r\n        this.size = size;\r\n    };\r\n\r\n    setStrokeWidth = value => {\r\n        this.lineWidth = value;\r\n        this.updateProgressPaint();\r\n    };\r\n\r\n    setProgressColor = color => {\r\n        this.progressColor = color;\r\n        this.updateProgressPaint();\r\n    };\r\n\r\n    updateProgressPaint() {\r\n        this.progressPaint = ctx => {\r\n            if (this.lineCap) {\r\n                ctx.lineCap = this.lineCap;\r\n            }\r\n            if (this.lineWidth) {\r\n                ctx.lineWidth = this.lineWidth;\r\n            }\r\n            if (this.progressColor) {\r\n                ctx.strokeStyle = this.progressColor;\r\n            }\r\n        };\r\n    }\r\n\r\n    toCircle = (toCircle, animated) => {\r\n        this.circle = toCircle;\r\n        if (!animated) {\r\n            this.circleProgress = this.circle ? 1.0 : 0.0;\r\n        }\r\n    }\r\n\r\n    draw = (canvas, cx, cy, scale = 1) => {\r\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale, scale);\r\n            ctx.beginPath();\r\n            if (!this.risingCircleLength) {\r\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\r\n                    this.currentCircleLength = 0;\r\n                }\r\n            }\r\n\r\n            const radStart = this.radOffset * Math.PI / 180;\r\n            this.drawingCircleLength = this.currentCircleLength;\r\n            const radLength = this.drawingCircleLength * Math.PI / 180;\r\n\r\n\r\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\r\n            this.progressPaint(ctx);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n\r\n            this.updateAnimation();\r\n        }\r\n    }\r\n\r\n    isCircle = () => {\r\n        return Math.abs(this.drawingCircleLength) >= 360;\r\n    }\r\n}\r\n\r\nclass Button extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focused = true;\r\n        this.radialPaint = ctx => { };\r\n        this.paint = ctx => { };\r\n        this.paintTmp = ctx => { };\r\n        this.lastUpdateTime = new Date();\r\n        this.amplitude = 0.0;\r\n\r\n        this.states = [\r\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\r\n        ];\r\n        this.switchProgress = 1.0;\r\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\r\n        this.prevState = null;\r\n        this.currentState = this.states[this.muteButtonState];\r\n        this.progressToState = 1.0;\r\n\r\n        this.showLightingProgress = 1.0;\r\n        this.showWavesProgress = 1.0;\r\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\r\n        this.colorsTmp = new Array(3);\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 0 * this.scale;\r\n        this.right = 380 * this.scale;\r\n        this.bottom = (220 + 28) * this.scale;\r\n        this.cx = 190 * this.scale;\r\n        this.cy = (110 + 28) * this.scale;\r\n\r\n        this.buttonDefaultRadius = 57;\r\n        this.buttonRadius = 52;\r\n        this.strokeWidth = 4;\r\n        this.invalidateColors = true;\r\n        this.radialProgressView = new RadialProgressView();\r\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\r\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\r\n        this.radialProgressView.setProgressColor('#28BAFF');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        window.addEventListener('blur', this.handleBlur);\r\n        window.addEventListener('focus', this.handleFocus);\r\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n\r\n\r\n        this.canvas = document.getElementById('button-canvas');\r\n        this.tinyWaveDrawable = new BlobDrawable(9);\r\n        this.bigWaveDrawable = new BlobDrawable(12);\r\n\r\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.generateInitBlob();\r\n\r\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.generateInitBlob();\r\n\r\n        const color = '#66D4FB';\r\n        this.radialGradient = ctx => {\r\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\r\n            gradient.addColorStop(0, color + '32');\r\n            gradient.addColorStop(1, color + '00');\r\n\r\n            ctx.fillStyle = gradient;\r\n        };\r\n        this.radialPaint = this.radialGradient;\r\n\r\n        this.setAmplitude(this.amplitude);\r\n\r\n        // console.log('[button] componentDidMount draw');\r\n        this.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        window.removeEventListener('blur', this.handleBlur);\r\n        window.removeEventListener('focus', this.handleFocus);\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.focused = true;\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.focused = false;\r\n    }\r\n\r\n    invokeDraw = () => {\r\n        if (this.raf) return;\r\n\r\n        this.draw();\r\n    }\r\n\r\n    handleDevicePixelRatioChanged = e => {\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 0 * this.scale;\r\n        this.right = 380 * this.scale;\r\n        this.bottom = (220 + 28) * this.scale;\r\n        this.cx = 190 * this.scale;\r\n        this.cy = (110 + 28) * this.scale;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    fillColors(stateId, colorsToSet) {\r\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\r\n            colorsToSet[0] = '#66D4FB';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\r\n            colorsToSet[0] = '#7DDCAA';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            colorsToSet[0] = '#766EE9';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else {\r\n            colorsToSet[0] = '#1C2229';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        }\r\n    }\r\n\r\n    strToHex(n) {\r\n        let s = n.toString(16);\r\n        if (s.length === 1) {\r\n            s = '0' + s;\r\n        }\r\n        return s;\r\n    }\r\n\r\n    blendARGB(color1, color2, ratio) {\r\n        if (color1.length <= 7) {\r\n            color1 += 'FF';\r\n        }\r\n        if (color2.length <= 7) {\r\n            color2 += 'FF';\r\n        }\r\n        const c1 = {\r\n            r: parseInt(color1.substr(1, 2), 16),\r\n            g: parseInt(color1.substr(3, 2), 16),\r\n            b: parseInt(color1.substr(5, 2), 16),\r\n            a: parseInt(color1.substr(7, 2), 16),\r\n        };\r\n        const c2 = {\r\n            r: parseInt(color2.substr(1, 2), 16),\r\n            g: parseInt(color2.substr(3, 2), 16),\r\n            b: parseInt(color2.substr(5, 2), 16),\r\n            a: parseInt(color2.substr(7, 2), 16),\r\n        };\r\n\r\n        const inverseRatio = 1 - ratio;\r\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\r\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\r\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\r\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\r\n\r\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\r\n    }\r\n\r\n    draw = (force = false) => {\r\n        this.raf = null;\r\n        if (!this.mounted) {\r\n            return;\r\n        }\r\n        if (!this.focused && this.switchProgress >= 1.0) {\r\n            return;\r\n        }\r\n        // console.log('[button] draw', [this.focused, this.mounted]);\r\n        const { currentState, prevState, left, top, right, bottom } = this;\r\n\r\n        const newTime = new Date();\r\n        let dt = (newTime - this.lastUpdateTime);\r\n        if (dt > 20) {\r\n            dt = 17;\r\n        }\r\n\r\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\r\n\r\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\r\n\r\n        if (this.animateToAmplitude !== this.amplitude) {\r\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\r\n            if (this.animateAmplitudeDiff > 0) {\r\n                if (this.amplitude > this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude < this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        let canSwitchProgress = true;\r\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n            this.radialProgressView.toCircle(true, true);\r\n            if (!this.radialProgressView.isCircle()) {\r\n                canSwitchProgress = false;\r\n            }\r\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n            this.radialProgressView.toCircle(true, false);\r\n        }\r\n\r\n        if (canSwitchProgress) {\r\n            if (this.switchProgress !== 1) {\r\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                    this.switchProgress += dt / 100;\r\n                } else {\r\n                    this.switchProgress += dt / 180;\r\n                }\r\n\r\n                if (this.switchProgress >= 1.0) {\r\n                    this.switchProgress = 1.0;\r\n                    this.prevState = null;\r\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        this.radialProgressView.toCircle(false, true);\r\n                    }\r\n                }\r\n                this.invalidateColors = true;\r\n            }\r\n\r\n            if (this.invalidateColors && currentState) {\r\n                this.invalidateColors = false;\r\n                let lightingColor;\r\n                if (prevState) {\r\n                    this.fillColors(prevState.stateId, this.colorsTmp);\r\n                    const oldLight = this.colorsTmp[0];\r\n                    this.fillColors(currentState.stateId, this.colorsTmp);\r\n                    const newLight = this.colorsTmp[0];\r\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\r\n                } else {\r\n                    this.fillColors(currentState.stateId, this.colorsTmp);\r\n                    lightingColor = this.colorsTmp[0];\r\n                }\r\n                if (this.currentLightColor !== lightingColor) {\r\n                    this.radialGradient = ctx => {\r\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\r\n\r\n                        gradient.addColorStop(0, lightingColor + '3C');\r\n                        gradient.addColorStop(1, lightingColor + '00');\r\n\r\n                        ctx.fillStyle = gradient;\r\n                    };\r\n                    this.currentLightColor = lightingColor;\r\n                }\r\n            }\r\n\r\n            let showWaves = false;\r\n            let showLighting = false;\r\n            if (currentState) {\r\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\r\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\r\n            }\r\n\r\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                this.showWavesProgress -= dt / 180;\r\n                if (this.showWavesProgress < 0) {\r\n                    this.showWavesProgress = 0;\r\n                }\r\n            } else {\r\n                if (showWaves && this.showWavesProgress !== 1) {\r\n                    this.showWavesProgress += dt / 350;\r\n                    if (this.showWavesProgress > 1) {\r\n                        this.showWavesProgress = 1;\r\n                    }\r\n                } else if (!showWaves && this.showWavesProgress !== 0) {\r\n                    this.showWavesProgress -= dt / 350;\r\n                    if (this.showWavesProgress < 0) {\r\n                        this.showWavesProgress = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (showLighting && this.showLightingProgress !== 1) {\r\n                this.showLightingProgress += dt / 350;\r\n                if (this.showLightingProgress > 1) {\r\n                    this.showLightingProgress = 1;\r\n                }\r\n            } else if (!showLighting && this.showLightingProgress !== 0) {\r\n                this.showLightingProgress -= dt / 350;\r\n                if (this.showLightingProgress < 0) {\r\n                    this.showLightingProgress = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\r\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\r\n\r\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\r\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.resetTransform();\r\n\r\n        const cx = this.cx;\r\n        const cy = this.cy;\r\n\r\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\r\n            let progress;\r\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                progress = this.switchProgress;\r\n                this.paint = prevState.shader;\r\n            } else {\r\n                progress = 1.0 - this.switchProgress;\r\n                this.paint = currentState.shader;\r\n            }\r\n\r\n            this.paintTmp = ctx => {\r\n                ctx.fillStyle = '#2B333E';\r\n            }\r\n\r\n            let paint = ctx => {\r\n                this.paint(ctx, left, top, right, bottom);\r\n            };\r\n\r\n            ctx.globalAlpha = 1.0;\r\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\r\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\r\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\r\n\r\n            ctx.globalAlpha = 0.3;\r\n            // big wave\r\n            ctx.save();\r\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\r\n            ctx.restore();\r\n\r\n            // small wave\r\n            ctx.save();\r\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\r\n            ctx.restore();\r\n\r\n            ctx.globalAlpha = 1.0;\r\n            if (canSwitchProgress) {\r\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\r\n                paint = ctx => {\r\n                    ctx.fillStyle = '#28BAFF';\r\n                };\r\n                if (progress !== 0) {\r\n                    ctx.globalAlpha = progress;\r\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1.0;\r\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\r\n            if  (!canSwitchProgress) {\r\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\r\n            }\r\n            ctx.restore();\r\n        } else {\r\n            for (let i = 0; i < 2; i++) {\r\n                let alpha = 0;\r\n                let buttonRadius = this.buttonRadius;\r\n                let paint = null;\r\n                if (i === 0 && prevState) {\r\n                    paint = prevState.shader;\r\n                    alpha = 1 - this.switchProgress;\r\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else if (i === 1) {\r\n                    paint = currentState.shader;\r\n                    alpha = this.switchProgress;\r\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else {\r\n                    continue;\r\n                }\r\n\r\n                if (!paint) {\r\n                    paint = ctx => {\r\n                        ctx.fillStyle = '#2B333E';\r\n                    };\r\n                }\r\n\r\n                ctx.globalAlpha = 1.0;\r\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\r\n                if (i === 1) {\r\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\r\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\r\n                }\r\n\r\n                ctx.globalAlpha = 0.3 * alpha;\r\n                // big wave\r\n                ctx.save();\r\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\r\n                ctx.translate(cx, cy);\r\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\r\n                ctx.restore();\r\n\r\n                // small wave\r\n                ctx.save();\r\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\r\n                ctx.translate(cx, cy);\r\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\r\n                ctx.restore();\r\n            }\r\n\r\n            // button\r\n            for (let i = 0; i < 2; i++) {\r\n                let alpha = 0;\r\n                let buttonRadius = this.buttonRadius;\r\n                let paint = null;\r\n                if (i === 0 && prevState) {\r\n                    paint = prevState.shader;\r\n                    alpha = 1 - this.switchProgress;\r\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else if (i === 1) {\r\n                    paint = currentState.shader;\r\n                    alpha = this.switchProgress;\r\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else {\r\n                    continue;\r\n                }\r\n\r\n                if (!paint) {\r\n                    paint = ctx => {\r\n                        ctx.fillStyle = '#2B333E';\r\n                    };\r\n                }\r\n\r\n                if (i === 0) {\r\n                    ctx.globalAlpha = 1.0;\r\n                } else {\r\n                    ctx.globalAlpha = alpha;\r\n                }\r\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\r\n\r\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!force) {\r\n            this.raf = requestAnimationFrame(() => this.draw());\r\n        }\r\n    };\r\n\r\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.translate(cx, cy);\r\n        ctx.scale(scale, scale);\r\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\r\n        ctx.closePath();\r\n        paint && paint(ctx);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n\r\n    setCurrentState = (stateId, animated) => {\r\n        const { currentState, states } = this;\r\n\r\n        if (currentState && currentState.id === stateId) {\r\n            return;\r\n        }\r\n\r\n        this.previousState = animated ? currentState : null;\r\n        this.currentState = states[stateId];\r\n        this.progressToState = this.previousState ? 0.0 : 1.0;\r\n    };\r\n\r\n    updateMuteButton = (stateId, animated) => {\r\n        const { muteButtonState } = this;\r\n        if (muteButtonState === stateId && animated) {\r\n            return;\r\n        }\r\n\r\n        // TODO: add text animation\r\n\r\n        if (animated) {\r\n            this.muteButtonState = stateId;\r\n        } else {\r\n            this.muteButtonState = stateId;\r\n        }\r\n        this.updateMuteButtonState(animated);\r\n    }\r\n\r\n    updateMuteButtonState (animated) {\r\n        const { states, currentState, muteButtonState } = this;\r\n\r\n        if (states[muteButtonState] !== currentState) {\r\n            this.prevState = currentState;\r\n            this.currentState = states[muteButtonState];\r\n            if (!this.prevState || !animated) {\r\n                this.switchProgress = 1.0;\r\n                this.prevState = null;\r\n            } else {\r\n                this.switchProgress = 0.0;\r\n            }\r\n        }\r\n\r\n        if (!animated) {\r\n            let showWaves = false;\r\n            let showLighting = false;\r\n            if (currentState) {\r\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\r\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\r\n            }\r\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\r\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\r\n        }\r\n    }\r\n\r\n    setAmplitude(value) {\r\n        this.animateToAmplitude = value;\r\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\r\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\r\n    }\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        const { children, onClick } = this.props;\r\n        const { left, right, top, bottom, scale } = this;\r\n\r\n        return (\r\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-28px)' }}>\r\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    background: 'transparent',\r\n                    width: 104,\r\n                    height: 104,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    left: '50%',\r\n                    top: '50%',\r\n                    marginLeft: -52,\r\n                    marginTop: -38,\r\n                    cursor: 'pointer'\r\n                }}\r\n                     onMouseDown={stopPropagation}\r\n                     onClick={onClick}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nButton.propTypes = {};\r\n\r\nexport default Button;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\r\nimport './GroupCallMicButtonHint.css';\r\n\r\nclass GroupCallMicButtonHint extends React.Component {\r\n\r\n    getItemTemplate = item => {\r\n        const { t } = this.props;\r\n\r\n        let title = '';\r\n        let subtitle = '';\r\n        switch (item) {\r\n            case 'muted': {\r\n                title = t('VoipGroupUnmute');\r\n                subtitle = t('VoipHoldAndTalk');\r\n                break;\r\n            }\r\n            case 'unmuted': {\r\n                title = t('VoipTapToMute');\r\n                break;\r\n            }\r\n            case 'forceMuted': {\r\n                title = t('VoipMutedByAdmin');\r\n                subtitle = t('VoipMutedByAdminInfo');\r\n                break;\r\n            }\r\n            case 'connecting': {\r\n                title = t('Connecting');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='group-call-mic-button-hint-item'>\r\n                <div className='group-call-mic-button-hint-title'>{title}</div>\r\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { className, status } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('group-call-mic-button-hint', className)}>\r\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallMicButtonHint.propTypes = {\r\n    status: PropTypes.string\r\n};\r\n\r\nexport default withTranslation()(GroupCallMicButtonHint);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from './Button';\r\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallMicButton.css';\r\n\r\nclass GroupCallMicButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.buttonRef = React.createRef();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected,\r\n            animated: CallStore.animated\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { status, connected, animated, shook } = this.state;\r\n\r\n        if (animated !== nextState.animated) {\r\n            return true;\r\n        }\r\n\r\n        if (connected !== nextState.connected) {\r\n            return true;\r\n        }\r\n\r\n        if (shook !== nextState.shook) {\r\n            return true;\r\n        }\r\n\r\n        if (status !== nextState.status) {\r\n            return true;\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.switchButtonState(false);\r\n\r\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onClientUpdateGroupCallAmplitudeChange = update => {\r\n        const { amplitudes } = update;\r\n        if (!amplitudes.length) return;\r\n\r\n        for (let i = 0; i < amplitudes.length; i++) {\r\n            const { type, value } = amplitudes[i];\r\n            if (type === 'input') {\r\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    switchButtonState(animated = true) {\r\n        const { connected, status } = this.state;\r\n\r\n        let stateId = MUTE_BUTTON_STATE_MUTE;\r\n        if (!connected) {\r\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\r\n        } else {\r\n            if (status === 'forceMuted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\r\n            } else if (status === 'unmuted') {\r\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\r\n            } else if (status === 'muted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTE;\r\n            }\r\n        }\r\n\r\n\r\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id, is_muted } = participant\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.switchButtonState();\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.switchButtonState();\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId, stream } = call;\r\n\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (!groupCall) return;\r\n\r\n        if (!groupCall.can_unmute_self) {\r\n            const { shook } = this.state;\r\n            if (shook) {\r\n                this.setState({\r\n                    shook: false\r\n                }, () => {\r\n                    requestAnimationFrame(() => {\r\n                        this.setState({ shook: true });\r\n                    })\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    shook: true\r\n                });\r\n            }\r\n        } else {\r\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { status, connected, animated, shook } = this.state;\r\n        // console.log('[call][GroupCallMicButton] render');\r\n\r\n        return (\r\n            <div className='group-call-mic-button-wrapper' >\r\n                {animated ? (\r\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\r\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\r\n                    </Button>\r\n                ) : (\r\n                    <div className={classNames('group-call-mic-button',\r\n                        {\r\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\r\n                            'group-call-unmuted': connected && status === 'unmuted',\r\n                            'group-call-connecting': !connected,\r\n                        })}\r\n                         onClick={this.handleClick}\r\n                    >\r\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\r\n                    </div>\r\n                )}\r\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupCallMicButton.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(GroupCallMicButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallPanelButtons.css'\r\n\r\nclass GroupCallPanelButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { status, connected } = this.state;\r\n\r\n        if (connected !== nextState.connected) {\r\n            return true;\r\n        }\r\n\r\n        if (status !== nextState.status) {\r\n            return true;\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id } = participant;\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const { status, connected } = this.state;\r\n        // console.log('[call][GroupCallPanelButtons] render');\r\n\r\n        return (\r\n            <div className={classNames('group-call-panel-buttons', {\r\n                'group-call-connecting': !connected,\r\n                'group-call-muted': connected && status === 'muted',\r\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\r\n                'group-call-unmuted': connected && status === 'unmuted',\r\n            })}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallPanelButtons.propTypes = {};\r\n\r\nexport default GroupCallPanelButtons;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\r\n    'AddMember'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\r\n    'MicOutlined'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\r\n    'MicOffOutlined'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MicIcon from '../../Assets/Icons/MicOutlined';\r\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\r\nimport UserTile from '../Tile/UserTile';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { openUser } from '../../Actions/Client';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallParticipant.css';\r\n\r\nclass GroupCallParticipant extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        participant: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { userId, groupCallId } = props;\r\n        const { prevUserId, prevGroupCallId } = state;\r\n\r\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\r\n            const participants = CallStore.participants.get(groupCallId) || new Map();\r\n            const participant = participants.get(userId);\r\n\r\n            return {\r\n                prevUserId: userId,\r\n                prevGroupCallId: groupCallId,\r\n                participant\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participant, left, top, contextMenu } = this.state;\r\n\r\n        if (participant !== nextState.participant) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { groupCallId, userId } = this.props;\r\n        const { group_call_id, participant } = update;\r\n        if (groupCallId !== group_call_id) return;\r\n        if (!participant) return;\r\n\r\n        const { user_id } = participant;\r\n        if (userId !== user_id) return;\r\n\r\n        this.setState({\r\n            participant\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { userId } = this.props;\r\n        if (userId === UserStore.getMyId()) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleOpenProfile = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n\r\n        openUser(userId, true);\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleSendMessage = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n\r\n        openUser(userId, false);\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n        CallStore.changeUserMuted(userId, true);\r\n    };\r\n\r\n    handleUnmute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n        CallStore.changeUserMuted(userId, false);\r\n    };\r\n\r\n    render() {\r\n        const { userId, t } = this.props;\r\n        const { contextMenu, left, top, participant } = this.state;\r\n        // console.log('[call][GroupCallParticipant] render', participant);\r\n        if (!participant) return null;\r\n\r\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\r\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\r\n\r\n        return (\r\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\r\n                <UserTile userId={userId}/>\r\n                <div className='group-call-participant-content'>\r\n                    <div className='group-call-participant-content-title'>\r\n                        {/*{userId}*/}\r\n                        {getUserFullName(userId)}\r\n                    </div>\r\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\r\n                        {/*{order}*/}\r\n                        {is_speaking ? t('Speaking') : t('Listening')}\r\n                    </div>\r\n                </div>\r\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\r\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\r\n                </div>\r\n\r\n                <Popover\r\n                    classes={{\r\n                        paper: 'group-call-participant-menu-root'\r\n                    }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        { can_be_unmuted_for_all_users && (\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleUnmute}>\r\n                                <ListItemText primary={t('VoipGroupUnmute')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        { can_be_muted_for_all_users && (\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleMute}>\r\n                                <ListItemText primary={t('VoipGroupMute')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        <MenuItem\r\n                            classes={{ root: 'group-call-participant-menu-item' }}\r\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                            TouchRippleProps={{\r\n                                classes : {\r\n                                    child : 'group-call-participant-menu-item-ripple-child',\r\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                }\r\n                            }}\r\n                            onClick={this.handleOpenProfile}>\r\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\r\n                        </MenuItem>\r\n                        <MenuItem\r\n                            classes={{ root: 'group-call-participant-menu-item' }}\r\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                            TouchRippleProps={{\r\n                                classes : {\r\n                                    child : 'group-call-participant-menu-item-ripple-child',\r\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                }\r\n                            }}\r\n                            onClick={this.handleSendMessage}>\r\n                            <ListItemText primary={t('SendMessage')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nGroupCallParticipant.propTypes = {\r\n    userId: PropTypes.number,\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallParticipant);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\r\nimport GroupCallParticipant from './GroupCallParticipant';\r\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\r\nimport { canManageVoiceChats } from '../../Utils/Chat';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './GroupCallParticipants.css';\r\n\r\nclass GroupCallParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            participants: []\r\n        };\r\n\r\n        this.participantsMap = new Map();\r\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId } = props;\r\n        const { prevGroupCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\r\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                participants: participants.map(x => x.user_id)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participants } = this.state;\r\n        if (!albumHistoryEquals(participants, nextState.participants)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.preloadContent();\r\n\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        if (group_call_id !== groupCallId) return;\r\n\r\n        const { order, user_id } = participant;\r\n        if (order !== '0') {\r\n            this.participantsMap.set(user_id, user_id);\r\n            this.loadContent();\r\n\r\n            // wait for profile photo\r\n            setTimeout(() => {\r\n                this.updateParticipants();\r\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\r\n        } else {\r\n            this.updateParticipants();\r\n        }\r\n    };\r\n\r\n    updateParticipants() {\r\n        const { groupCallId } = this.props;\r\n\r\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\r\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\r\n\r\n        this.setState({\r\n            participants: participants.map(x => x.user_id)\r\n        });\r\n    }\r\n\r\n    preloadContent = () => {\r\n        const { participants } = this.state;\r\n        if (!participants) return;\r\n        if (!participants.length) return;\r\n\r\n        participants.forEach(x => {\r\n            this.participantsMap.set(x, x);\r\n        });\r\n        this.loadContent();\r\n    };\r\n\r\n    loadContent = () => {\r\n        const { participantsMap } = this;\r\n        if (!participantsMap) return;\r\n        if (!participantsMap.size) return;\r\n\r\n        this.participantsMap = new Map();\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, Array.from(participantsMap.keys()));\r\n    }\r\n\r\n    render() {\r\n        const { t, groupCallId } = this.props;\r\n        const { participants } = this.state;\r\n        // console.log('[call][GroupCallParticipants] render');\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        if (!currentGroupCall) return null;\r\n\r\n        const { chatId } = currentGroupCall;\r\n\r\n        const manageGroupCalls = canManageVoiceChats(chatId);\r\n\r\n        return (\r\n            <div className='group-call-participants'>\r\n                { manageGroupCalls && (\r\n                    <div className='group-call-participants-invite'>\r\n                        <AddMemberIcon/>\r\n                        <div className='group-call-participants-invite-text'>\r\n                            {t('VoipGroupInviteMember')}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallParticipants.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallParticipants);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\r\n    'Tune'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TuneIcon from '../../Assets/Icons/Tune';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport './GroupCallSettingsButton.css';\r\n\r\nclass GroupCallSettingsButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\r\n                <TuneIcon />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallSettingsButton.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default GroupCallSettingsButton;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport GroupCallMicButton from './GroupCallMicButton';\r\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\r\nimport GroupCallParticipants from './GroupCallParticipants';\r\nimport GroupCallSettings from './GroupCallSettings';\r\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\r\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCallPanel.css';\r\n\r\nclass GroupCallPanel extends React.Component {\r\n    state = {\r\n        openSettings: false\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.handleClose();\r\n    }\r\n\r\n    handleLeave = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        await CallStore.leaveGroupCall(chatId, groupCallId);\r\n    };\r\n\r\n    handleOpenSettings = async event => {\r\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n        this.setState({\r\n            openSettings: true\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({\r\n            openSettings: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    render() {\r\n        const { groupCallId, t } = this.props;\r\n        const { openSettings } = this.state;\r\n        const { currentGroupCall } = CallStore;\r\n        if (!currentGroupCall) return null;\r\n\r\n        const { chatId } = currentGroupCall;\r\n\r\n        return (\r\n            <div className='group-call-panel'>\r\n                <div className='group-call-panel-header'>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </div>\r\n                    <div className='group-call-panel-caption'>\r\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\r\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\r\n                    </div>\r\n                    <div style={{ width: 48 }}/>\r\n                </div>\r\n                <div className='group-call-panel-participants scrollbars-hidden'>\r\n                    <GroupCallParticipants groupCallId={groupCallId}/>\r\n                </div>\r\n                <GroupCallPanelButtons>\r\n                    <GroupCallMicButton/>\r\n                    <div className='group-call-panel-button'>\r\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {t('Settings')}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\r\n                            <CallEndIcon />\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {t('Leave')}\r\n                        </div>\r\n                    </div>\r\n                </GroupCallPanelButtons>\r\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallPanel.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport GroupCallPanel from './GroupCallPanel';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCall.css';\r\n\r\nclass GroupCall extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = {\r\n            fullScreen: false\r\n        };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setPosition();\r\n\r\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    onClientUpdateGroupCallFullScreen = update => {\r\n        const { fullscreen } = update;\r\n\r\n        this.setState({ fullscreen });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        const element = document.getElementById('group-call');\r\n        if (element) element.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        this.left = parseInt(element.style.left, 10);\r\n        this.top = parseInt(element.style.top, 10);\r\n        this.pageX = event.nativeEvent.pageX;\r\n        this.pageY = event.nativeEvent.pageY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.windowDragging = true;\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('group-call');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\r\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\r\n\r\n        const element = document.getElementById('group-call');\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.windowDragging = false;\r\n    };\r\n\r\n    setPosition() {\r\n        const element = document.getElementById('group-call');\r\n        let { pipParams } = CallStore;\r\n        if (!pipParams) {\r\n            pipParams = {\r\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\r\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\r\n            }\r\n        }\r\n\r\n        const { left: prevLeft, top: prevTop } = pipParams;\r\n\r\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\r\n\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    }\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('group-call');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        CallStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    render() {\r\n        const { groupCallId } = this.props;\r\n        const { fullscreen } = this.state;\r\n\r\n        return (\r\n            <div\r\n                id='group-call'\r\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\r\n                onMouseDown={this.handleMouseDown}\r\n            >\r\n                <GroupCallPanel groupCallId={groupCallId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupCall.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default GroupCall;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSaveRef } from '../../Utils/HOC';\r\nimport { withIV } from './IVContext';\r\nimport { getPageBlock } from '../../Utils/InstantView';\r\nimport './Article.css';\r\n\r\nconst articleRefs = new Map();\r\n\r\nclass Article extends React.PureComponent {\r\n    render() {\r\n        const { forwardedRef, iv } = this.props;\r\n        if (!iv) return null;\r\n\r\n        const { page_blocks, is_rtl } = iv;\r\n        if (!page_blocks) return;\r\n\r\n        articleRefs.clear();\r\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\r\n\r\n        return (\r\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\r\n                {blocks}\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nArticle.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withIV\r\n);\r\n\r\nexport { articleRefs };\r\n\r\nexport default enhance(Article);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\r\n    'Left'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaCaption.css';\r\n\r\nclass MediaCaption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: false,\r\n            bottom: false\r\n        };\r\n\r\n        this.scrollRef = React.createRef();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        if (nextProps.text !== text) return true;\r\n        if (nextState.top !== top) return true;\r\n        if (nextState.bottom !== bottom) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleScroll();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const scroll = this.scrollRef.current;\r\n        if (!scroll) return;\r\n\r\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\r\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\r\n\r\n        this.setState({\r\n            top,\r\n            bottom\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        return (\r\n            <div className='media-caption' onClick={this.handleClick}>\r\n                <div\r\n                    ref={this.scrollRef}\r\n                    className={classNames(\r\n                        'scrollbars-hidden',\r\n                        'media-caption-wrapper', {\r\n                            'media-caption-wrapper-top': top,\r\n                            'media-caption-wrapper-bottom': bottom,\r\n                            'media-caption-wrapper-both': !top && !bottom\r\n                        })}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='media-caption-text'>{text}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaCaption.propTypes = {\r\n    text: PropTypes.array\r\n};\r\n\r\nMediaCaption.defaultProps = {};\r\n\r\nexport default MediaCaption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Caption from '../InstantView/Blocks/Caption';\r\nimport SafeLink from '../Additional/SafeLink';\r\nimport Player from '../Player/Player';\r\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { isEmptyText } from '../../Utils/InstantView';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass InstantViewMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { media, size, caption, url } = props;\r\n\r\n        if (media !== state.prevMedia) {\r\n            const thumbnail = getViewerThumbnail(media);\r\n            const minithumbnail = getViewerMinithumbnail(media);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                const { video } = media;\r\n                if (video) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevMedia: media,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                thumbnail,\r\n                minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateInstantViewViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = update;\r\n        const { media, size } = this.props;\r\n        const { file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { fileId } = update;\r\n        const { thumbnail } = this.state;\r\n\r\n        if (thumbnail && thumbnail.file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { media, caption, url } = this.props;\r\n        if (!media) return null;\r\n\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            mimeType,\r\n            thumbnail,\r\n            minithumbnail,\r\n            isPlaying,\r\n            supportsStreaming\r\n        } = this.state;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        switch (media['@type']) {\r\n            case 'video': {\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <Player\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            fileId={file.id}\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </Player>\r\n                        {!isPlaying && !supportsStreaming && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            case 'animation': {\r\n                // content = (\r\n                //     <Animation\r\n                //         type='preview'\r\n                //         stretch={true}\r\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n                //         animation={media}\r\n                //         onClick={this.handleContentClick}\r\n                //         showProgress={false}\r\n                //         style={{ borderRadius: 0 }}\r\n                //     />\r\n                // );\r\n\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            onClick={this.handleContentClick}\r\n                            loop\r\n                            autoPlay\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </video>\r\n                        {!isPlaying && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            default: {\r\n                content = (\r\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                {content}\r\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\r\n                    <MediaCaption\r\n                        text={\r\n                            <>\r\n                                <Caption text={caption.text} credit={caption.credit} />\r\n                                <SafeLink url={url} />\r\n                            </>\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewerContent.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object,\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default InstantViewMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerButton.css';\r\n\r\nclass MediaViewerButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { disabled, onClick } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { disabled, grow, children, className, style } = this.props;\r\n\r\n        const cx = classNames(\r\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\r\n            { grow: grow },\r\n            className\r\n        );\r\n\r\n        return (\r\n            <div className={cx} style={style} onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaViewerFooterText.css';\r\n\r\nclass MediaViewerFooterText extends React.Component {\r\n    render() {\r\n        const { title, subtitle, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-viewer-footer-text' style={style}>\r\n                <div className='media-viewer-footer-text-wrapper'>\r\n                    <span>{title}</span>\r\n                    {Boolean(subtitle) && (\r\n                        <span>\r\n                            &nbsp;\r\n                            {subtitle}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterText.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerFooterText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerFooterButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, disabled } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { checked, children, disabled, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('media-viewer-footer-button', {\r\n                    'media-viewer-footer-button-checked': checked,\r\n                    'media-viewer-footer-button-disabled': disabled\r\n                })}\r\n                title={title}\r\n                onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterButton.propTypes = {\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerFooterButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '../../Assets/Icons/Download';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerDownloadButton extends React.Component {\r\n    state = {  };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { fileId } = props;\r\n        const { prevPropsFileId } = state;\r\n\r\n        if (fileId !== prevPropsFileId) {\r\n            return {\r\n                prevPropsFileId: fileId,\r\n                fileId,\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.fileId !== this.props.chatId) {\r\n            this.checkFileLoaded();\r\n        }\r\n    }\r\n\r\n    checkFileLoaded() {\r\n        // console.log('[down] checkLoaded');\r\n        const { fileId } = this.props;\r\n        const blob = FileStore.getBlob(fileId);\r\n        if (blob) {\r\n            // console.log('[down] checkLoaded blob');\r\n            return;\r\n        }\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) {\r\n            // console.log('[down] checkLoaded file');\r\n            return;\r\n        }\r\n\r\n        const { local } = file;\r\n        if (!local) return;\r\n        if (!local.is_downloading_completed) return;\r\n\r\n        // console.log('[down] checkLoaded getLocal');\r\n        const store = FileStore.getStore();\r\n        FileStore.getLocalFile(store, file, null, () => {\r\n            // console.log('[down] checkLoaded getLocal complete');\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkFileLoaded();\r\n\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const { fileId } = this.props;\r\n        const { file } = update;\r\n\r\n        if (file.id !== fileId) return;\r\n\r\n        if (file.local.is_downloading_completed) {\r\n            this.checkFileLoaded();\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = this.state;\r\n\r\n        if (fileId === update.fileId) {\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        }\r\n    };\r\n\r\n    static saveDisabled = fileId => {\r\n        return !Boolean(FileStore.getBlob(fileId));\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick } = this.props;\r\n        const { disabled } = this.state;\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { title, children, disabled: propsDisabled } = this.props;\r\n        const { disabled } = this.state;\r\n\r\n        return (\r\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\r\n                {children || <SaveIcon />}\r\n            </MediaViewerFooterButton>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerDownloadButton.propTypes = {\r\n    fileId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default MediaViewerDownloadButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withIV } from '../InstantView/IVContext';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\r\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\r\nimport { getInputMediaContent } from '../../Utils/Media';\r\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewMediaViewer.css';\r\n\r\nclass InstantViewMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: -1,\r\n            hasPreviousMedia: false,\r\n            hasNextMedia: false,\r\n            blocks: []\r\n        };\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        if (!media) return;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const isVideo = media['@type'] === 'video';\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    loadContent() {\r\n        const { iv, media } = this.props;\r\n\r\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\r\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\r\n\r\n        this.setState({\r\n            blocks,\r\n            index,\r\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n            hasNextMedia: this.hasNextMedia(index, blocks)\r\n        });\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n    }\r\n\r\n    hasPreviousMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < blocks.length;\r\n    }\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index + 1;\r\n\r\n        if (!this.hasPreviousMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    hasNextMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    }\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index - 1;\r\n\r\n        if (!this.hasNextMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    loadMedia = index => {\r\n        const { blocks } = this.state;\r\n\r\n        if (index < 0) return false;\r\n        if (index >= blocks.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                index,\r\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n                hasNextMedia: this.hasNextMedia(index, blocks)\r\n            }\r\n        );\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n        return true;\r\n    };\r\n\r\n    handleClose = () => {\r\n        setInstantViewViewerContent(null);\r\n\r\n        const { index, blocks } = this.state;\r\n        if (index !== -1) {\r\n            cancelPreloadIVMediaViewerContent(index, blocks);\r\n        }\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { media } = this.props;\r\n\r\n        const inputMessageContent = getInputMediaContent(media, null);\r\n        if (!inputMessageContent) return;\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { media } = this.props;\r\n\r\n        saveMedia(media, null);\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { size, t } = this.props;\r\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        const caption = getBlockCaption(block);\r\n        const url = getBlockUrl(block);\r\n\r\n        const [width, height, file] = getViewerFile(media, size);\r\n\r\n        let title = '';\r\n        if (media['@type'] === 'photo') {\r\n            title = t('AttachPhoto');\r\n        }\r\n        if (media['@type'] === 'video') {\r\n            title = t('AttachVideo');\r\n        } else if (media['@type'] === 'animation') {\r\n            title = t('AttachGif');\r\n        }\r\n        const maxCount = blocks.length;\r\n\r\n        return (\r\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\r\n                        style={{ marginLeft: 128 }}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='media-viewer-content-column'>\r\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\r\n                    </div>\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewer.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withIV\r\n);\r\n\r\nexport default enhance(InstantViewMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Article from './Article';\r\nimport { articleRefs } from './Article';\r\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\r\nimport IVContext from './IVContext';\r\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport { itemsInView, throttle } from '../../Utils/Common';\r\nimport { getInnerBlocks } from '../../Utils/InstantView';\r\nimport { openInstantView } from '../../Actions/InstantView';\r\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { IV_PHOTO_SIZE } from '../../Constants';\r\nimport InstantViewStore from '../../Stores/InstantViewStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewer.css';\r\n\r\nclass InstantViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.articleRef = React.createRef();\r\n        this.instantViewerRef = React.createRef();\r\n\r\n        this.state = {};\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.instantView !== state.prevInstantView) {\r\n            return {\r\n                prevInstantView: props.instantView,\r\n                hasPrev: InstantViewStore.hasPrev(),\r\n                hasScroll: false,\r\n                media: null,\r\n                caption: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { instantView } = this.props;\r\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\r\n\r\n        if (instantView !== nextProps.instantView) {\r\n            return true;\r\n        }\r\n\r\n        if (hasScroll !== nextState.hasScroll) {\r\n            return true;\r\n        }\r\n\r\n        if (hasPrev !== nextState.hasPrev) {\r\n            return true;\r\n        }\r\n\r\n        if (media !== nextState.media) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextState.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (url !== nextState.url) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.handleScroll();\r\n        this.scrollToBlock(this.props.block, 'smooth');\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    onClientUpdateInstantViewViewerContent = update => {\r\n        const { content } = update;\r\n        if (!content) {\r\n            this.setState({ media: null, caption: null, url: null });\r\n            return;\r\n        }\r\n\r\n        const { media, caption, url, instantView } = content;\r\n\r\n        if (this.props.instantView !== instantView) return;\r\n\r\n        this.setState({ media, caption, url });\r\n    };\r\n\r\n    onClientUpdateInstantViewUrl = async update => {\r\n        const { url } = update;\r\n        const active = InstantViewStore.getCurrent();\r\n        const { instantView, url: oldUrl } = this.props;\r\n\r\n        if (active !== instantView) return;\r\n\r\n        if (instantView && url.startsWith(oldUrl)) {\r\n            const hash = new URL(url).hash;\r\n            if (url.indexOf('#') === url.length - 1) {\r\n                this.scrollTop('smooth');\r\n\r\n                return;\r\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    scrollToBlock(block, behavior) {\r\n        if (!block) return false;\r\n\r\n        if (!articleRefs) return false;\r\n\r\n        const ref = articleRefs.get(block);\r\n        if (!ref) return false;\r\n\r\n        const element = ReactDOM.findDOMNode(ref);\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollToElement(element, behavior) {\r\n        if (!element) return false;\r\n\r\n        const details = [];\r\n        let finished = false;\r\n        let currentElement = element;\r\n        do {\r\n            currentElement = currentElement.parentNode;\r\n            if (currentElement) {\r\n                if (currentElement.nodeName === 'DETAILS') {\r\n                    details.push(currentElement);\r\n                } else if (currentElement.nodeName === 'ARTICLE') {\r\n                    finished = true;\r\n                }\r\n            } else {\r\n                finished = true;\r\n            }\r\n        } while (!finished);\r\n\r\n        details.forEach(x => (x.open = true));\r\n\r\n        element.scrollIntoView({\r\n            block: 'center',\r\n            behavior\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    scrollToHash(hash, behavior) {\r\n        if (!hash) return false;\r\n\r\n        const element = document.getElementById(hash.substr(1));\r\n\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollTop(behavior) {\r\n        const element = this.instantViewerRef.current;\r\n\r\n        switch (behavior) {\r\n            case 'smooth': {\r\n                scrollTop(element);\r\n                break;\r\n            }\r\n            default: {\r\n                element.scrollTo({\r\n                    top: 0,\r\n                    behavior\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { instantView, block, url } = this.props;\r\n\r\n        const hash = new URL(url).hash;\r\n        if (prevProps.instantView !== instantView) {\r\n            if (prevProps.url !== url) {\r\n                if (url.indexOf('#') === url.length - 1) {\r\n                    this.scrollTop('auto');\r\n                } else if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('auto');\r\n                }\r\n            } else {\r\n                if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('smooth');\r\n                }\r\n            }\r\n\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const { media } = this.state;\r\n\r\n                if (media) {\r\n                    setInstantViewViewerContent(null);\r\n                    return;\r\n                }\r\n\r\n                this.handleClose();\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose() {\r\n        setInstantViewContent(null);\r\n    }\r\n\r\n    handleBack = () => {\r\n        const { hasPrev, hasScroll } = this.state;\r\n        if (hasScroll) {\r\n            this.scrollTop('smooth');\r\n            return;\r\n        }\r\n\r\n        if (hasPrev) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdatePrevInstantView'\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const element = this.instantViewerRef.current;\r\n        this.setState({\r\n            hasScroll: element.scrollTop > 50\r\n        });\r\n\r\n        this.updateItemsInView();\r\n    };\r\n\r\n    updateItemsInView() {\r\n        if (!this.mounted) return;\r\n\r\n        const { instantView } = this.props;\r\n        if (!instantView) return;\r\n\r\n        const { page_blocks } = instantView;\r\n\r\n        const blocks = new Map();\r\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            const block = page_blocks[items[i]];\r\n            blocks.set(block, block);\r\n\r\n            const innerBlocks = getInnerBlocks(block);\r\n            innerBlocks.forEach(x => blocks.set(x, x));\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateBlocksInView',\r\n            blocks\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { instantView } = this.props;\r\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\r\n        if (!instantView) return null;\r\n\r\n        return (\r\n            <IVContext.Provider value={instantView}>\r\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\r\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\r\n                        <MediaViewerButton\r\n                            className='instant-viewer-left-button'\r\n                            style={{ alignItems: 'flex-start' }}\r\n                            onClick={this.handleBack}>\r\n                            <NavigateBeforeIcon\r\n                                style={{\r\n                                    transition: 'transform 0.25s ease-out',\r\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\r\n                                }}\r\n                            />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='instant-viewer-content-column'>\r\n                        <div>\r\n                            <Article ref={this.articleRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='instant-viewer-right-column'>\r\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\r\n                            <CloseIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\r\n            </IVContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewer.propTypes = {\r\n    instantView: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(InstantViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateHint } from '../../Utils/Message';\r\nimport UserTile from './UserTile';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaInfo.css';\r\n\r\nclass MediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date, sender_id } = message;\r\n\r\n        const dateHint = getDateHint(date);\r\n\r\n        const tileControl = sender_id.user_id ? <UserTile userId={sender_id.user_id} /> : <ChatTile chatId={chatId} />;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    {tileControl}\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={sender_id} />\r\n                        </div>\r\n                        <div className='media-info-row meta'>\r\n                            <span>{dateHint}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Player from '../Player/Player';\r\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\r\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewerContent.css';\r\n\r\nclass MediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, size, t } = props;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\r\n\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            const { content } = message;\r\n            const { web_page: webPage } = content;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text,\r\n                thumbnail,\r\n                minithumbnail,\r\n                webPage\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            this.setState({\r\n                thumbnail\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, size, t } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n\r\n        const { source } = this.state;\r\n        if (!source) return;\r\n\r\n        source.loadNextBuffer();\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            supportsStreaming,\r\n            mimeType,\r\n            text,\r\n            minithumbnail,\r\n            thumbnail,\r\n            webPage,\r\n            isPlaying\r\n        } = this.state;\r\n\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n\r\n        const isEmbed = isEmbedMessage(chatId, messageId);\r\n        const isVideo = isVideoMessage(chatId, messageId);\r\n        const isAnimation = isAnimationMessage(chatId, messageId);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        if (isVideo) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <Player\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        fileId={file.id}\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </Player>\r\n                    {!isPlaying && !supportsStreaming && thumb}\r\n                </div>\r\n            );\r\n        } else if (isAnimation) {\r\n            // const message = MessageStore.get(chatId, messageId);\r\n            //\r\n            // content = (\r\n            //     <Animation\r\n            //         type='preview'\r\n            //         stretch={true}\r\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n            //         animation={message.content.animation || message.content.web_page.animation}\r\n            //         onClick={this.handleContentClick}\r\n            //         showProgress={false}\r\n            //         style={{ borderRadius: 0 }}\r\n            //         />\r\n            // );\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        onClick={this.handleContentClick}\r\n                        loop\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </video>\r\n                    {!isPlaying && thumb}\r\n                </div>\r\n            );\r\n        } else if (webPage && webPage.embed_url) {\r\n            let { embed_url: url } = webPage;\r\n\r\n            switch (webPage.site_name) {\r\n                case 'Coub': {\r\n                    break;\r\n                }\r\n                case 'SoundCloud': {\r\n                    break;\r\n                }\r\n                case 'Spotify': {\r\n                    break;\r\n                }\r\n                case 'Twitch': {\r\n                    url += `&parent=${window.location.hostname}`;\r\n                    break;\r\n                }\r\n                case 'YouTube': {\r\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\r\n                    break;\r\n                }\r\n                case 'Vimeo': {\r\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\r\n                    break;\r\n                }\r\n                case 'КиноПоиск': {\r\n                    break;\r\n                }\r\n                case 'Яндекс.Музыка': {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            content = (\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='media-viewer-content'>\r\n                    {content}\r\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                </div>\r\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewerContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport MediaInfo from '../Tile/MediaInfo';\r\nimport MediaViewerContent from './MediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\r\nimport {\r\n    cancelPreloadMediaViewerContent,\r\n    getMediaFile,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    saveMedia,\r\n    uploadMedia\r\n} from '../../Utils/File';\r\nimport {\r\n    canMessageBeDeleted,\r\n    filterDuplicateMessages,\r\n    isAnimationMessage,\r\n    isEmbedMessage,\r\n    isMediaContent,\r\n    isVideoMessage\r\n} from '../../Utils/Message';\r\nimport { between } from '../../Utils/Common';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass MediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.history = [];\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            background: 'media-viewer-default',\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            currentMessageId: messageId,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false,\r\n            deleteForAll: true\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        if (nextState.background !== background) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentMessageId !== currentMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadHistory();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!fullscreenElement) {\r\n                    this.handlePrevious();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!fullscreenElement) {\r\n                    this.handleNext();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        const isVideo = isVideoMessage(chatId, currentMessageId);\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id, new_content, old_content } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        if (!message) return;\r\n\r\n        loadMediaViewerContent([message]);\r\n\r\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\r\n        if (addMessage) {\r\n            if (\r\n                this.history.length >= 2 &&\r\n                (this.firstSliceLoaded ||\r\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\r\n            ) {\r\n                let inserted = false;\r\n                let history = [];\r\n                for (let i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id > message_id) {\r\n                        history.push(this.history[i]);\r\n                    } else {\r\n                        if (!inserted) {\r\n                            inserted = true;\r\n                            history.push(message);\r\n                        }\r\n                        history.push(this.history[i]);\r\n                    }\r\n                }\r\n                this.history = history;\r\n            }\r\n\r\n            const index = this.history.findIndex(x => x.id === currentMessageId);\r\n            this.setState({\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index),\r\n                totalCount: totalCount + 1\r\n            });\r\n        }\r\n\r\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\r\n        if (removeMessage) {\r\n            let oldHistory = this.history;\r\n            this.history = this.history.filter(x => x.id !== message_id);\r\n\r\n            if (currentMessageId === message_id) {\r\n                const filterMap = new Map();\r\n                filterMap.set(message_id, message_id);\r\n\r\n                this.moveToNextMedia(oldHistory, filterMap);\r\n                this.setState({\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            } else {\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\r\n            accumulator.set(currentId, currentId);\r\n            return accumulator;\r\n        }, new Map());\r\n\r\n        const oldHistory = this.history;\r\n        let deletedCount = oldHistory.length;\r\n\r\n        this.history = this.history.filter(x => !filterMap.has(x.id));\r\n        deletedCount -= this.history.length;\r\n\r\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\r\n\r\n        if (!this.history.length) {\r\n            setMediaViewerContent(null);\r\n            return;\r\n        }\r\n\r\n        if (filterMap.has(currentMessageId)) {\r\n            this.moveToNextMedia(oldHistory, filterMap);\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        const { message } = update;\r\n        if (!message) return;\r\n        if (!isMediaContent(message.content)) return;\r\n\r\n        if (message.chat_id !== chatId) return;\r\n        if (!this.firstSliceLoaded) return;\r\n\r\n        this.history = [message].concat(this.history);\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: totalCount + 1\r\n        });\r\n    };\r\n\r\n    getFilter = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterChatPhoto'\r\n                };\r\n            }\r\n            case 'messagePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            case 'messageVideo': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: messageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: 2 * MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = result.messages;\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index)\r\n        });\r\n\r\n        if (index === -1) {\r\n            this.history = [MessageStore.get(chatId, currentMessageId)];\r\n            preloadMediaViewerContent(0, this.history);\r\n        } else {\r\n            preloadMediaViewerContent(index, this.history);\r\n\r\n            const filter = this.getFilter(chatId, messageId);\r\n            if (!filter) return;\r\n\r\n            const maxCount = 1500;\r\n            let count = 0;\r\n            while (!this.firstSliceLoaded && count < maxCount) {\r\n                const result = await TdLibController.send({\r\n                    '@type': 'searchChatMessages',\r\n                    chat_id: chatId,\r\n                    query: '',\r\n                    sender_user_id: 0,\r\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\r\n                    offset: -99,\r\n                    limit: 99 + 1,\r\n                    filter: filter\r\n                });\r\n                count += result.messages.length;\r\n\r\n                filterDuplicateMessages(result, this.history);\r\n                MessageStore.setItems(result.messages);\r\n\r\n                this.history = result.messages.concat(this.history);\r\n                this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n                const { currentMessageId } = this.state;\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    firstSliceLoaded: this.firstSliceLoaded,\r\n                    totalCount: result.total_count\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        setMediaViewerContent(null);\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        if (index !== -1) {\r\n            cancelPreloadMediaViewerContent(index, this.history);\r\n        }\r\n    };\r\n    handleExport = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        this.setState({disableOnUpload: true});\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        let media = null;\r\n         switch (content['@type']) {\r\n\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (photo) {\r\n                    media = photo;\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    media = video;\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                media = video;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (!media) return;\r\n\r\n        var this_o = this;\r\n        const uploaded_url = uploadMedia(media, message);\r\n\r\n        if ( window.location !== window.parent.location ) { \r\n            uploaded_url.then(response =>  response.json())\r\n            .then( function(obj){\r\n                if(message.content.text !== undefined){\r\n            \t\twindow.parent.postMessage( {'url': obj.url, 'caption': message.content.text.text}, \"*\");\r\n            \t} else {\r\n            \t\twindow.parent.postMessage(obj.url, \"*\");\r\n            \t}\r\n                this_o.setState({disableOnUpload: false});\r\n            });\r\n        } else {\r\n            uploaded_url.then(response =>  response.json())\r\n            .then( function(obj){ \r\n            \t\r\n                if(message.content.text !== undefined){\r\n            \t\talert(obj.url +' '+ message.content.text.text);\r\n            \t} else {\r\n            \t\talert(obj.url)\r\n            \t}\r\n                this_o.setState({disableOnUpload: false});\r\n            });\r\n        }\r\n    };\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        let media = null;\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                media = animation;\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                media = document;\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (animation) {\r\n                    media = animation;\r\n                    break;\r\n                }\r\n\r\n                if (document) {\r\n                    media = document;\r\n                    break;\r\n                }\r\n\r\n                if (photo) {\r\n                    media = photo;\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    media = video;\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                media = video;\r\n                break;\r\n            }\r\n        }\r\n\r\n        saveMedia(media, message);\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        forwardMessages(chatId, [currentMessageId]);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleDialogOpen();\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: 0,\r\n                limit: MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = this.history.concat(result.messages);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: MEDIA_SLICE_LIMIT + 1,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n        this.history = result.messages.concat(this.history);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            firstSliceLoaded: this.firstSliceLoaded,\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentMessageId: this.history[index].id,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        preloadMediaViewerContent(index, this.history);\r\n        return true;\r\n    };\r\n\r\n    moveToNextMedia = (oldHistory, filterMap) => {\r\n        const { currentMessageId } = this.state;\r\n\r\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\r\n        let nextId = 0;\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                nextId = oldHistory[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (!nextId) {\r\n            for (let i = index + 1; i < oldHistory.length; i++) {\r\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                    nextId = oldHistory[i].id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!nextId) return;\r\n\r\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            } else if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ deleteConfirmationOpened: true });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, deleteForAll } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\r\n        if (!canBeDeleted) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: [currentMessageId],\r\n            revoke: can_be_deleted_for_all_users && deleteForAll\r\n        });\r\n    };\r\n\r\n    handleChangeDeleteForAll = event => {\r\n        this.setState({ deleteForAll: event.target.checked });\r\n    };\r\n\r\n    handleInvertColors = () => {\r\n        const { background } = this.state;\r\n\r\n        let nextBackground = 'media-viewer-default';\r\n        switch (background) {\r\n            case 'media-viewer-default': {\r\n                nextBackground = 'media-viewer-dark';\r\n                break;\r\n            }\r\n            case 'media-viewer-dark': {\r\n                nextBackground = 'media-viewer-light';\r\n                break;\r\n            }\r\n            case 'media-viewer-light': {\r\n                nextBackground = 'media-viewer-default';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            background: nextBackground\r\n        });\r\n    };\r\n\r\n    canBeForwarded = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return false;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!content) return false;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return true;\r\n            }\r\n            default: {\r\n                return can_be_forwarded;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            deleteForAll,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount && firstSliceLoaded) {\r\n            index = this.history.findIndex(x => x.id === currentMessageId);\r\n        }\r\n        const maxCount = Math.max(this.history.length, totalCount);\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        const { can_be_deleted_for_all_users } = message;\r\n\r\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\r\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\r\n\r\n        let deleteConfirmationContent = '';\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\r\n        } else {\r\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\r\n        }\r\n        const deleteConfirmation = deleteConfirmationOpened ? (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={deleteConfirmationOpened}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\r\n                    {can_be_deleted_for_all_users && (\r\n                        <FormControlLabel\r\n                            label={t('DeleteForAll')}\r\n                            control={\r\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\r\n                            }\r\n                            checked={deleteForAll}\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\r\n\r\n        const fileId = file ? file.id : 0;\r\n        let title = t('AttachPhoto');\r\n        if (isEmbedMessage(chatId, currentMessageId)) {\r\n            title = '';\r\n        } else if (isVideoMessage(chatId, currentMessageId)) {\r\n            title = t('AttachVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            title = t('AttachGif');\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', background)}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleExport} />\r\n                    <MediaViewerFooterButton\r\n                        title={t('Forward')}\r\n                        disabled={!canBeForwarded}\r\n                        onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\r\n                        <DeleteIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <MediaViewerContent\r\n                            chatId={chatId}\r\n                            messageId={currentMessageId}\r\n                            size={PHOTO_BIG_SIZE}\r\n                            onClick={this.handlePrevious}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                <div className='media-viewer-footer'/>\r\n                {deleteConfirmation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\r\nimport FullScreen from '../../Assets/Icons/FullScreen';\r\nimport Hint from './Hint';\r\nimport Player from './Player';\r\nimport Progress from './Progress';\r\nimport { clamp, getDurationString } from '../../Utils/Common';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport {\r\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\r\n    PLAYER_PLAYBACKRATE_MIN,\r\n    PLAYER_PLAYBACKRATE_STEP,\r\n    PLAYER_SEEK_STEP_BIG,\r\n    PLAYER_SEEK_STEP_SMALL,\r\n    PLAYER_VOLUME_MAX,\r\n    PLAYER_VOLUME_MIN,\r\n    PLAYER_VOLUME_STEP\r\n} from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PipPlayer.css';\r\n\r\nclass PipPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.state = { };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\r\n        if (state.prevVideo !== video) {\r\n            return {\r\n                prevVideo: video,\r\n                duration,\r\n                currentTime,\r\n                volume,\r\n                play,\r\n                buffered,\r\n                waiting,\r\n                dragging: false,\r\n                hidden: false,\r\n                fullscreen: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { video } = this.props;\r\n        this.connectPlayer(video);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { video } = this.props;\r\n        this.disconnectPlayer(video);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onClientUpdateMediaShortcut = update => {\r\n        const { event } = update;\r\n        if (!event) return;\r\n\r\n        this.onKeyDown(event);\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        let handled = false;\r\n        switch (code) {\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClose();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyJ': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyL': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowUp': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Space':\r\n            case 'KeyK': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClick();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyM': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleMute();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyF': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleFullScreen();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyI': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    // this.handlePictureInPicture();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Digit0':\r\n            case 'Digit1':\r\n            case 'Digit2':\r\n            case 'Digit3':\r\n            case 'Digit4':\r\n            case 'Digit5':\r\n            case 'Digit6':\r\n            case 'Digit7':\r\n            case 'Digit8':\r\n            case 'Digit9': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\r\n                    this.handleSeekProgress(progress);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Home': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'End': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.duration - 1.0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Comma': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Period': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (handled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    showMediaHint(text) {\r\n        const { fileId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaHint',\r\n            fileId,\r\n            text\r\n        });\r\n    }\r\n\r\n    handleVolume = volume => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\r\n\r\n        video.volume = volume;\r\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\r\n    };\r\n\r\n    handlePlaybackRate = rate => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\r\n\r\n        video.playbackRate = rate;\r\n        this.showMediaHint(`${rate}x`);\r\n    };\r\n\r\n    handleSeekProgress = progress => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(progress * video.duration);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n        this.setState({ currentTime });\r\n    };\r\n\r\n    onFullScreenChange = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\r\n        const fullscreen = fullscreenElement === fullscreenPlayer;\r\n\r\n        this.setState({\r\n            fullscreen\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('pip-player');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { video } = this.props;\r\n\r\n        if (prevProps.video !== video) {\r\n            this.disconnectPlayer(prevProps.video)\r\n            this.connectPlayer(video);\r\n        }\r\n    }\r\n\r\n    connectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        const pipPlayer = document.getElementById('pip-player');\r\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\r\n        pipPlayer.style.left = left + 'px';\r\n        pipPlayer.style.top = top + 'px';\r\n\r\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\r\n        pipPlayerWrapper.focus();\r\n\r\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\r\n\r\n        const container = document.getElementById('pip-player-container');\r\n        if (!container) return;\r\n\r\n        video.onloadedmetadata = this.handleLoadedMetadata;\r\n        video.onloadeddata = this.handleLoadedData;\r\n        video.oncanplay = this.handleCanPlay;\r\n        video.onplay = this.handlePlay;\r\n        video.onpause = this.handlePause;\r\n        video.onended = this.handleEnded;\r\n        video.ontimeupdate = this.handleTimeUpdate;\r\n        video.onvolumechange = this.handleVolumeChange;\r\n        video.onprogress = this.handleProgress;\r\n        video.onwaiting = this.handleWaiting;\r\n\r\n        container.innerHTML = '';\r\n        container.appendChild(video);\r\n    }\r\n\r\n    disconnectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        video.onloadedmetadata = null;\r\n        video.onloadeddata = null;\r\n        video.oncanplay = null;\r\n        video.onplay = null;\r\n        video.onpause = null;\r\n        video.onended = null;\r\n        video.ontimeupdate = null;\r\n        video.onvolumechange = null;\r\n        video.onprogress = null;\r\n        video.onwaiting = null;\r\n    }\r\n\r\n    handleLoadedData = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n    };\r\n\r\n    handleLoadedMetadata = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { currentTime } = this.state;\r\n        const { duration, volume, buffered } = video;\r\n        // const currentTime = this.getCurrentTime();\r\n\r\n        this.setState({\r\n            duration,\r\n            // currentTime,\r\n            volume,\r\n            waiting: true,\r\n            buffered\r\n        }, () => {\r\n            if (!currentTime) return;\r\n\r\n            video.currentTime = currentTime;\r\n        });\r\n    };\r\n\r\n    handleCanPlay = event => {\r\n        const { target: video } = event;\r\n\r\n        this.setState({\r\n            waiting: false\r\n        }, () => {\r\n            if (!video) return;\r\n\r\n            const { play } = this.state;\r\n            if (play) {\r\n                video.play();\r\n            } else {\r\n                video.pause();\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePlay = event => {\r\n        const { onPlay } = this.props;\r\n\r\n        this.setState({\r\n            play: true,\r\n            hidden: true\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\r\n        onPlay && onPlay(event);\r\n    };\r\n\r\n    handlePause = event => {\r\n        const { onPause } = this.props;\r\n\r\n        this.setState({\r\n            play: false,\r\n            hidden: false\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\r\n        onPause && onPause(event);\r\n    };\r\n\r\n    handleEnded = event => {\r\n        const { onEnded } = this.props;\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\r\n        onEnded && onEnded(event);\r\n\r\n        const { video } = this.props;\r\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\r\n    };\r\n\r\n    handleTimeUpdate = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n        const { currentTime, duration, volume, buffered } = video;\r\n\r\n        this.setState({\r\n            duration,\r\n            currentTime,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\r\n            fileId,\r\n            currentTime,\r\n            duration,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleVolumeChange = event => {\r\n        const { onVolumeChange } = this.props;\r\n\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { volume } = video;\r\n\r\n        this.setState({\r\n            volume\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\r\n        onVolumeChange && onVolumeChange(event);\r\n    };\r\n\r\n    handleProgress = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n\r\n        const { buffered } = video;\r\n\r\n        this.setState({\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerProgress',\r\n            fileId,\r\n            buffered\r\n        });\r\n    };\r\n\r\n    handleWaiting = () => {\r\n        this.setState({ waiting: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    startStopPlayer = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        const { waiting } = this.state;\r\n        if (waiting) {\r\n            this.setState({\r\n                play: !this.state.play,\r\n                hidden: false\r\n            });\r\n        } else {\r\n            if (video.paused) {\r\n                video.play()\r\n            } else {\r\n                video.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePlayerMouseDown = event => {\r\n        const pip = document.getElementById('pip-player-wrapper');\r\n        if (pip) pip.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        this.offsetX = event.nativeEvent.offsetX;\r\n        this.offsetY = event.nativeEvent.offsetY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.setState({\r\n            windowDragging: true\r\n        });\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.setState({\r\n            windowDragging: false\r\n        });\r\n    };\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('pip-player');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        PlayerStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\r\n\r\n        const player = document.getElementById('pip-player');\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            draggingTime: video.currentTime\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            draggingTime: value * video.duration\r\n        });\r\n    };\r\n\r\n    handleChangeCommitted = () => {\r\n        const { dragging, draggingTime } = this.state;\r\n        if (!dragging) return;\r\n\r\n        this.setState({\r\n            dragging: false,\r\n            currentTime: draggingTime,\r\n            draggingTime: 0\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            if (Number.isFinite(draggingTime)) {\r\n                video.currentTime = draggingTime;\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePanelEnter = () => {\r\n        this.panelEnter = true;\r\n    };\r\n\r\n    handlePanelLeave = () => {\r\n        this.panelEnter = false;\r\n    };\r\n\r\n    handleMouseOver = event => {\r\n        this.mouseDownRoot = false;\r\n        const { hidden } = this.state;\r\n\r\n        if (hidden) {\r\n            this.setState({\r\n                hidden: false\r\n            });\r\n        }\r\n\r\n        clearTimeout(this.mouseOverTimeout);\r\n        this.mouseOverTimeout = setTimeout(() => {\r\n            if (this.panelEnter) return;\r\n            if (!this.state.play) return;\r\n            if (!this.state.duration) return;\r\n\r\n            this.setState({\r\n                hidden: true\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePictureInPicture',\r\n            videoInfo: null\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChange = (event, volume) => {\r\n        if (volume === this.state.volume) return;\r\n\r\n        this.setState({\r\n            volume\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            video.volume = volume;\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChangeCommitted = event => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        document.activeElement.blur();\r\n    };\r\n\r\n    handleMute = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        if (video.volume === 0) {\r\n            video.volume = this.prevVolume || 0.5;\r\n        } else {\r\n            this.prevVolume = video.volume;\r\n            video.volume = 0;\r\n        }\r\n    }\r\n\r\n    handleFullScreen = event => {\r\n        event && event.stopPropagation();\r\n\r\n        const root = document.getElementById('pip-player-wrapper');\r\n        if (!root) return;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.requestFullscreen(root);\r\n    };\r\n\r\n    requestFullscreen(element) {\r\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\r\n\r\n        method && method.call(element);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    getCurrentTime = () => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        return PlayerStore.getCurrentTime(unique_id);\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    handlePanelDoubleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClickRoot = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.startStopPlayer();\r\n    }\r\n\r\n    handleDoubleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.handleFullScreen(event);\r\n    };\r\n\r\n    handleFocus = () => {\r\n        KeyboardManager.add(this.keyboardHandler);\r\n\r\n    };\r\n\r\n    handleBlur = () => {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    };\r\n\r\n    render() {\r\n        const { fileId } = this.props;\r\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\r\n\r\n        const time = dragging ? draggingTime : currentTime;\r\n        const value = duration > 0 ? time / duration : 0;\r\n        const bufferedTime = Player.getBufferedTime(time, buffered);\r\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\r\n\r\n        const timeString = getDurationString(Math.floor(time) || 0);\r\n        const durationString = getDurationString(Math.floor(duration) || 0);\r\n\r\n        const pictureInPictureEnabled = true;\r\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\r\n\r\n        return (\r\n            <div\r\n                id='pip-player'\r\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\r\n                onMouseDown={this.handlePlayerMouseDown}\r\n                onMouseMove={this.handleMouseOver}\r\n                onClick={this.handleClickRoot}\r\n                onDoubleClick={this.handleDoubleClick}>\r\n                <div\r\n                    id='pip-player-wrapper'\r\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleBlur}\r\n                    tabIndex={0}>\r\n                    <div id='pip-player-container'/>\r\n                    <Hint fileId={fileId}/>\r\n\r\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\r\n                        <CloseIcon/>\r\n                    </button>\r\n                    <div\r\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\r\n                        onClick={e => e.stopPropagation()}\r\n                        onMouseDown={e => e.stopPropagation()}\r\n                        onDoubleClick={this.handlePanelDoubleClick}\r\n                        onMouseEnter={this.handlePanelEnter}\r\n                        onMouseLeave={this.handlePanelLeave}>\r\n                        <div className='player-slider'>\r\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\r\n                            <Slider\r\n                                value={value}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                classes={{\r\n                                    root: 'player-slider-root',\r\n                                    rail: 'player-slider-rail',\r\n                                    track: 'player-slider-track',\r\n                                    thumb: 'player-slider-thumb',\r\n                                    active: 'player-slider-active'\r\n                                }}\r\n                                onChange={this.handleChange}\r\n                                onChangeCommitted={this.handleChangeCommitted}\r\n                                onMouseDown={this.handleMouseDown}\r\n                            />\r\n                        </div>\r\n                        <div className='player-controls'>\r\n                            <button className='player-button' onClick={this.handleClick}>\r\n                                {play ? <PauseIcon/> : <PlayIcon/>}\r\n                            </button>\r\n                            <div className='player-time'>\r\n                                {`${timeString} / ${durationString}`}\r\n                            </div>\r\n                            <div className='player-volume'>\r\n                                <Slider\r\n                                    value={volume}\r\n                                    min={0}\r\n                                    max={1}\r\n                                    step={0.001}\r\n                                    classes={{\r\n                                        root: 'player-volume-root',\r\n                                        rail: 'player-volume-rail',\r\n                                        track: 'player-volume-track',\r\n                                        thumb: 'player-volume-thumb',\r\n                                        active: 'player-volume-active'\r\n                                    }}\r\n                                    onChange={this.handleVolumeSliderChange}\r\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\r\n                                />\r\n                            </div>\r\n                            <button className='player-button' onClick={this.handleMute}>\r\n                                {Player.getVolumeIcon(volume)}\r\n                            </button>\r\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\r\n                                <FullScreen/>\r\n                            </button>\r\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\r\n                            {/*    <PictureInPictureIcon/>*/}\r\n                            {/*</button>*/}\r\n                        </div>\r\n                    </div>\r\n                    <Progress waiting={waiting}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPipPlayer.propTypes = {\r\n\r\n};\r\n\r\nexport default PipPlayer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, photo } = this.props;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevPhoto: photo,\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            file: file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, photo } = props;\r\n\r\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevPhoto: photo,\r\n                width: PROFILE_PHOTO_BIG_SIZE,\r\n                height: PROFILE_PHOTO_BIG_SIZE,\r\n                file: photo.big\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n\r\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n\r\n        if (userId === update.userId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(event);\r\n    };\r\n\r\n    handlePhotoClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onPrevious } = this.props;\r\n\r\n        onPrevious && onPrevious(event);\r\n    };\r\n\r\n    render() {\r\n        const { file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        return (\r\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\r\n                <FileProgress file={file} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n\r\n    onClose: PropTypes.func,\r\n    onPrevious: PropTypes.func\r\n};\r\n\r\nexport default ProfileMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport './MediaInfo.css';\r\n\r\nclass ProfileMediaInfo extends React.Component {\r\n    render() {\r\n        const { chatId, date, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-info' style={style}>\r\n                <div className='media-info-wrapper'>\r\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\r\n                        </div>\r\n                        {date && (\r\n                            <div className='media-info-row meta'>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    date: PropTypes.string\r\n};\r\n\r\nexport default ProfileMediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\r\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\r\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\r\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\r\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.history = [];\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n\r\n        const { chatId, fileId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevFileId: fileId,\r\n            currentIndex: 0,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            currentFileId,\r\n            hasPreviousMedia,\r\n            hasNextMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened\r\n        } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentFileId !== currentFileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        const photo = getPhotoFromChat(chatId);\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n\r\n        this.loadHistory(photo);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserProfilePhotos',\r\n            user_id: getChatUserId(chatId),\r\n            offset: 0,\r\n            limit: 100\r\n        });\r\n\r\n        this.history = result.photos;\r\n        this.firstSliceLoaded = result.photos.length === 0;\r\n\r\n        const index = 0;\r\n\r\n        this.setState({\r\n            currentIndex: index,\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n    };\r\n\r\n    handleClose = () => {\r\n        setProfileMediaViewerContent(null);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        if (!photo.big) return;\r\n\r\n        const file = FileStore.get(photo.big.id) || photo.big;\r\n        if (!file) return;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        let inputFile = null;\r\n        let inputMessagePhoto = null;\r\n        const inHistory = this.history && index >= 0 && index < this.history.length;\r\n        if (inHistory) {\r\n            const photo = getProfilePhoto(this.history[index]);\r\n            if (!photo) return;\r\n\r\n            let { big: file } = photo;\r\n            if (!file) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileId',\r\n                id: file.id\r\n            };\r\n        } else {\r\n            const chatPhoto = getPhotoFromChat(chatId);\r\n            if (!chatPhoto) return;\r\n\r\n            const { big: file } = chatPhoto;\r\n            if (!file) return;\r\n\r\n            const blob = FileStore.getBlob(file.id);\r\n            if (!blob) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileBlob',\r\n                data: blob,\r\n                name: ''\r\n            };\r\n        }\r\n\r\n        if (!inputFile) return;\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessagePhoto',\r\n            photo: inputFile,\r\n            thumbnail: null,\r\n            added_sticker_file_ids: [],\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            caption: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: null\r\n            },\r\n            ttl: 0\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleDelete = async () => {\r\n        const { chatId } = this.props;\r\n        const {\r\n            currentIndex,\r\n            totalCount,\r\n            hasNextMedia,\r\n            hasPreviousMedia\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n\r\n        const { id } = photo;\r\n        if (!id) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'deleteProfilePhoto',\r\n            profile_photo_id: id\r\n        });\r\n\r\n        this.history.splice(index, 1);\r\n        if (!this.history.length) {\r\n            this.handleClose();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            totalCount: totalCount - 1\r\n        });\r\n\r\n        if (hasNextMedia) {\r\n            const nextIndex = currentIndex - 1;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === 0) {\r\n                    this.loadNext();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (hasPreviousMedia) {\r\n            const nextIndex = currentIndex;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === this.history.length - 1) {\r\n                    this.loadPrevious();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        return;\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex - 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        return;\r\n    };\r\n\r\n    loadMedia = (index, obj, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentIndex: index,\r\n                ...obj,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        const { chatId } = this.props;\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            currentIndex,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount,\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const inHistory = index >= 0 && index < this.history.length;\r\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\r\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\r\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\r\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\r\n        const userProfilePhoto = inHistory ? this.history[index] : null;\r\n        const { big: file } = photo;\r\n        const isMe = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\r\n                    <MediaViewerFooterText\r\n                        title={t('AttachPhoto')}\r\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\r\n                    />\r\n                    <div style={{ width: 64 }}/>\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerDownloadButton>\r\n                    {isMe && (\r\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\r\n                            <DeleteIcon />\r\n                        </MediaViewerFooterButton>\r\n                    )}\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(ProfileMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../Utils/HOC';\r\nimport withLanguage from '../Language';\r\nimport withSnackbarNotifications from '../Notifications';\r\nimport Actions from './Actions';\r\nimport Call from './Calls/Call';\r\nimport ChatInfo from './ColumnRight/ChatInfo';\r\nimport Dialogs from './ColumnLeft/Dialogs';\r\nimport DialogDetails from './ColumnMiddle/DialogDetails';\r\nimport ForwardDialog from './Popup/ForwardDialog';\r\nimport GroupCall from './Calls/GroupCall';\r\nimport InstantViewer from './InstantView/InstantViewer';\r\nimport MediaViewer from './Viewer/MediaViewer';\r\nimport PipPlayer from './Player/PipPlayer';\r\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\r\nimport { highlightMessage } from '../Actions/Client';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport CallStore from '../Stores/CallStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport InstantViewStore from '../Stores/InstantViewStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport PlayerStore from '../Stores/PlayerStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport '../TelegramApp.css';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogDetailsRef = React.createRef();\r\n\r\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            isSmallWidth,\r\n            forwardInfo: null,\r\n            instantViewContent: null,\r\n            videoInfo: null,\r\n            groupCallId: 0,\r\n            callId: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\r\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\r\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\r\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\r\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdateCallPanel = update => {\r\n        const { opened, callId } = update;\r\n\r\n        this.setState({\r\n            callId: opened ? callId : 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateGroupCallPanel = update => {\r\n        const { opened } = update;\r\n        const { currentGroupCall } = CallStore;\r\n\r\n        this.setState({\r\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\r\n        });\r\n    };\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n\r\n        this.setState({\r\n            videoInfo\r\n        });\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        const { content } = update;\r\n\r\n        this.setState({\r\n            instantViewContent: content\r\n        });\r\n    };\r\n\r\n    onClientUpdateOpenChat = update => {\r\n        const { chatId, messageId, popup, options } = update;\r\n\r\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\r\n    };\r\n\r\n    onClientUpdateOpenUser = update => {\r\n        const { userId, popup } = update;\r\n\r\n        this.handleSelectUser(userId, popup);\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        this.setState({ isChatDetailsVisible });\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        const { mediaViewerContent } = AppStore;\r\n\r\n        this.setState({ mediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        const { profileMediaViewerContent } = AppStore;\r\n\r\n        this.setState({ profileMediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateForward = update => {\r\n        const { info } = update;\r\n\r\n        this.setState({ forwardInfo: info });\r\n    };\r\n\r\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\r\n        const currentChatId = AppStore.getChatId();\r\n        const currentDialogChatId = AppStore.dialogChatId;\r\n        const currentMessageId = AppStore.getMessageId();\r\n\r\n        if (popup) {\r\n            if (currentDialogChatId !== chatId) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateDialogChatId',\r\n                    chatId\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToMessage();\r\n            if (messageId) {\r\n                highlightMessage(chatId, messageId);\r\n            }\r\n        } else if (currentChatId === chatId && !messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToStart();\r\n        } else {\r\n            TdLibController.setChatId(chatId, messageId, options);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async (userId, popup) => {\r\n        if (!userId) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: userId,\r\n            force: true\r\n        });\r\n\r\n        this.handleSelectChat(chat.id, null, popup);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            instantViewContent,\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            forwardInfo,\r\n            videoInfo,\r\n            callId,\r\n            groupCallId,\r\n            isSmallWidth\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames('page', {\r\n                        'page-small': isSmallWidth,\r\n                        'page-third-column': isChatDetailsVisible\r\n                    })}>\r\n                    <Dialogs />\r\n                    <DialogDetails ref={this.dialogDetailsRef} />\r\n                    {isChatDetailsVisible && <ChatInfo />}\r\n                </div>\r\n                <Actions/>\r\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\r\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\r\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\r\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\r\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\r\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\r\n                {Boolean(callId) && <Call callId={callId}/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withLanguage,\r\n    withSnackbarNotifications\r\n);\r\n\r\nexport default enhance(MainPage);\r\n"],"sourceRoot":""}